<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java8新特性</title>
      <link href="/posts/f41870e2/"/>
      <url>/posts/f41870e2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>例1、用lambda表达式实现Runnable<br>    1.8之前<br>    <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">new Thread(new Runnable()&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void run()&#123;</span><br><span class="line">    System.out.println(&quot;Before java8 ,too much code for too little to do&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;java 8方式</span><br><span class="line">new Thread(() -&gt; System.out.println(&quot;In java8 ,Lambda expression rocks !!&quot;)).start();</span><br></pre></td></tr></table></figure></div></p><p>例2 使用java 8 lambda表达式进行事件处理</p><a id="more"></a><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; java 8之前</span><br><span class="line">jButton show &#x3D;new JButton(&quot;Show&quot;);</span><br><span class="line">show.addActionListener(new ActionListener())&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void actionPerformed(ActionEvent e)&#123;</span><br><span class="line">        System.out.println(&quot;Event handing without lambda expression is boring&quot;);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">show.addActionListener((e) -&gt; &#123;</span><br><span class="line">            System.out.println(&quot;Lihgt,camera, Action !! Lambda expressions Rocks&quot;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></div><p>例3 使用lambda表达式对列表进行迭代</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;java8之前</span><br><span class="line">List feature&#x3D;arrays.asList(&quot;Lambdas&quot;,&quot;default Method&quot;,&quot;Stream API&quot;,&quot;Date adn Time Api&quot;);</span><br><span class="line">for(String feature : features)&#123;</span><br><span class="line">    System.out.println(feature);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;java 8之后</span><br><span class="line">List featuers&#x3D;arrays.asList(&quot;Lambdas&quot;,&quot;default Method&quot;,&quot;stream Api&quot;,&quot;date and time&quot;);</span><br><span class="line">features.foreach(n-&gt;System.out.println(n));</span><br><span class="line">&#x2F;&#x2F; 使用 java 8 的方式引用更方便，方法引用由::双冒号操作提示</span><br><span class="line">&#x2F;&#x2F;看起来像c++的作用域解析运算符</span><br><span class="line">features.foreach(System.out::println);</span><br></pre></td></tr></table></figure></div><p>例4 使用lambda表达式和函数式接口Predicate<br>    java8添加了一个包  叫作 java.util.function 用来支持函数式编程</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> public static void main(args[])&#123;</span><br><span class="line">    List languages &#x3D; Arrays.asList(&quot;Java&quot;, &quot;Scala&quot;, &quot;C++&quot;, &quot;Haskell&quot;, &quot;Lisp&quot;);</span><br><span class="line">    System.out.println(&quot;Languages which starts with J :&quot;);</span><br><span class="line">    filter(languages, (str)-&gt;str.startsWith(&quot;J&quot;));</span><br><span class="line">    System.out.println(&quot;Languages which ends with a &quot;);</span><br><span class="line">    filter(languages, (str)-&gt;str.endsWith(&quot;a&quot;));</span><br><span class="line">    System.out.println(&quot;Print all languages :&quot;);</span><br><span class="line">    filter(languages, (str)-&gt;true);</span><br><span class="line">    System.out.println(&quot;Print no language : &quot;);</span><br><span class="line">    filter(languages, (str)-&gt;false);</span><br><span class="line">    System.out.println(&quot;Print language whose length greater than 4:&quot;);</span><br><span class="line">    filter(languages, (str)-&gt;str.length() &gt; 4);</span><br><span class="line">&#125;</span><br><span class="line">public static void filter(List names, Predicate condition) &#123;</span><br><span class="line">    for(String name: names)  &#123;</span><br><span class="line">        if(condition.test(name)) &#123;</span><br><span class="line">            System.out.println(name + &quot; &quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;更好的办法</span><br><span class="line">    public static void filter(List names,Predicate condition)&#123;</span><br><span class="line">        name.stream().filter((name)-&gt;(condition.test(name))).forEach((name)-&gt;&#123;</span><br><span class="line">           System.out.println(name + &quot; &quot;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>例5 如何在lambda表达式中加入Predicate</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 甚至可以用and()、or()和xor()逻辑函数来合并Predicate，</span><br><span class="line">&#x2F;&#x2F; 例如要找到所有以J开始，长度为四个字母的名字，你可以合并两个Predicate并传入</span><br><span class="line">Predicate&lt;String&gt; startsWithJ &#x3D; (n) -&gt; n.startsWith(&quot;J&quot;);</span><br><span class="line">Predicate&lt;String&gt; fourLetterLong &#x3D; (n) -&gt; n.length() &#x3D;&#x3D; 4;</span><br><span class="line">names.stream()</span><br><span class="line">    .filter(startsWithJ.and(fourLetterLong))</span><br><span class="line">    .forEach((n) -&gt; System.out.print(&quot;nName, which starts with &#39;J&#39; and four letter long is : &quot; + n));</span><br></pre></td></tr></table></figure></div><p>例6 java8中使用lambda表达式的map和Reduce示例</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;不使用lambda表达式为每个订单加上12的税 </span><br><span class="line">List costBeforeTax&#x3D;Arrays.asList(100,200,300,400,500);</span><br><span class="line">for(Integer cost : costBeforeTax)&#123;</span><br><span class="line">    double price&#x3D;cost+.12*cost;</span><br><span class="line">    System.out.println(price);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;使用lmabda表达式</span><br><span class="line">List costBeforeTax&#x3D;Arrays.asList(100,200,300,400,500);</span><br><span class="line">costBeforeTax.stream().map((cost)-&gt;cost+.12*cost).forEach(System.out:println);</span><br></pre></td></tr></table></figure></div><p>例6.2 java8 中使用lambda表达式的Map和Reduce示例</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;为每个订单加上12%的税</span><br><span class="line">List costBeforeTax &#x3D; Arrays.asList(100,200,300,400,500);</span><br><span class="line">double total &#x3D; 0;</span><br><span class="line">for(Integer cost : costBeforeTax) &#123;</span><br><span class="line">    double price &#x3D; cost +.12*cost;</span><br><span class="line">    total &#x3D;total +price;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(&quot;Total : &quot; + total);</span><br><span class="line">&#x2F;&#x2F;新方法：</span><br><span class="line">List costBeforeTax &#x3D; Arrays.asList(100,200,300,400,500);</span><br><span class="line">double bill &#x3D; costBeforeTax.stream().map((cost)-&gt;cost + .12*cost).reduce((sum,cost) -&gt; sum+cost).get();</span><br><span class="line">System.out.println(&quot;Total : &quot;+bill);</span><br></pre></td></tr></table></figure></div><p>例7 通过过滤创建一个String 列表</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;创建一个字符串列表，每个字符串长度大于2</span><br><span class="line">List&lt;String&gt; filtered &#x3D;strList.stream().filter(x-&gt;x.length()&gt;2).collect(Collectors.toList());</span><br><span class="line">System.out.println(&quot;Original List : %s,filtered list : %s %n &quot;,strList,filtered);</span><br></pre></td></tr></table></figure></div><p>例8 对列表的每个元素应用函数</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;将字符串转换成大写并用逗号链接起来</span><br><span class="line">List&lt;String&gt; G7 &#x3D;Arrays.asList(&quot;lmbada&quot;,&quot;default method&quot;,&quot;date and time&quot;,&quot;stream&quot;);</span><br><span class="line">String G7countries &#x3D;G7.stream().map(x-&gt;x.toUpperCase()).collect（Collectors.join(&quot;,&quot;)）;</span><br></pre></td></tr></table></figure></div><p>例9 复制不同的值 ，创建一个子列表</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;使用流的distinct()方法对集合进行去重</span><br><span class="line">List&lt;Integer&gt; numbers &#x3D;Arrays.asList(9,10,3,4,7,3,4);</span><br><span class="line">List&lt;Integer&gt; distinct &#x3D; numbers.stream().map(i -&gt; i*i).distinct().collect(Collectors.toList());</span><br><span class="line">例10 计算集合元素的最大值最小值 总和 及平均值</span><br><span class="line">&#x2F;&#x2F;获取数字的个数、最小值、最大值、总和以及平均值</span><br><span class="line">List&lt;Integer&gt; primes &#x3D; Arrays.asList(2, 3, 5, 7, 11, 13, 17, 19, 23, 29);</span><br><span class="line">IntSummaryStatistics stats &#x3D; primes.stream().mapToInt((x) -&gt; x).summaryStatistics();</span><br><span class="line">System.out.println(&quot;Highest prime number in List : &quot; + stats.getMax());</span><br><span class="line">System.out.println(&quot;Lowest prime number in List : &quot; + stats.getMin());</span><br><span class="line">System.out.println(&quot;Sum of all prime numbers : &quot; + stats.getSum());</span><br><span class="line">System.out.println(&quot;Average of all prime numbers : &quot; + stats.getAverage());</span><br></pre></td></tr></table></figure></div><p>Lambda表达式 vs 匿名类<br>关键的不同点就是关键字 this。匿名类的 this 关键字指向匿名类，而lambda表达式的 this 关键字指向包围lambda表达式的类。另一个不同点是二者的编译方式。<br><br>Java编译器将lambda表达式编译成类的私有方法。使用了Java 7的 invokedynamic 字节码指令来动态绑定这个方法。<br>，实用函数式编程这本书<a href="https://www.amazon.com/Java-Lambdas-Pragmatic-Functional-Programming/dp/B00OVMRHPO/ref=sr_1_3?ie=UTF8&qid=1438567374&sr=8-3&keywords=Java+8+Lambdas%2C+pragmatic+functional+programming" target="_blank" rel="external nofollow noreferrer noopener">Java 8 Lambdas, pragmatic functional programming</a>，作者是Richard Warburton，或者也可以看看Manning的Java 8实战<a href="https://www.amazon.com/Java-Action-Lambdas-functional-style-programming/dp/1617291994/ref=sr_1_1?ie=UTF8&qid=1438567348&sr=8-1&keywords=Java+8+in+Action" target="_blank" rel="external nofollow noreferrer noopener">Java 8 in Action</a><br>需要注意的地方<br>1）lambda表达式仅能放入如下代码：预定义使用了 @Functional 注释的函数式接口，自带一个抽象函数的方法，或者SAM（Single Abstract Method 单个抽象方法）类型。<br><br>这些称为lambda表达式的目标类型，可以用作返回类型，或lambda目标代码的参数。例如，若一个方法接收Runnable、Comparable或者 Callable 接口，都有单个抽象方法，<br><br>可以传入lambda表达式。类似的，如果一个方法接受声明于 java.util.function 包内的接口，例如 Predicate、Function、Consumer 或 Supplier，那么可以向其传lambda表达式。<br>2）lambda表达式内可以使用方法引用，仅当该方法不修改lambda表达式提供的参数。本例中的lambda表达式可以换为方法引用，因为这仅是一个参数相同的简单方法调用。<br></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.forEach(n -&gt; System.out.println(n));</span><br><span class="line">list.forEach(System.out::println);  &#x2F;&#x2F; 使用方法引用</span><br></pre></td></tr></table></figure></div><p>然而，若对参数有任何修改，则不能使用方法引用，而需键入完整地lambda表达式，如下所示：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.forEach((String s) -&gt; System.out.println(&quot;*&quot; + s + &quot;*&quot;));</span><br></pre></td></tr></table></figure></div><p>事实上，可以省略这里的lambda参数的类型声明，编译器可以从列表的类属性推测出来<br>3）lambda内部可以使用静态、非静态和局部变量，这称为lambda内的变量捕获。<br>4）Lambda表达式在Java中又称为闭包或匿名函数<br>5）Lambda方法在编译器内部被翻译成私有方法，并派发 invokedynamic 字节码指令来进行调用。可以使用JDK中的 javap 工具来反编译class文件。<br><br>使用 javap -p 或 javap -c -v 命令来看一看lambda表达式生成的字节码。大致应该长这样：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private static java.lang.Object lambda$0(java.lang.String);</span><br></pre></td></tr></table></figure></div><p>6）lambda表达式有个限制，那就是只能引用 final 或 final 局部变量，这就是说不能在lambda内部修改定义在域外的变量。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; primes &#x3D; Arrays.asList(new Integer[]&#123;2, 3,5,7&#125;);</span><br><span class="line">int factor &#x3D; 2;</span><br><span class="line">primes.forEach(element -&gt; &#123; factor++; &#125;);</span><br><span class="line">Compile time error : &quot;local variables referenced from a lambda expression must be final</span><br></pre></td></tr></table></figure></div><p>另外，只是访问它而不作修改是可以的，因此，它看起来更像不可变闭包，类似于Python。<br>原文链接： <a href="http://javarevisited.blogspot.sg/2014/02/10-example-of-lambda-expressions-in-java8.html" target="_blank" rel="external nofollow noreferrer noopener">javarevisited</a> 翻译： ImportNew.com - lemeilleur<br>译文链接： <a href="http://www.importnew.com/16436.html" target="_blank" rel="external nofollow noreferrer noopener">http://www.importnew.com/16436.html</a><br>[ 转载请保留原文出处、译者和译文链接。]</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Disruptor</title>
      <link href="/posts/4eaabfbd/"/>
      <url>/posts/4eaabfbd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="%E5%88%9D%E8%AF%86Disruptor/1.jpg" data-fancybox="group" data-caption="风景" class="fancybox"><img src="/img/loading.gif" alt="风景" title="风景" data-src="%E5%88%9D%E8%AF%86Disruptor/1.jpg" class="lazyload"></a></p><h1 id="初识Disruptor"><a href="#初识Disruptor" class="headerlink" title="初识Disruptor"></a>初识Disruptor</h1><p>本文主要对Disruptor做一个简单的了解，首先我们讲述一下Disruptor的背景和用途。然后再讲述一下Disruptor的提点，接着我们一起来了解一下Disruptor框架里面一些<br>关键的api，最后我们意淫一个可能的需求，以此做一个应用Disruptor的demo，完成Disruptor的入门。</p><ul><li><a href="#Disruptor的背景">Disruptor的背景</a></li><li>[Disruptor的特点及应用的场景])(#Disruptor的特点及应用的场景)</li><li><a href="#Disruptor的关键类">Disruptor的关键api</a></li><li><a href="#一个简单的Disruptor的Demo">一个简单的Disruptor的Demo</a><a id="more"></a></li></ul><h2 id="Disruptor的背景"><a href="#Disruptor的背景" class="headerlink" title="Disruptor的背景"></a>Disruptor的背景</h2><p> <strong>Disruptor是什么？</strong><br>引用自 <a href="https://martinfowler.com/articles/lmax.html" target="_blank" rel="external nofollow noreferrer noopener">Martin Fowler大神的一篇文章：LMAX架构</a><br>LMAX是一种新型零售金融交易平台，它能够以很低的延迟(latency)产生大量交易(吞吐量). 这个系统是建立在JVM平台上，核心是一个业务逻辑处理器，它能够在一个线程里每秒处理6百万订单. 业务逻辑处理器完全是运行在内存中(in-memory)，使用事件源驱动方式(event sourcing). 业务逻辑处理器的核心是Disruptors，这是一个并发组件，能够在无锁的情况下实现网络的Queue并发操作。他们的研究表明，现在的所谓高性能研究方向似乎和现代CPU设计是相左的。<br>它之所以引起人们的关注,是因为它是一个非常高性能系统，这个系统是建立在JVM平台上，核心是一个业务逻辑处理器，官方号称它能够在一个线程里每秒处理6百万订单.<br>一个仅仅部署在4台服务器上的服务，每秒向Database写入数据超过100万行数据，每分钟产生超过1G的数据。而每台服务器（8核12G）上CPU占用不到100%，load不超过5。</p><h2 id="Disruptor的特点及应用的场景"><a href="#Disruptor的特点及应用的场景" class="headerlink" title="Disruptor的特点及应用的场景"></a>Disruptor的特点及应用的场景</h2><p> <strong>Disruptor为什么性能高</strong><br> 1 基于缓存友好的数组而不是链表，且数组大小为2的n次方，可以使用code&amp;(length-1)的方式代替code%length求余<br> 2 通过内存屏障（java中的volatile）和原子性的CAS操作替换锁，不涉及到操作系统的内核切换。<br> 3 通过将一些频繁更新的变量填充至64位已解决伪共享问题。提高了缓存命中率。<br> 4 通过更新之前加入的变量，而不是删除它们，降低了垃圾回收的频率。</p><p> <strong>应用场景</strong><br> 你在网上使用信用卡支付订单时，服务器需要调用银行的信用卡验证接口进行验证，验证完毕之后需要更新数据库的订单信息，同时需要发送kafka消息，执行完前两部操作之后，最后需要发送jms消息。接口验证需要需要一点时间，此时服务器这边的线程会阻塞一小段时间。 我们将这个操作分成两部分，1 获取订单信息，将它做为输入事件 2信用卡验证，更新数据库和kafka消息，sms消息作为事件处理</p><h2 id="Disruptor的关键类"><a href="#Disruptor的关键类" class="headerlink" title="Disruptor的关键类"></a>Disruptor的关键类</h2><p><strong>环形队列ringbuffer</strong><br>基于数组的缓存实现，它内部持有对Executor、WaitStrategy、生产者和消费者访问控制器的引用,通过一个名为cursor的Sequence对象指示队列的头，协调多个生产者向RingBuffer中添加消息，并用于在消费者端判断RingBuffer是否为空<br><strong>Sequence</strong><br> 一个 Sequence 用于跟踪标识某个特定的事件处理者( RingBuffer/Consumer )的处理进度<br> 通过填充Sequence避免了伪共享问题。<br><strong>WaitStrategy</strong><br> 功能包括：当没有可消费的事件时，根据特定的实现进行等待，有可消费事件时返回可事件序号；有新事件发布时通知等待的 SequenceBarrier。<br><strong>Sequencer</strong><br> 生产者用于访问缓存的控制器，它持有消费者序号的引用；新事件发布后通过WaitStrategy 通知正在等待的SequenceBarrier。<br><strong>SequenceBarrier</strong><br>消费者关卡。消费者用于访问缓存的控制器，每个访问控制器还持有前置访问控制器的引用，用于维持正确的事件处理顺序；通过WaitStrategy获取可消费事件序号。<br><strong>EventProcessor</strong><br>事件处理器，是可执行单元，运行在指定的Executor里；它会不断地通过SequenceBarrier获取可消费事件，当有可消费事件时调用用户提供的 EventHandler实现处理事件。<br><strong>EventTranslator</strong><br>事件转换器，由于Disruptor只会覆盖缓存，需要通过此接口的实现来更新缓存里的事件来覆盖旧事件。<br><strong>RingBuffer</strong><br>基于数组的缓存实现，它内部持有对Executor、WaitStrategy、生产者和消费者访问控制器的引用。<br><strong>Disruptor</strong><br>提供了对 RingBuffer 的封装，并提供了一些DSL风格的方法，方便使用。</p><h2 id="一个简单的Disruptor的Demo"><a href="#一个简单的Disruptor的Demo" class="headerlink" title="一个简单的Disruptor的Demo"></a>一个简单的Disruptor的Demo</h2><p> 我们将第二部分的场景作为我们的需求，实现一个大致的demo。<br> 关键代码如下。<br>信用卡验证消费者</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;模拟信用卡验证</span><br><span class="line"> public class OrderDataInCardVerificationHander implements EventHandler&lt;InOrderDataEvent&gt; &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void onEvent(InOrderDataEvent event,long sequence, boolean endOfBatch) throws Exception &#123;</span><br><span class="line">        Thread.sleep(1000L);</span><br><span class="line">        long threadId &#x3D; Thread.currentThread().getId();</span><br><span class="line">        String order &#x3D; event.getOrderCode();</span><br><span class="line">        System.out.println(String.format(&quot;Thread Id %s 信用卡验证成功 ....&quot;,threadId,order));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>事件对象</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class InOrderDataEvent &#123;</span><br><span class="line">    private String orderCode;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>生产线程</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public class OrderDataEventPublisher implements Runnable  &#123;</span><br><span class="line">    Disruptor&lt;InOrderDataEvent&gt; disruptor;</span><br><span class="line">    private CountDownLatch latch;</span><br><span class="line">    private static int LOOP&#x3D;10;&#x2F;&#x2F;10个订单</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public OrderDataEventPublisher(CountDownLatch latch, Disruptor&lt;InOrderDataEvent&gt; disruptor) &#123;</span><br><span class="line">        this.disruptor&#x3D;disruptor;</span><br><span class="line">        this.latch&#x3D;latch;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        OrderDataEventTranslator tradeTransloator&#x3D;new OrderDataEventTranslator();</span><br><span class="line">        for(int i&#x3D;0;i&lt;LOOP;i++)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                Thread.currentThread().sleep(1000L);</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;finally&#123;</span><br><span class="line">                &#x2F;&#x2F;publishEvent法必须包含在 finally 中以确保必须得到调用；如果某个请求的 sequence 未被提交，将会堵塞后续的发布操作或者其它的 producer。</span><br><span class="line">                disruptor.publishEvent(tradeTransloator);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        latch.countDown();</span><br><span class="line">        System.out.println(&quot;生产者写完&quot; +LOOP + &quot;个消息&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>定义event更新方式</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class OrderDataEventTranslator implements EventTranslator&lt;InOrderDataEvent&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F;Disruptor对于已消费的事件是不删除的，有新事件时只是用新事件的属性去替换旧事件的属性。</span><br><span class="line">    &#x2F;&#x2F;将新事件的属性转移以覆盖旧事件的好处，这样做虽然占用了内存，但是降低了垃圾回收出现的频率</span><br><span class="line">    @Override</span><br><span class="line">    public void translateTo(InOrderDataEvent event, long sequence) &#123;</span><br><span class="line">        this.generateTradeTransaction(event);</span><br><span class="line">    &#125;</span><br><span class="line">    private InOrderDataEvent generateTradeTransaction(InOrderDataEvent event)&#123;</span><br><span class="line">        int num &#x3D;  (int)(Math.random()*8000);</span><br><span class="line">        num &#x3D; num + 1000;</span><br><span class="line">        event.setOrderCode(&quot;订单&quot; + num);</span><br><span class="line">        System.out.println(&quot;Thread Id &quot; + Thread.currentThread().getId() + &quot; 获取了一个订单&quot;);</span><br><span class="line">        return event;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>启动disruptor</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">public class testDemo &#123;</span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        long beginTime&#x3D;System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        int bufferSize&#x3D;1024;</span><br><span class="line">        &#x2F;&#x2F;Disruptor交给线程池来处理，四个线程</span><br><span class="line">        ExecutorService executor&#x3D; Executors.newFixedThreadPool(4);</span><br><span class="line">        &#x2F;&#x2F;构造缓冲区与事件生成</span><br><span class="line">        Disruptor&lt;InOrderDataEvent&gt; disruptor&#x3D;new Disruptor&lt;InOrderDataEvent&gt;(new EventFactory&lt;InOrderDataEvent&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public InOrderDataEvent newInstance() &#123;</span><br><span class="line">                return new InOrderDataEvent();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, bufferSize, executor, ProducerType.SINGLE, new YieldingWaitStrategy());</span><br><span class="line"></span><br><span class="line">        OrderDataInCardVerificationHander orderDataInCardVerificationHander&#x3D;new OrderDataInCardVerificationHander();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;信用卡验证</span><br><span class="line">        EventHandlerGroup&lt;InOrderDataEvent&gt; handlerGroup&#x3D;disruptor</span><br><span class="line">                .handleEventsWith(orderDataInCardVerificationHander);</span><br><span class="line">        &#x2F;&#x2F;kafka消息，数据库更新</span><br><span class="line">        handlerGroup.then(new OrderDataInDbHandler());</span><br><span class="line">        OrderDataSmsHandler orderDataSmsHandler&#x3D;new OrderDataSmsHandler();</span><br><span class="line">        &#x2F;&#x2F;发送sms</span><br><span class="line">        handlerGroup.then(orderDataSmsHandler);</span><br><span class="line">        &#x2F;&#x2F;启动</span><br><span class="line">        disruptor.start();</span><br><span class="line">        CountDownLatch latch&#x3D;new CountDownLatch(1);</span><br><span class="line">        &#x2F;&#x2F;开始生产</span><br><span class="line">        executor.submit(new OrderDataEventPublisher(latch, disruptor));</span><br><span class="line">        &#x2F;&#x2F;等待生产者结束</span><br><span class="line">        latch.await();</span><br><span class="line">        &#x2F;&#x2F;Disruptor会阻塞至所有事件处理完毕</span><br><span class="line">        disruptor.shutdown();</span><br><span class="line">        executor.shutdown();</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;消耗时间:&quot;+(System.currentTimeMillis()-beginTime));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><a href="https://github.com/1315402725/DisruptorDemo.git" target="_blank" rel="external nofollow noreferrer noopener">demo的github地址:https://github.com/1315402725/DisruptorDemo.git</a><br><a href="https://github.com/LMAX-Exchange/disruptor.git" target="_blank" rel="external nofollow noreferrer noopener">disruptor源码的github地址:https://github.com/LMAX-Exchange/disruptor.git</a><br><a href="http://ifeve.com/disruptor/" target="_blank" rel="external nofollow noreferrer noopener">原理及描述请看:http://ifeve.com/disruptor/</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Disruptor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springBoot发送邮件</title>
      <link href="/posts/7d0ce5a1/"/>
      <url>/posts/7d0ce5a1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/1.jpg" data-fancybox="group" data-caption="教师节" class="fancybox"><img src="/img/loading.gif" alt="教师节" title="教师节" data-src="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/1.jpg" class="lazyload"></a></p><h1>springBoot发送邮件</h1>本文主要讲述了如何使用springboot自带的工具发送邮件<ul><li><a href="#在pom文件中加入依赖">在pom文件中加入依赖</a>   </li><li><a href="#配置application.yml">配置application.yml</a>   </li><li><a href="#邮箱配置">邮箱配置</a></li><li><a href="#github示例">github示例</a><a id="more"></a><h2 id="在pom文件中加入依赖"><a href="#在pom文件中加入依赖" class="headerlink" title="在pom文件中加入依赖"></a>在pom文件中加入依赖</h2>这是springboot自带的工具，我们可以直接使用<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- JavaMail --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-mail&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure></div><h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h2>在配置文件中配置相关的参数<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##springBoot的配置</span><br><span class="line">spring.mail.host: smtp.163.com</span><br><span class="line">spring.mail.username: sunyubei12@163.com</span><br><span class="line">#如果是网易邮箱的话，这个是自定义的，如果是qq邮箱，这一项是qq邮箱为我们生成的</span><br><span class="line">spring.mail.password: xxxxxxxx</span><br><span class="line">#协议</span><br><span class="line">spring.mail.protocol: smtp</span><br><span class="line">#端口</span><br><span class="line">spring.mail.port: 25</span><br><span class="line">spring.mail.properties.mail.smtp.auth: true</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.enable: true</span><br><span class="line">spring.mail.properties.mail.smtp.starttls.required: true</span><br><span class="line">spring.mail.default-encoding: UTF-8</span><br></pre></td></tr></table></figure></div><h2 id="邮箱配置"><a href="#邮箱配置" class="headerlink" title="邮箱配置"></a>邮箱配置</h2>如果我们要在程序中使用我们的邮箱发送邮件，就必须在邮箱中设置开启SMTP选项<br>SMTP协议全称为Simple Mail Transfer Protocol，译作简单邮件传输协议，它定义了邮件客户端软件于SMTP服务器之间，以及SMTP服务器与SMTP服务器之间的通信规则<br>网易邮箱的配置方式<br><a href="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/2.png" data-fancybox="group" data-caption="网易" class="fancybox"><img src="/img/loading.gif" alt="网易" title="网易" data-src="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/2.png" class="lazyload"></a><br>qq邮箱的配置方式<br><a href="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/3.png" data-fancybox="group" data-caption="qq" class="fancybox"><img src="/img/loading.gif" alt="qq" title="qq" data-src="springBoot%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/3.png" class="lazyload"></a><h2 id="github示例"><a href="#github示例" class="headerlink" title="github示例"></a>github示例</h2>这是github示例，里面包含springboot和使用spring自带的JavaMailSenderImpl两种实现方式<br><a href="https://github.com/1315402725/SendMailTest.git" target="_blank" rel="external nofollow noreferrer noopener">github地址:https://github.com/1315402725/SendMailTest.git</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> 邮件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对Next主题的显示进行缩放</title>
      <link href="/posts/9bdae4fd/"/>
      <url>/posts/9bdae4fd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><a href="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_0.jpg" data-fancybox="group" data-caption class="fancybox"><img src="/img/loading.gif" alt title data-src="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_0.jpg" class="lazyload"></a><br>NexT是一款简约版的博客主题， 拥有丰富而简单的配置,且有详细的说明文档。<br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external nofollow noreferrer noopener">Next配置官网:http://theme-next.iissnan.com/</a><br>本文主要讲述了通过css的方式对Hexo配置的Next主题进行放大<br>话不多说，放大之前。</p><a id="more"></a><p><a href="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_1.png" data-fancybox="group" data-caption="放大之前" class="fancybox"><img src="/img/loading.gif" alt="放大之前" title="放大之前" data-src="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_1.png" class="lazyload"></a><br>这样看着有点难受，左右有大片空白<br>一开始我使用了css中的transform堆主题内容进行放大，<br>在source/css/_schemes/Picses/_layout.styl文件末尾添加如下代码。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body &#123;transform: scale(1.5) translate(200px, 100px); &#125;</span><br></pre></td></tr></table></figure></div><p><a href="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_2.png" data-fancybox="group" data-caption="结果" class="fancybox"><img src="/img/loading.gif" alt="结果" title="结果" data-src="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_2.png" class="lazyload"></a><br>这种配置方式使得博客下方出现滚动条且有一定的失真。浏览器每次加载完页面之后滚动条显示最左边的内容，<br>显然这种方式不太好，谁也不想看博客的时候再去拉一下下方的滚动条。<br>后来通过百度，发现了另一中配置方式。<br>在source/css/_schemes/Picses/_layout.styl文件末尾添加如下代码。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">zoom : 1.5;</span><br><span class="line">-moz-transform: scale(1.4);-moz-transform-origin: 0 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>1.5就是放大倍数。</p><p><a href="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_3.png" data-fancybox="group" data-caption="这就代替了浏览器Contrl+鼠标滚轮的作用" class="fancybox"><img src="/img/loading.gif" alt="这就代替了浏览器Contrl+鼠标滚轮的作用" title="这就代替了浏览器Contrl+鼠标滚轮的作用" data-src="%E5%AF%B9Next%E4%B8%BB%E9%A2%98%E7%9A%84%E6%98%BE%E7%A4%BA%E8%BF%9B%E8%A1%8C%E7%BC%A9%E6%94%BE/hexo_3.png" class="lazyload"></a></p><p>但是这种配置方式也有一个问题，就是在配置完Canvas_nest动态背景之后，鼠标不会显示在动态线条中心。<br>这个问题我暂时还没搞定，</p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用h2做单元测试</title>
      <link href="/posts/3865a7bc/"/>
      <url>/posts/3865a7bc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1>《使用h2做单元测试》</h1>   H2是Thomas Mueller提供的一个开源的、纯java实现的关系数据库。h2数据库特点（1）性能、小巧（2）同时支持网络版和嵌入式版本，另外还提供了内存版（3）有比较好的兼容性，支持相当标准的sql标准（4）提供了非常友好的基于web的数据库管理界面<p>本文主要讲述了java使用h2做单元测试以及h2数据库在ssm框架和springboot中的配置。</p><p>H2数据库是一种由Java编写的，极小，速度极快，可嵌入式的开源数据库。非常适合用在单元测试等数据不需要保存的场景下面。即使换到一个新环境下，mysql数据库依赖不存在了，也能进行单元测试。<br>比如，你的程序脱离了公司内网环境连不上mysql数据库或者自己的笔记本不想开一个mysql服务，又或者你在调试一个非常恶心的bug,需要数据始终保持一种状态，这时候就可以用h2。</p><ul><li><a href="#SSM配置H2">h2在SSM框架中的配置</a>   </li><li><a href="#SpringBoot配置H2">h2在SpringBoot框架中的配置</a>   </li><li><a href="#配置示例">github地址(包含两种配置的示例)</a><a id="more"></a><h2 id="SSM配置H2"><a href="#SSM配置H2" class="headerlink" title="SSM配置H2"></a>SSM配置H2</h2></li></ul><p><a href="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/01.png" data-fancybox="group" data-caption="流程" class="fancybox"><img src="/img/loading.gif" alt="流程" title="流程" data-src="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/01.png" class="lazyload"></a></p><h3 id="1-pom-xml中加入依赖"><a href="#1-pom-xml中加入依赖" class="headerlink" title="1 pom.xml中加入依赖"></a>1 pom.xml中加入依赖</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;com.h2database&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;h2&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;1.4.195&lt;&#x2F;version&gt;</span><br><span class="line">   &lt;scope&gt;test&lt;&#x2F;scope&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure></div><h3 id="2-配置spring-xml配置文件"><a href="#2-配置spring-xml配置文件" class="headerlink" title="2 配置spring.xml配置文件"></a>2 配置spring.xml配置文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--运行时自启动h2服务 Spring中h2 TCP Server 配置 --&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;h2Server&quot; class&#x3D;&quot;org.h2.tools.Server&quot;</span><br><span class="line">  factory-method&#x3D;&quot;createTcpServer&quot; init-method&#x3D;&quot;start&quot; destroy-method&#x3D;&quot;stop&quot;&gt;</span><br><span class="line">&lt;constructor-arg value&#x3D;&quot;-tcp,-tcpAllowOthers,-tcpPort,9092&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;bean id&#x3D;&quot;masterDataSource&quot; class&#x3D;&quot;org.h2.jdbcx.JdbcConnectionPool&quot;</span><br><span class="line">  destroy-method&#x3D;&quot;dispose&quot;&gt;</span><br><span class="line">&lt;constructor-arg&gt;</span><br><span class="line">&lt;bean class&#x3D;&quot;org.h2.jdbcx.JdbcDataSource&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;property name&#x3D;&quot;URL&quot; value&#x3D;&quot;jdbc:h2:mem:zwt_feedback;MODE&#x3D;MySQL;&quot;&#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;user&quot; value&#x3D;&quot;root&quot; &#x2F;&gt;</span><br><span class="line">&lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;root&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line">&lt;&#x2F;constructor-arg&gt;</span><br><span class="line">&lt;&#x2F;bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;jdbc:initialize-database data-source&#x3D;&quot;masterDataSource&quot;&gt;</span><br><span class="line">&lt;jdbc:script location&#x3D;&quot;classpath:sql&#x2F;zwt_feedback.sql&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;jdbc:initialize-database&gt;</span><br></pre></td></tr></table></figure></div><h3 id="3-引入sql文件"><a href="#3-引入sql文件" class="headerlink" title="3 引入sql文件"></a>3 引入sql文件</h3><p>Sql文件里面包括 建表语句以及数据的插入语句<br>从sqlyog中导出的sql文件需要修改修改，修改内容如下<br><a href="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/02.png" data-fancybox="group" data-caption="修改前" class="fancybox"><img src="/img/loading.gif" alt="修改前" title="修改前" data-src="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/02.png" class="lazyload"></a><br>将最后的逗号换成分号，否则运行时会报错。<br><a href="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/03.png" data-fancybox="group" data-caption="修改后" class="fancybox"><img src="/img/loading.gif" alt="修改后" title="修改后" data-src="%E4%BD%BF%E7%94%A8h2%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/03.png" class="lazyload"></a></p><h3 id="4-测试运行"><a href="#4-测试运行" class="headerlink" title="4 测试运行"></a>4 测试运行</h3><h2 id="SpringBoot配置H2"><a href="#SpringBoot配置H2" class="headerlink" title="SpringBoot配置H2"></a>SpringBoot配置H2</h2><h3 id="1-pom-xml中加入依赖-1"><a href="#1-pom-xml中加入依赖-1" class="headerlink" title="1 pom.xml中加入依赖"></a>1 pom.xml中加入依赖</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.h2database&lt;&#x2F;groupId&gt;</span><br><span class="line">&lt;artifactId&gt;h2&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;scope&gt;runtime&lt;&#x2F;scope&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure></div><h3 id="2-Application-yml中加入配置"><a href="#2-Application-yml中加入配置" class="headerlink" title="2 Application.yml中加入配置"></a>2 Application.yml中加入配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#配置数据库连接地址</span><br><span class="line">spring.datasource.url: jdbc:h2:mem:zwt_feedback;MODE&#x3D;MySQL;</span><br><span class="line">#配置数据库驱动</span><br><span class="line">spring.datasource.driver-class-name: org.h2.Driver</span><br><span class="line">#配置数据库用户名</span><br><span class="line">spring.datasource.username: root</span><br><span class="line">#配置数据库密码</span><br><span class="line">spring.datasource.password: root</span><br><span class="line">#配置能远程访问</span><br><span class="line">spring.h2.console.settings.web-allow-others: true</span><br><span class="line">#配置访问地址</span><br><span class="line">spring.h2.console.path: &#x2F;h2-console</span><br><span class="line">#配置项目启动 h2就启动</span><br><span class="line">spring.h2.console.enabled: true</span><br><span class="line">#进行该配置后，每次启动程序，程序都会运行resources&#x2F;db&#x2F;schema.sql文件，对数据库的结构进行操作。</span><br><span class="line">spring.datasource.schema: classpath:sql&#x2F;zwt_feedback.sql</span><br><span class="line">#进行该配置后，每次启动程序，程序都会运行resources&#x2F;db&#x2F;data.sql文件，对数据库的数据操作。</span><br><span class="line">spring.datasource.data: classpath:sql&#x2F;data.sql</span><br></pre></td></tr></table></figure></div><h3 id="3-测试运行"><a href="#3-测试运行" class="headerlink" title="3 测试运行"></a>3 测试运行</h3><h2 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h2><p>配置示例，包含两种配置示例以及h2说明文档<br><a href="https://github.com/1315402725/H2Demo.git" target="_blank" rel="external nofollow noreferrer noopener">github地址:https://github.com/1315402725/H2Demo.git</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python斗罗大陆词云</title>
      <link href="/posts/18febfae/"/>
      <url>/posts/18febfae/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>1 “词云”就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，形成“关键词云层”或“关键词渲染”，从而过滤掉大量的文本信息，使浏览网页者只要一眼扫过文本就可以领略文本的主旨<br> 2 之前看到网上有大神绘制了扶摇小说的python词云图，我自己也仿照弄了一个<br> 以下是操作过程<br> 使用到的python工具<br>1 codecs用于读取文本数据<br>2 jieba<br> jieba（结巴）是一个强大的分词库，完美支持中文分词   </p><p>结巴分词分为三种模式：精确模式（默认）、全模式和搜索引擎模式<br>3  numpy NumPy是Python语言的一个扩充程序库。支持高级大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。Numpy内部解除了Python的PIL(全局解释器锁),运算效率极好,是大量机器学习框架的基础库!<br>4pandas 是基于NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。<br>Pandas基于两种数据类型：series与dataframe。<br>一个series是一个一维的数据类型，其中每一个元素都有一个标签。<br>一个dataframe是一个二维的表结构。Pandas的dataframe可以存储许多种不同的数据类型，并且每一个坐标轴都有自己的标签。你可以把它想象成一个series的字典项。<br>5 Matplotlib 是一个 Python 的 2D绘图库，它以各种硬拷贝格式和跨平台的交互式环境生成出版质量级别的图形<br>6   [WordCloud]:  github:<a href="https://github.com/amueller/word_cloud" target="_blank" rel="external nofollow noreferrer noopener">https://github.com/amueller/word_cloud</a>  “Github”<br>[官方地址]: <a href="https://amueller.github.io/word_cloud/" target="_blank" rel="external nofollow noreferrer noopener">https://amueller.github.io/word_cloud/</a> </p><a id="more"></a> <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">#读取文本数据</span><br><span class="line">import codecs</span><br><span class="line">#中文分词</span><br><span class="line">import jieba</span><br><span class="line">#科学计算</span><br><span class="line">import numpy as np</span><br><span class="line">#数据分析包</span><br><span class="line">import pandas as pd</span><br><span class="line">#数据可视化包</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">#词云包，绘制词云</span><br><span class="line">from wordcloud import WordCloud</span><br><span class="line">#imread用来读取图片数据</span><br><span class="line">from imageio import imread</span><br><span class="line">#系统包 用来输出编码格式 与绘制词云无关，可忽略</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">#读取文本数据，放在content中</span><br><span class="line"></span><br><span class="line">file &#x3D; codecs.open(&quot;F:\\pythonProject\\douluo.txt&quot;,&#39;r&#39;,&#39;utf-8&#39;);</span><br><span class="line"></span><br><span class="line">content&#x3D;file.read()</span><br><span class="line"></span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">#对读取的文本数据进行中文分词，如果有分词词库，可以载入到jieba中，提高分词的准确度</span><br><span class="line">#jieba.load_userdict(&#39;D:&#x2F;扶摇词库.txt&#39;);</span><br><span class="line">segments&#x3D;[]</span><br><span class="line">segs&#x3D;jieba.cut(content)</span><br><span class="line">#去除一个字的词</span><br><span class="line">for seg in segs:</span><br><span class="line">    if len(seg)&gt;1:</span><br><span class="line">        segments.append(seg);</span><br><span class="line">#将分词结果保存在pandas的DataFrame中</span><br><span class="line">segments_df &#x3D; pd.DataFrame(&#123;&#39;segment&#39;:segments&#125;)</span><br><span class="line">#移除停用词，停用词是指在信息检索中，为节省存储空间和提高搜索效率，在处理自然语言数据(或文本)之前或之后会自动过来不掉的某些字或词</span><br><span class="line">#移除日常停用词 通用词可以从网上搜索下载，也可以花时间和经理制作</span><br><span class="line">#参数说明：</span><br><span class="line">#index_col&#x3D;False:用作索引的列编号或者列名， 如果文件不规则，行尾有分隔符，则可以设定index_col&#x3D;False</span><br><span class="line">#quoting&#x3D;3:控制csv的英豪常亮</span><br><span class="line">#sep&#x3D;&quot;\t&quot;:指定分隔符，如果不指定参数，则会尝试使用逗号分隔。</span><br><span class="line">#停用词读取为一个DataFrame数据，给数据指定一个名称 stopword</span><br><span class="line">stopwords_rc&#x3D;pd.read_csv(&quot;F:\\pythonProject\\chineseStopWords.txt&quot;,encoding&#x3D;&#39;utf-8&#39;,names&#x3D;[&#39;stopword&#39;],index_col&#x3D;False,quoting&#x3D;3,sep&#x3D;&quot;\t&quot;)</span><br><span class="line">segments_df &#x3D; segments_df[~segments_df.segment.isin(stopwords_rc.stopword)]</span><br><span class="line">#使用pandas对词频进行统计</span><br><span class="line">#使用groupby函数(行操作) 进行分组，使用agg（列操作） 计算每组数量 ，得到一个Series数据</span><br><span class="line">segments_stat &#x3D; segments_df.groupby(by&#x3D;[&#39;segment&#39;])[&#39;segment&#39;].agg(&#123;&quot;计数&quot;:np.size&#125;)</span><br><span class="line">#根据计数列降序排序，如果segments_stat是DataFrame数据 ，使用sort函数</span><br><span class="line">segments_stat &#x3D; segments_stat.reset_index().sort_values(&quot;计数&quot;,ascending&#x3D;False)</span><br><span class="line"></span><br><span class="line">#一下是打印系统编码，与绘制码云无关</span><br><span class="line"># sys_type &#x3D;sys.getfilesystemencoding()</span><br><span class="line"># print(sys.stdout.encoding)</span><br><span class="line">#print(sys_type)</span><br><span class="line">#读取图片  绘画词云：设置背景颜色 字体路径 图片 必须设置字体 否则图片上显示的全是举行</span><br><span class="line">fy_img&#x3D;imread(&quot;F:\\pythonProject\\timg.png&quot;)</span><br><span class="line">fuyao_wordcloud &#x3D; WordCloud(background_color&#x3D;&quot;white&quot;,</span><br><span class="line">                            font_path&#x3D;&#39;F:\\pythonProject\\PingFang Regular.ttf&#39;,mask&#x3D;fy_img)</span><br><span class="line">#facecolor设置坐标系的背景色 w是白色 edagecolor设置坐标轴边的颜色</span><br><span class="line">plt.figure(num&#x3D;None,facecolor&#x3D;&#39;w&#39;,edgecolor&#x3D;&#39;blue&#39;)</span><br><span class="line">#取前1000个词，遍历取出数据，不算索引</span><br><span class="line">segments_stat &#x3D; segments_stat.head(1000).itertuples(index&#x3D;False)</span><br><span class="line">#将map数据显性转化为字典 根据词频绘制词云 fit_words参数为字典</span><br><span class="line">word_frequence &#x3D; &#123;x[0]:x[1] for x in segments_stat&#125;</span><br><span class="line">fuyao_wordcloud &#x3D; fuyao_wordcloud.fit_words(word_frequence)</span><br><span class="line">#不显示坐标轴</span><br><span class="line">plt.axis(&#39;off&#39;)</span><br><span class="line">plt.imshow(fuyao_wordcloud)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p>结果:<br><a href="python%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E8%AF%8D%E4%BA%91/timg.png" data-fancybox="group" data-caption="之前" class="fancybox"><img src="/img/loading.gif" alt="之前" title="之前" data-src="python%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E8%AF%8D%E4%BA%91/timg.png" class="lazyload"></a><br><a href="python%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E8%AF%8D%E4%BA%91/result.png" data-fancybox="group" data-caption="之后" class="fancybox"><img src="/img/loading.gif" alt="之后" title="之后" data-src="python%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E8%AF%8D%E4%BA%91/result.png" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>火影忍者之～鸣人</title>
      <link href="/posts/a0a934e6/"/>
      <url>/posts/a0a934e6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 火影忍者之～鸣人：** &lt;Excerpt in index | 首页摘要&gt;<br>火影忍者之～鸣人</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;<br>&lt;The rest of contents | 余下全文&gt;<br>正文……</p><p>火影忍者之～鸣人<br>Time Limit: 2000 MS    Memory Limit: 65536 K<br>Total Submit: 359(121 users)    Total Accepted: 146(106 users)    Rating:     Special Judge: No<br>Description<br>    火影忍者的男主角漩涡鸣人，因为身上封印着邪恶的九尾妖狐，无父无母的他受尽了村人的冷眼与歧视，他下定决心要成为第六代火影，让所有人都认同他的存在，火影是动漫火影忍者中主人公鸣人所在的国家的最强忍者的头衔，史上最强火影为鸣人的父亲–四代火影波风水门，乃是传说级的人物，也是最年轻的火影，要成为火影，不仅需要有千种忍术和全村人的认同 更要有冷静的头脑 德高望重也必不可少 还要有优秀的领导能力，这之中战斗能力是最重要的，然后是领导能力，现在又到了选火影的时候了，可是鸣人此时还很弱，所以给出m个候选人，每个人有战斗力、领导能力两个主要的作为能力判断的依据，还有n个个人信息，第一条信息为名字，按战斗力和领导能力的高低作为标准，判断这些人中最具有担任火影资格的k人。<br>    Input<br>第一行：m,n,k都为整数<br>然后是m个候选人的信息，每个人的信息包括n行，第一行是名字，接下来n-1行是其他信息，每条信息为不超过100的字符串，然后是战斗力、领导能力为一行，m、n不超过500. k不超过50.字符串均不包括空白符<br>Output<br>输出前k个人的名字。战斗力和领导能力都相同则按名字的字典序排列。（如果名字也相同则依次按后面的个人信息的字典序排列）<br>Sample Input<br>5 3 3<br>dawn<br>haligong<br>dianji<br>500 500<br>freelon<br>haligong<br>wangluo<br>500 500<br>zeropointer<br>haligong<br>dianqi<br>600 400<br>cha<br>haligong<br>computer<br>800 600<br>13brother<br>haligong<br>computer<br>400 400<br>Sample Output<br>cha<br>zeropointer<br>dawn   </p><p>Source<br>2012 Spring Contest 3 - STL<br>Author<br>拂晓   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int m,n,k;</span><br><span class="line">struct A</span><br><span class="line">&#123;</span><br><span class="line">    int gongji,lingdao;</span><br><span class="line">    char data[501][101];</span><br><span class="line">    char name[101];</span><br><span class="line">&#125; p[501];</span><br><span class="line">bool  cmp(A a1,A a2)</span><br><span class="line">&#123;</span><br><span class="line">    if(a1.gongji!&#x3D;a2.gongji)</span><br><span class="line">    &#123;</span><br><span class="line">        return a1.gongji&gt;a2.gongji;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        if(a1.lingdao!&#x3D;a2.lingdao)</span><br><span class="line">        &#123;</span><br><span class="line">                return a1.lingdao&gt;a2.lingdao;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            if(strcmp(a1.name,a2.name)!&#x3D;0)</span><br><span class="line">            &#123;</span><br><span class="line">                return strcmp(a1.name,a2.name)&lt;0;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                int i;</span><br><span class="line">                for(i&#x3D;0;i&lt;n-1;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(strcmp(a1.data[i],a2.data[i])&#x3D;&#x3D;0)</span><br><span class="line">                    &#123;</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else</span><br><span class="line">                    &#123;</span><br><span class="line">                        return strcmp(a1.data[i],a2.data[i])&lt;0;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(~scanf(&quot;%d%d%d&quot;,&amp;m,&amp;n,&amp;k))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        for(i&#x3D;0;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%s&quot;,p[i].name);</span><br><span class="line">            for(j&#x3D;0;j&lt;n-1;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%s&quot;,p[i].data[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;p[i].gongji,&amp;p[i].lingdao);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(p,p+m,cmp);</span><br><span class="line">        for(i&#x3D;0;i&lt;k;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%s\n&quot;,p[i].name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变形金刚</title>
      <link href="/posts/b38a41d/"/>
      <url>/posts/b38a41d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 变形金刚：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>变形金刚<br>Time Limit: 3000 MS    Memory Limit: 32768 K<br>Total Submit: 27(8 users)    Total Accepted: 6(6 users)    Rating:     Special Judge: No<br>Description<br>新一轮变形金刚来袭，这次霸天虎的头领叫做吊炸天。吊炸天有一个酷炫的攻击技能，能够横向摧毁一个矩形区域内的高楼大厦。但是有个弱点，这个矩形区域必须充满建筑物（不能有空白）。现在吊炸天面对一座城市，假设建筑物都是紧密挨着的（没有缝隙），现在按照顺序给你一些建筑物的宽和高（二维）。 这样的话…吊炸天一次性能摧毁的最大建筑面积是多少？（不考虑区域外造成的损坏）   </p><p>Input   </p><p>多组测试数据：   </p><p>每组数据的第一行是一个整数n，表示建筑物的数目；   </p><p>接下来的n行，每行有两个整数 w,h，分别表示对应建筑物的宽和高。   </p><p>(1&lt;= T &lt;= 50, 1 &lt;= n &lt;= 50000,0&lt;=总面积&lt;=10^9)   </p><p>如果n等于0 则结束。   </p><p>Output<br>     对于每组数据，输出能一次性摧毁的最大面积。<br>Sample Input<br>2   </p><p>3 4   </p><p>1 3   </p><p>3   </p><p>3 4   </p><p>1 2   </p><p>3 4   </p><p>0   </p><p>Sample Output<br>12   </p><p>14   </p><p>Source<br>2014暑假集训练习赛（8月6日）   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long  LL;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int height,width;</span><br><span class="line">    LL left,right;</span><br><span class="line">    int l,r;</span><br><span class="line">&#125; a[50001];</span><br><span class="line">LL max(LL x,LL y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;&#x3D;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n),n)</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;a[i].width,&amp;a[i].height);</span><br><span class="line">            a[i].left&#x3D;a[i].width;</span><br><span class="line">            a[i].right&#x3D;a[i].width;</span><br><span class="line">            a[i].l&#x3D;i;</span><br><span class="line">            a[i].r&#x3D;i;</span><br><span class="line">        &#125;</span><br><span class="line">        a[0].height&#x3D;-1;</span><br><span class="line">        a[n+1].height&#x3D;-1;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            while(a[i].height&lt;&#x3D;a[a[i].l-1].height)</span><br><span class="line">            &#123;            </span><br><span class="line">                a[i].left+&#x3D;a[a[i].l-1].left;</span><br><span class="line">                a[i].l&#x3D;a[a[i].l-1].l;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for(i&#x3D;n;i&gt;&#x3D;1;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            while(a[i].height&lt;&#x3D;a[a[i].r+1].height)</span><br><span class="line">            &#123;</span><br><span class="line">                a[i].right+&#x3D;a[a[i].r+1].right;</span><br><span class="line">                a[i].r&#x3D;a[a[i].r+1].r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        LL m&#x3D;0;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            m&#x3D;max(m,(a[i].left+a[i].right-a[i].width)*a[i].height);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%lld\n&quot;,m);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模</title>
      <link href="/posts/9521d09f/"/>
      <url>/posts/9521d09f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 模：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>模<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 10(7 users)    Total Accepted: 7(7 users)    Rating:     Special Judge: No<br>Description<br>已知一个N进制的B位数X，要求找一个同为N进制的B位数Y，使得Z-X+N^B≡Z+Y(mod N^B)对与任意同为N进制的B位数Z都成立。 （所有数都为正   数）</p><p>Input<br>多组测试数据：   </p><p>每组第一行两个数N，B,（N，B&lt;=10^6）。   </p><p>第二行B个数Xi，表示X的每一位。（高位在前，低位在后,Xi &lt; N)。   </p><p>所有数都为正数。   </p><p>Output<br>对于每组，输出一个N进制的B位数Y，输出格式同输入，具体见样例。   </p><p>Sample Input<br>10 3   </p><p>0 2 0   </p><p>Sample Output<br>9 8 0   </p><p>Hint<br>第一组测试样例中，输出的X为十进制的20，输出的Y为十进制980。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[1000000];</span><br><span class="line">int b1[1000000];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n,b;</span><br><span class="line">    while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;b))</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;0;i&lt;b;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        int key&#x3D;0;</span><br><span class="line">        for(i&#x3D;b-1;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            if(a[i]&#x3D;&#x3D;0&amp;&amp;!key)</span><br><span class="line">            &#123;</span><br><span class="line">                b1[i]&#x3D;0;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(!key)</span><br><span class="line">            &#123;</span><br><span class="line">                key&#x3D;1;</span><br><span class="line">                b1[i]&#x3D;n-a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                b1[i]&#x3D;n-1-a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%d&quot;,b1[0]);</span><br><span class="line">        for(i&#x3D;1;i&lt;b;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot; %d&quot;,b1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最快通过(FLOYED和迪杰斯特拉)</title>
      <link href="/posts/c8d015fa/"/>
      <url>/posts/c8d015fa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 最快通过(FLOYED和迪杰斯特拉)：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>最快通过<br>Time Limit: 6000 MS    Memory Limit: 32768 K<br>Total Submit: 24(11 users)    Total Accepted: 12(10 users)    Rating:    Special Judge: No<br>Description<br>sp省有n个城市，它们之间有道路相连，标号从1~n，一天小a想要从a城到b城去，  可能有多条路径， 但每条路径所花费的时间不一样，   </p><p>假设通过第i条路径所需的时间为X(i) ,从a城到b城经过m条道路，则总花费的时间为f = X(i1) * X(i2) * X(i3) … *X(im)。现在请你找出   一条路径，使得这条路径上得出的f最大。输出最大的f。   </p><p>Input<br>有多组数据输入。   </p><p>每组第一行一个整数n代表城市的个数 n &lt;= 1000。   </p><p>接着是n*n的矩阵代表通过两个城市之间的时间X(i) ( 0&lt; = X(i) &lt;= 1),X(i) 为实数，若X(i)为0 则代表不能通过。   </p><p>接着是一个整数m代表m次询问 , m&lt;=200。   </p><p>接下来m行 每行有两个数字a,b。表示需要从a城到b城。   </p><p>Output<br>对于每个询问求a~b的最大f，若不能通过则输出”No way!!”;   </p><p>Sample Input<br>3  </p><p>1 0.5 0.5   </p><p>0.5 1 0.4   </p><p>0.5 0.4 1   </p><p>3   </p><p>1 2   </p><p>2 3   </p><p>1 3   </p><p>Sample Output<br>0.500   </p><p>0.400   </p><p>0.500   </p><p> floyed： 代码   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">double a[1001][1001];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%lf&quot;,&amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int k;</span><br><span class="line">        for(k&#x3D;1;k&lt;&#x3D;n;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i][j]&lt;a[i][k]*a[k][j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        a[i][j]&#x3D;a[i][k]*a[k][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int m,x,y;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">        while(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">            if(a[x][y]!&#x3D;0)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;%.3lf\n&quot;,a[x][y]);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;No way!!\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>迪杰斯特拉 代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">double a[1001][1001];</span><br><span class="line">double low[1001];</span><br><span class="line">int n;</span><br><span class="line">int check[1001];</span><br><span class="line">void Djstl(int x,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    memset(check,0,sizeof(check));</span><br><span class="line">    check[x]&#x3D;1;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        low[i]&#x3D;a[x][i];</span><br><span class="line">    &#125;</span><br><span class="line">    int index;</span><br><span class="line">    for(i&#x3D;1;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        double max&#x3D;-1;</span><br><span class="line">        for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(!check[j]&amp;&amp;low[j]&gt;max)</span><br><span class="line">            &#123;</span><br><span class="line">                max&#x3D;low[j];</span><br><span class="line">                index&#x3D;j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        check[index]&#x3D;1;</span><br><span class="line">        for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(max*a[index][j]&gt;low[j]&amp;&amp;!check[j])&#x2F;&#x2F;这里有个陷阱，就是   &#x2F;&#x2F;a [x][y]不一定等于a[y][x]，倘若把a[index][j]换成a[j][index]提交不会通过</span><br><span class="line">            &#123;</span><br><span class="line">                low[j]&#x3D;max*a[index][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%lf&quot;,&amp;a[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int m;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">        int x,y;</span><br><span class="line">        while(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">            Djstl(x,n);</span><br><span class="line">            if(low[y]&#x3D;&#x3D;0)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;No way!!\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;%.3lf\n&quot;,low[y]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间的球( FLOYD算法 )</title>
      <link href="/posts/e20c7bf7/"/>
      <url>/posts/e20c7bf7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 中间的球( FLOYD算法 )：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>中间的球<br>Time Limit: 1000 MS    Memory Limit: 32767 K<br>Total Submit: 97(37 users)    Total Accepted: 48(35 users)    Rating:     Special Judge: No<br>Description<br>有N个外形一样但重量不同的球，N是一个奇数，每个球被标号为1、2、…、N，你的任务是 找到重量在中间的那个球，   </p><p>我们可以通过一些比较得知某些球比其他的球要中或者轻，从而找 到一些不可能是重量处在中间的球，比如： 给定N=5个球和M=4次比较，   </p><p>2比1重 4比3重 5比1重 4比2重 因为2 4 5都比1重，而1 2 3又都比4轻，从而能够判断1和4是不可能为重量处在中间的那个球。   </p><p>现在请写一个程序，来找出有多少个球可以判断出不可能是中间重量的球。   </p><p>Input<br>输入数据首先包括一个整数t，表示测试数据组数，然后是t组测试数据，每组包括一个整数N，M，然后 为M行每行两个整数a,b表示a比b重。N&lt;=100<br>Output<br>输出能够确定不可能在中间的球的数量<br>Sample Input<br>1 5 4 2 1 4 3 5 1 4 2<br>Sample Output<br>2   </p><p>一开始相处了个土办法，那就是先更新一下，水过了；   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[101][101];</span><br><span class="line">void gengxin(int x,int y,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[i][x]&#x3D;&#x3D;1&amp;&amp;a[i][y]&#x3D;&#x3D;0)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][y]&#x3D;1;</span><br><span class="line">            gengxin(i,y,n);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int chazhao1(int x,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,sum1&#x3D;0;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[i][x]&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            sum1++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return sum1;</span><br><span class="line">&#125;</span><br><span class="line">int chazhao2(int x,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,sum&#x3D;0;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       if(a[x][i]&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return sum;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int t,N,M,a1,b;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;t))</span><br><span class="line">    &#123;</span><br><span class="line">        while(t--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;N,&amp;M);</span><br><span class="line">            int i,j;</span><br><span class="line">            for(i&#x3D;0;i&lt;&#x3D;N;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;0;j&lt;&#x3D;N;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    a[i][j]&#x3D;0;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            for(i&#x3D;0;i&lt;M;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;a1,&amp;b);</span><br><span class="line">                a[a1][b]&#x3D;1;</span><br><span class="line">            &#125;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;N;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;1;j&lt;&#x3D;N;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i][j]&#x3D;&#x3D;1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        gengxin(i,j,N);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            int x&#x3D;N&#x2F;2+1;</span><br><span class="line">            int num&#x3D;0;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;N;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(chazhao1(i,N)&gt;&#x3D;x)</span><br><span class="line">                &#123;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(chazhao2(i,N)&gt;&#x3D;x)</span><br><span class="line">                &#123;</span><br><span class="line">                    num++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;%d\n&quot;,num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其实这个题的标准解法是floyd算法，关于floyd，参考大神博客<a href="http://blog.csdn.net/zhongkeli/article/details/8832946" target="_blank" rel="external nofollow noreferrer noopener">http://blog.csdn.net/zhongkeli/article/details/8832946</a>   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[101][101];</span><br><span class="line">int findMax(int x,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,sum&#x3D;0;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[i][x]&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return sum;</span><br><span class="line">&#125;</span><br><span class="line">int findMin(int x,int n)</span><br><span class="line">&#123;</span><br><span class="line">    int i,sum&#x3D;0;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[x][i]&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return sum;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            memset(a,0,sizeof(a));</span><br><span class="line">            int n,m;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">            int i;</span><br><span class="line">            int x,y;</span><br><span class="line">            for(i&#x3D;0;i&lt;m;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">                a[x][y]&#x3D;1;</span><br><span class="line">            &#125;</span><br><span class="line">            int j,k;</span><br><span class="line">            for(k&#x3D;1;k&lt;&#x3D;n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        if(a[i][k]&#x3D;&#x3D;1&amp;&amp;a[k][j]&#x3D;&#x3D;1)&#x2F;&#x2F;最重要的就是这点</span><br><span class="line">                        &#123;</span><br><span class="line">                            a[i][j]&#x3D;1;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            int sum&#x3D;0;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(findMax(i,n)&gt;n&#x2F;2||findMin(i,n)&gt;n&#x2F;2)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;%d\n&quot;,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MERGE INTERVALS</title>
      <link href="/posts/5439e1af/"/>
      <url>/posts/5439e1af/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** MERGE INTERVALS：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Merge Intervals<br>Time Limit: 1000 MS    Memory Limit: 65535 K<br>Total Submit: 58(24 users)    Total Accepted: 27(23 users)    Rating:     Special Judge: No<br>Description<br>Given a collection of intervals, merge all overlapping intervals.   </p><p>For example,   </p><p>Given: [1,3],[2,6],[8,10],[15,18];   </p><p>after meger: [1,6],[8,10],[15,18].   </p><p>Input<br>There are multiple test cases.   </p><p>For each test case:   </p><p>Line 1: This line contains an integer n indicating the number of intervals.   </p><p>Line 2..n+1: Each line contains a pair of integers  a and b, indicating the interval [a, b].   </p><p>1&lt;=n&lt;=100,000   </p><p>1&lt;=a&lt; = b&lt;=1,000,000,000   </p><p>Output<br>Output one line, contains the intervals separated by space after the merge. Output the intervals in     lexicographically smaller way.   </p><p>In other words, if we output [ai,bi] before [aj,bj], there must be ai &lt; aj or ai=aj and bi &lt;= bj.   </p><p>For more details, referring to the sample.   </p><p>Sample Input<br>4<br>1 3<br>2 6<br>8 10<br>15 18<br>5<br>37 65<br>29 43<br>30 42<br>31 87<br>32 86<br>Sample Output<br>[1,6] [8,10] [15,18]<br>[29,87]   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int left;</span><br><span class="line">    int right;</span><br><span class="line">&#125; a[100001],b[100001];</span><br><span class="line">bool cmp(node x,node y)</span><br><span class="line">&#123;</span><br><span class="line">    if(x.left!&#x3D;y.left)</span><br><span class="line">    &#123;</span><br><span class="line">        return x.left&lt;y.left;</span><br><span class="line">    &#125;</span><br><span class="line">    return x.right&lt;y.right;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;a[i].left,&amp;a[i].right);</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a,a+n,cmp);</span><br><span class="line">        int k&#x3D;0;</span><br><span class="line">        node p&#x3D;a[0];</span><br><span class="line">        for(i&#x3D;1;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(a[i].left&lt;&#x3D;p.right&amp;&amp;a[i].right&gt;p.right)</span><br><span class="line">            &#123;</span><br><span class="line">                p.right&#x3D;a[i].right;</span><br><span class="line">            &#125;</span><br><span class="line">            if(a[i].left&gt;p.right)</span><br><span class="line">            &#123;</span><br><span class="line">                 b[k++]&#x3D;p;</span><br><span class="line">                 p&#x3D;a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        b[k++]&#x3D;p;</span><br><span class="line">        for(i&#x3D;0;i&lt;k;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%c%d%c%d%c%c&quot;,&#39;[&#39;,b[i].left,&#39;,&#39;,b[i].right,&#39;]&#39;,i&#x3D;&#x3D;k-1? &#39;\n&#39;:&#39; &#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>充电</title>
      <link href="/posts/56419c41/"/>
      <url>/posts/56419c41/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 充电：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>充电<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 97(45 users)    Total Accepted: 49(42 users)    Rating:    Special Judge: No<br>Description<br>玻璃小屋内有n个插排，屋内有 m 个需要供电的机器,并且墙上有k个可以直接使用的插口。知道了每个插排上的插口的个数，并且所有的插头和插口都是可以匹配的。问你最少用几个插排可以让所有机器都供上电？   </p><p>Input<br>多组测试数据，每组第一行输入n, m, k。(1 ≤ n, m, k ≤ 50)   </p><p>第二行有n个数，分别表示每个插排上插口的个数。   </p><p>Output<br>输出最少需要几个插排。如果有电器无法充上电则输出-1。   </p><p>每组输出占一行。   </p><p>Sample Input<br>3 5 3 3 1 2 4 7 2 3 3 2 4 5 5 1 1 3 1 2 1   </p><p>Sample Output<br>1   </p><p>2   </p><p>-1   </p><p>Author<br>曾卓敏 @hrbust   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[55];</span><br><span class="line">bool cmp(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m,k;</span><br><span class="line">    while(~scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;k))</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        int ans&#x3D;0;</span><br><span class="line">        for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">            ans+&#x3D;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        if(m&lt;&#x3D;k)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;0\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else if(ans+k-n&lt;m)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;-1\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            sort(a,a+n,cmp);</span><br><span class="line">            int sum&#x3D;k;</span><br><span class="line">            int key&#x3D;0;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                key++;</span><br><span class="line">                sum&#x3D;sum+a[i]-1;</span><br><span class="line">                if(sum&gt;&#x3D;m)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%d\n&quot;,key);</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码锁</title>
      <link href="/posts/9218897/"/>
      <url>/posts/9218897/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 密码锁：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>密码锁<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 153(129 users)    Total Accepted: 135(126 users)    Rating:    Special Judge: No<br>Description   </p><p>小D在尝试打开一个很有挑战性的密码锁，这个锁上面一共有 n 个按钮用来打开。   </p><p>小D必须输入之前设置好的密码序列才能打开这个锁。每次按下一个按钮，这个按钮要么陷入（这个表示小D猜对了密码当前这位的数并准备按密码序   列的下一个按钮）要么所有的按钮恢复原状（表示当前位按了错误的按钮）。当所有的按钮全部按下的时候，密码锁就会打开。   </p><pre><code>小D想知道她现在想要打开这个n位的锁最坏情况下要按多少次按钮。   </code></pre><p>Input<br>有多组测试数据。   </p><p>每组有一个数n(1 ≤ n ≤ 2000)。   </p><p>Output<br>输出最坏按按钮的次数。<br>Sample Input<br>3   </p><p>6   </p><p>484   </p><p>Sample Output<br>7   </p><p>41   </p><p>18897054   </p><p>Author<br>曾卓敏 @hrbust   </p><p>找规律的题，   </p><p>寻找第一按钮   按n次   </p><p>寻找第二按钮   按（n-2）*2 +1   </p><p>寻找第三按钮   按 （n-3）*3+1   </p><p>。。。</p><p>寻找第k按钮    按（n-k）*k+1   </p><p>其中   1&lt;k&lt;n;   </p><p>寻找最后一个按钮只按了1次   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        long sum&#x3D;n+1+n-2;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;2;i&lt;&#x3D;n-1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum+&#x3D;(n-i)*i;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%ld\n&quot;,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个函数</title>
      <link href="/posts/7276e8df/"/>
      <url>/posts/7276e8df/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 一个函数：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>一个函数<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 48(37 users)    Total Accepted: 38(35 users)    Rating:    Special Judge: No<br>Description<br>现在用一个函数来处理一个字符串（该字符串只包含x和y）。   </p><p>函数的两个操作如下。   </p><p>1．  在字符串中找到两个连续的字符(可以不相邻)，并且第一个字符是’y’，第二个字符是’x’，然后交换它们。如果一次存在多种满足该条件的连续字符，我们就找到最靠近字符串开始位置的那组进行操作。   </p><p>2．  在字符串中找到两个连续的字符(可以不相邻)，并且第一个字符是’x’，第二个字符是’y’，   </p><p>然后从原串中将这两个字符删除。如果一次存在多种满足该条件的连续字符，我们就找到最靠近字符串开始位置的那组进行操作。   </p><p>函数的运行步骤如下：</p><p>Step1: 如果你对当前的字符串至少可以进行上面两个操作中的一个，就进入Step2,否则函数运行结束。   </p><p>Step2：如果你可以进行1 操作就执行它。否则执行2操作1次，2操作结束后进入Step1.   </p><p>请输出函数运行结束之后经过处理符串。   </p><p>Input<br>输入一个字符串，保证字符串不为空且仅由’x’和’y’组成。字符串长度为1~106。<br>Output<br>输出函数返回值。   </p><p>保证测试数据不会让返回值为空串。   </p><p>Sample Input<br>x   </p><p>yxyxy   </p><p>xxxxxxy   </p><p>Sample Output<br>x   </p><p>y   </p><p>xxxxx   </p><p>Author<br>曾卓敏 @hrbust   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char a[1000000];</span><br><span class="line">char b[1000000];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(~scanf(&quot;%s&quot;,a))</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        int xnum&#x3D;0,ynum&#x3D;0;</span><br><span class="line">        int key&#x3D;strlen(a);</span><br><span class="line">        for(i&#x3D;0;i&lt;key;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(a[i]&#x3D;&#x3D;&#39;x&#39;)</span><br><span class="line">            &#123;</span><br><span class="line">                xnum++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                ynum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int k;</span><br><span class="line">        if(xnum&gt;ynum)</span><br><span class="line">        &#123;</span><br><span class="line">            k&#x3D;xnum-ynum;</span><br><span class="line">            for(i&#x3D;0;i&lt;k;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;x&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            k&#x3D;ynum-xnum;</span><br><span class="line">            for(i&#x3D;0;i&lt;k;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;y&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泡泡</title>
      <link href="/posts/1039978f/"/>
      <url>/posts/1039978f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 泡泡：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>泡泡<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 52(27 users)    Total Accepted: 28(26 users)    Rating:    Special Judge: No<br>Description<br>深海里面有无数泡泡，每个泡泡上都写着一个数字（0~9）。现在有一伙泡泡在一起组成了一个小队并且队头的泡泡上的数字不是0，我们可以把这几   个泡泡组成的队伍看成一个数a。泡泡们觉得自己的队伍太小，决定准备从队尾依次加入n个新泡泡。但是泡泡们的老大是一个很挑剔的泡泡，他说如   果某个泡泡想加入队伍，必须满足加入之后队伍组成的数可以被b整除，举例而言，如果某个泡泡(表示的数为x) 在加入队伍之前，现有的队伍表示的   数为k，那么必须满足（k*10+x）% b=0 ，这个泡泡才能加入队伍。   </p><pre><code>现在这伙泡泡想知道在挑剔泡泡头的统治之下是否能在队尾成功加入n个新的泡泡。   </code></pre><p>Input<br>多组测试数据，每组有3个数a, b, n。 (1 ≤ a, b, n ≤ 105).   </p><p>Output<br>对于每组测试数据，如果可以在队尾加入n个新的泡泡，那么就输出最终的队伍所表示的数字，如果有多种情况就输出字典序最小的一个，如果不存在   答案，输出-1。<br>Sample Input<br>5 4 5   </p><p>3 4 1<br>Sample Output<br>520000   </p><p>32   </p><p>Author<br>曾卓敏 @hrbust   </p><p> 想的太少结果wr了好几次   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line"> &#123;</span><br><span class="line">     int a,b,n;</span><br><span class="line">     while(~scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;n))</span><br><span class="line">     &#123;</span><br><span class="line">         int sum&#x3D;a;</span><br><span class="line">         int i;</span><br><span class="line">         if((b-(sum*10)%b)&gt;9&amp;&amp;(sum*10)%b!&#x3D;0)&#x2F;&#x2F;这里需要判断是不是能整除</span><br><span class="line">         &#123;</span><br><span class="line">             printf(&quot;-1\n&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">         else</span><br><span class="line">         &#123;</span><br><span class="line">             if((sum*10)%b&#x3D;&#x3D;0)</span><br><span class="line">             &#123;</span><br><span class="line">                 printf(&quot;%d&quot;,a);</span><br><span class="line">                 for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">                 &#123;</span><br><span class="line">                     printf(&quot;0&quot;);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             else</span><br><span class="line">             &#123;</span><br><span class="line">                printf(&quot;%d%d&quot;,a,b-(sum*10)%b);</span><br><span class="line">                for(i&#x3D;1;i&lt;n;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;0&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             printf(&quot;\n&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KNIGHT GAMES</title>
      <link href="/posts/825daa8a/"/>
      <url>/posts/825daa8a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** KNIGHT GAMES：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Knight Games<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 39(21 users)    Total Accepted: 30(21 users)    Rating:     Special Judge: No<br>Description<br>The knight in the chessboard has a unique L-shaped move: two squares in one direction either horizontally or vertically, and one square in another direction perpendicular to the first.   </p><p>The knight captures any pieces that it lands on at the end of its L-shaped move.   </p><p>Leyni and XianGe are playing a game on the n * n chessboard.   </p><p>The rules are:   </p><ol><li><p>They take turns to put a new Knight on the board.   </p></li><li><p>There is no pair of the Knights could capture each other.   </p></li><li><p>The one who can’t put a new Knight loses.   </p></li><li><p>Leyni puts first.   </p></li></ol><p>Leyni wonders whether he can win the game no matter how XianGe plays.   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T test cases follow.   </p><p>For each test case:    </p><p>Line 1. This line contains an integer n (1 ≤ n ≤ 109) indicating the size of the chessboard.   </p><p>Output<br>For each test case:   </p><p>Line 1. Output “YES” if Leyni can win no matter how XianGe plays, otherwise output “NO”.   </p><p>Sample Input<br>2   </p><p>1   </p><p>2   </p><p>Sample Output<br>YES   </p><p>NO   </p><p>Source<br>哈理工2012春季校赛 - 现场赛（热身）   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            long n;</span><br><span class="line">            scanf(&quot;%ld&quot;,&amp;n);</span><br><span class="line">            if(n%2&#x3D;&#x3D;0)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;NO\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;YES\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装修</title>
      <link href="/posts/5a0ddfe7/"/>
      <url>/posts/5a0ddfe7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 装修：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>装修<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 410(225 users)    Total Accepted: 262(212 users)    Rating:     Special Judge: No<br>Description<br>hero为了能顺利娶princess ，花了血本，买了个房子，现在决定装修。房子的长度为n米，宽度为3米，现在我们有2种地砖，规格分别是1米×1米，2米×2米，如果要为该教室铺设地砖，请问有几种铺设方式呢？<br>Input<br>输入数据首先包含一个正整数C，表示包含C组测试用例，然后是C行数据，每行包含一个正整数n(1&lt;=n&lt;=30)，表示教室的长度。<br>Output<br>对于每组测试数据，请输出铺设地砖的方案数目，每个输出占一行。<br>Sample Input<br>2 2 3<br>Sample Output<br>3 5<br>Author<br>王勇   </p><p>动态规划，考虑加了一米的情况，最后一米只用1X1的，有a[j-1]种情况；用2X2的，有2*a[j-2]种情况；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">long a[31]; </span><br><span class="line">long check(long n)</span><br><span class="line">&#123;</span><br><span class="line">    if(n&#x3D;&#x3D;1)</span><br><span class="line">    &#123;</span><br><span class="line">        a[n]&#x3D;1;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(n&#x3D;&#x3D;2)</span><br><span class="line">    &#123;</span><br><span class="line">        a[n]&#x3D;3;</span><br><span class="line">        return 3;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        a[n]&#x3D;check(n-1)+2*check(n-2);</span><br><span class="line">        return a[n];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    long n&#x3D;30;</span><br><span class="line">    check(n);</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%ld&quot;,&amp;n);</span><br><span class="line">            printf(&quot;%ld\n&quot;,a[n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NEXT PERMUTATION(全排列生成算法)</title>
      <link href="/posts/bd3fa96e/"/>
      <url>/posts/bd3fa96e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** NEXT PERMUTATION(全排列生成算法)：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Next Permutation<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 96(47 users)    Total Accepted: 58(44 users)    Rating:     Special Judge: No<br>Description<br>A permutation is each one of the (n!) possible arrangements the elements in a set can take (where n is the number of elements in the set). Different permutations can be ordered according on how they compare lexicographically to each other; the first such-sorted possible permutation (the one that would compare lexicographically smaller to all other permutations) is the one which has all its elements sorted in ascending order, and the largest has all its elements sorted in descending order.   </p><p>You need to determine the next k-th higher permutation of a given permutation of the set {1, 2, 3 … n}.   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T test cases follow.   </p><p>For each test case:   </p><p>Line 1. This line contains two space-separated integers n and k (1 ≤ n, k ≤ 1000)   </p><p>Line 2. This line contains n space-separated integers indicating a permutation of {1, 2, 3 … n}   </p><p>Output<br>For each test case:   </p><p>Line 1. Output the next k-th higher permutation of the set {1, 2, 3 … n}.Separate the numbers by a single space.</p><p>Sample Input<br>3   </p><p>3 1   </p><p>2 3 1   </p><p>3 1   </p><p>3 2 1   </p><p>10 2   </p><p>1 2 3 4 5 6 7 8 9 10   </p><p>Sample Output<br>3 1 2   </p><p>1 2 3   </p><p>1 2 3 4 5 6 7 9 8 10   </p><p>Hint<br>In the first sample, all the permutations of {1, 2, 3} in lexicographical order are as below:   </p><p>{1, 2, 3}   </p><p>{1, 3, 2}   </p><p>{2, 1, 3}   </p><p>{2, 3, 1}   </p><p>{3, 1, 2}   </p><p>{3, 2, 1}   </p><p>So the next first permutation of {2, 3, 1} is {3, 1, 2}.   </p><p>Source<br>哈理工2012春季校赛 - 网络预选赛<br>Author<br>齐达拉图@HRBUST   </p><p>这是一个求一个排序的下一个排列的函数，可以遍历全排列,要包含头文件<algorithm><br>下面是代码，与之完全相反的函数还有prev_permutation   </algorithm></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[1001];</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            int n,k;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;n,&amp;k);</span><br><span class="line">            int i;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d&quot;,&amp;a[i]);    </span><br><span class="line">            &#125;</span><br><span class="line">            while(k--)</span><br><span class="line">            &#123;</span><br><span class="line">                next_permutation(a,a+n);</span><br><span class="line">            &#125;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;%d%c&quot;,a[i],i&#x3D;&#x3D;n-1? &#39;\n&#39;:&#39; &#39;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>一下转自：作者：王雨濛；新浪微博：@吉祥村码农；来源：《程序控》博客 – <a href="http://www.cnblogs.com/devymex/" target="_blank" rel="external nofollow noreferrer noopener">http://www.cnblogs.com/devymex/</a>  </p><p>概念<br>全排列的生成算法有很多种，有递归遍例，也有循环移位法等等。C++/STL中定义的next_permutation和prev_permutation函数则是非常灵活且高效的一种方法，它被广泛的应用于为指定序列生成不同的排列。本文将详细的介绍prev_permutation函数的内部算法。   </p><p>按照STL文档的描述，next_permutation函数将按字母表顺序生成给定序列的下一个较大的序列，直到整个序列为减序为止。prev_permutation函数与之相反，是生成给定序列的上一个较小的序列。二者原理相同，仅遍例顺序相反，这里仅以next_permutation为例介绍算法。   </p><p>下文内容都基于一个假设，即序列中不存在相同元素。对序列大小的比较做出定义：两个长度相同的序列，从两者的第一个元素开始向后比较，直到出现一个不同元素（也可能就是第它们的第一个元素），该元素较大的序列为大，反之序列为小；若一直到最后一个元素都相同，那么两个序列相等。</p><p>设当前序列为pn，下一个较大的序列为pn+1，那么不存在pm，使得pn &lt; pm &lt; pn+1。   </p><p>问题<br>给定任意非空序列，生成下一个较大或较小的序列。    </p><p>复杂度<br>最好的情况为pn的最右边的2个元素构成一个最小的增序子集，交换次数为1，复杂度为O(1)，最差的情况为1个元素最小，而右面的所有元素构成减序子集，这样需要先将第1个元素换到最右，然后反转右面的所有元素。交换次数为1+(n-1)/2，复杂度为O(n)。因为各种排列等可能出现，所以平均复杂度即为O(n)。   </p><p>扩展   </p><ol><li>能否直接算出集合{1, 2, …, m}的第n个排列？   </li></ol><p>设某个集合{a1, a2, …, am}（a1&lt;a2&lt;…&lt;am）构成的某种序列pn，基于以上分析易证得：若as&lt;at，那么将as作为第1个元素的所有序列一定都小于at作为第1个元素的任意序列。同理可证得：第1个元素确定后，剩下的元素中若as’&lt;at’，那么将as’作为第2个元素的所有序列一定都小于作为第2个元素的任意序列。例如4个数的集合{2, 3, 4, 6}构成的序列中，以3作为第1个元素的序列一定小于以4或6作为第1个元素的序列；3作为第1个元素的前题下，2作为第2个元素的序列一定小于以4或6作为第2个元素的序列。   </p><p>推广可知，在确定前i（i&lt;n）个元素后，在剩下的m-i=s个元素的集合{aq1, aq2, …, aq3}（aq1&lt;aq2&lt;…&lt;aqm）中，以aqj作为第i+1个元素的序列一定小于以aqj+1作为第i+1个元素的序列。由此可知：在确定前i个元素后，一共可生成s!种连续大小的序列。   </p><p>根据以上分析，对于给定的n（必有n&lt;=m!）可以从第1位开始向右逐位地确定每一位元素。在第1位不变的前题下，后面m-1位一共可以生成(m-1)!中连续大小的序列。若n&gt;(m-1)!，则第1位不会是a1，n中可以容纳x个(m-1)!即代表第1位是ax。在确定第1位后，将第1位从原集合中删除，得到新的集合{aq1, aq2, …, aq3}（aq1&lt;aq2&lt;…&lt;aqm），然后令n1=n-x(m-1)!，求这m-1个数中生成的第n1个序列的第1位。   </p><p>举例说明：如7个数的集合为{1, 2, 3, 4, 5, 6, 7}，要求出第n=1654个排列。   </p><p>(1654 / 6!)取整得2，确定第1位为3，剩下的6个数{1, 2, 4, 5, 6, 7}，求第1654 % 6!=214个序列；   </p><p>(214 / 5!)取整得1，确定第2位为2，剩下5个数{1, 4, 5, 6, 7}，求第214 % 5!=94个序列；   </p><p>(94 / 4!)取整得3，确定第3位为6，剩下4个数{1, 4, 5, 7}，求第94 % 4!=22个序列；   </p><p>(22 / 3!)取整得3，确定第4位为7，剩下3个数{1, 4, 5}，求第22 % 3!=4个序列；   </p><p>(4 / 2!)得2，确定第5为5，剩下2个数{1, 4}；由于4 % 2!=0，故第6位和第7位为增序&lt;1 4&gt;；    </p><p>因此所有排列为：3267514。   </p><ol start="2"><li>给定一种排列，如何算出这是第几个排列呢？   </li></ol><p>和前一个问题的推导过程相反。例如3267514：   </p><p>后6位的全排列为6!，3为{1, 2, 3 ,4 , 5, 6, 7}中第2个元素（从0开始计数），故2*720=1440；   </p><p>后5位的全排列为5!，2为{1, 2, 4, 5, 6, 7}中第1个元素，故1*5!=120；   </p><p>后4位的全排列为4!，6为{1, 4, 5, 6, 7}中第3个元素，故3*4!=72；   </p><p>后3位的全排列为3!，7为{1, 4, 5, 7}中第3个元素，故3*3!=18；   </p><p>后2位的全排列为2!，5为{1, 4, 5}中第2个元素，故2*2!=4；   </p><p>最后2位为增序，因此计数0，求和得：1440+120+72+18+4=1654   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">&#x2F;&#x2F;主函数，算法详见相关说明</span><br><span class="line">int main(void) &#123;</span><br><span class="line">    &#x2F;&#x2F;循环处理输入的每一个字符串</span><br><span class="line">    for (string str; cin &gt;&gt; str;) &#123;</span><br><span class="line">        if (str.empty()) &#123;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;如果字符串只有1个字符，则直接输出结束</span><br><span class="line">        if (str.length() &lt;&#x3D; 1) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;No more Permutation&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;iPivot为右边最大减序子集左边相邻的一个元素</span><br><span class="line">        string::iterator iPivot &#x3D; str.end(), iNewHead;</span><br><span class="line">        &#x2F;&#x2F;查找右边最大的减序子集</span><br><span class="line">        for (--iPivot; iPivot !&#x3D; str.begin(); --iPivot) &#123;</span><br><span class="line">            if (*(iPivot - 1) &lt;&#x3D; *iPivot ) &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;如果整个序列都为减序，则重排结束。</span><br><span class="line">        if (iPivot &#x3D;&#x3D; str.begin()) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;No more Permutation&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;iPivot指向子集左边相邻的一个元素</span><br><span class="line">        iPivot--;</span><br><span class="line">        &#x2F;&#x2F;iNewHead为仅比iPivot大的元素，在右侧减序子集中寻找</span><br><span class="line">        for (iNewHead &#x3D; iPivot + 1; iNewHead !&#x3D; str.end(); ++iNewHead) &#123;</span><br><span class="line">            if (*iNewHead &lt; *iPivot) &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;交换iPivot和iNewHead的值，但不改变它们的指向</span><br><span class="line">        iter_swap(iPivot, --iNewHead);</span><br><span class="line">        &#x2F;&#x2F;反转右侧减序子集，使之成为最小的增序子集</span><br><span class="line">        reverse(iPivot + 1, str.end());</span><br><span class="line">        &#x2F;&#x2F;本轮重排完成，输出结果</span><br><span class="line">        cout &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LEYNI, LOLI AND TOASTS</title>
      <link href="/posts/59e1f0ff/"/>
      <url>/posts/59e1f0ff/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** LEYNI, LOLI AND TOASTS：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Leyni, LOLI and Toasts<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 47(37 users)    Total Accepted: 37(37 users)    Rating:     Special Judge: No<br>Description<br>Leyni likes to play with LOLIs, but this winter is so cold in Harbin!   </p><p>A group of n LOLIs decided to buy b bottles of soft drink to make themselves warmer. Each bottle has d milliliters    of the drink. Also they bought l limes and cut each of them into k slices. After that they found p grams of salt.   </p><p>To make a toast, each LOLI needs x milliliters of the drink, a slice of lime and y grams of salt. Having the    average materials, the LOLIs want to make toasts as many as they can. How many toasts can each LOLI makes?   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T    test cases follow.   </p><p>For each test case:   </p><p>Line 1. This line contains eight positive integers, n, b, d, l, k, p, x, y (1 ≤ n, b, d, l, k, p, x, y ≤ 1000). The numbers are separated by exactly one space.   </p><p>Output<br>For each test case:   </p><p>Line 1. Output the number of toasts each LOLI can make.   </p><p>Sample Input<br>1   </p><p>3 4 5 10 8 100 3 1   </p><p>Sample Output<br>2   </p><p>Hint<br>In the sample, overall the LOLIs have 4 * 5 = 20 milliliters of the drink, it is enough to make 20 / 3 = 6 toasts. The limes are enough for 10 * 8 = 80 toasts and the salt is enough for 100 / 1 = 100 toasts. However, there are 3 LOLIs in the group, so the answer is 6 / 3 = 2.   </p><p>Source<br>哈理工2012春季校赛 - 现场赛<br>Author<br>齐达拉图@HRBUST   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int min(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int  n, b, d, l, k, p, x, y;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d%d%d%d%d%d%d&quot;,&amp;n,&amp;b,&amp;d,&amp;l,&amp;k,&amp;p,&amp;x,&amp;y);</span><br><span class="line">        &#x2F;*    if(n&gt;b)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;0\n&quot;);</span><br><span class="line">            &#125;*&#x2F;</span><br><span class="line">            &#x2F;&#x2F;else</span><br><span class="line">        &#x2F;&#x2F;    &#123;</span><br><span class="line">                int num1&#x3D;b*d&#x2F;(n*x);</span><br><span class="line">                int num2&#x3D;l*k&#x2F;n;</span><br><span class="line">                int num3&#x3D;p&#x2F;(y*n);</span><br><span class="line">                printf(&quot;%d\n&quot;,min(num1,min(num2,num3)));</span><br><span class="line">        &#x2F;&#x2F;    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A SIMPLE PROBLEM WITH INTEGERS(区间更新)</title>
      <link href="/posts/7e86c8c7/"/>
      <url>/posts/7e86c8c7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** A SIMPLE PROBLEM WITH INTEGERS(区间更新)：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>A Simple Problem with Integers<br>Time Limit: 3000 MS    Memory Limit: 32768 K<br>Total Submit: 178(48 users)    Total Accepted: 51(36 users)    Rating:    Special Judge: No<br>Description<br>You have N integers, A1, A2, … , AN. You need to deal with two kinds of operations. One type of operation is to add some given number to each number in a given interval. The other is to ask for the sum of numbers in a given interval.<br>Input<br>Input contain multiple test cases,for each case:</p><p>The first line contains two numbers N and Q. 1 ≤ N,Q ≤ 100000.<br>The second line contains N numbers, the initial values of A1, A2, … , AN. -1000000000 ≤ Ai ≤ 1000000000.<br>Each of the next Q lines represents an operation.<br>“C a b c” means adding c to each of Aa, Aa+1, … , Ab. -10000 ≤ c ≤ 10000.<br>“Q a b” means querying the sum of Aa, Aa+1, … , Ab.</p><p>Output<br>You have N integers, A1, A2, … , AN. You need to deal with two kinds of operations. One type of operation is to add some given number to each number in a given interval. The other is to ask for the sum of numbers in a given interval.<br>Sample Input<br>10 5<br>1 2 3 4 5 6 7 8 9 10<br>Q 4 4<br>Q 1 10<br>Q 2 4<br>C 3 6 3<br>Q 2 4<br>Sample Output<br>4<br>55<br>9<br>15<br>Source<br>POJ Monthly–2007.11.25, Yang Yi<br>Recommend<br>`Wind @Hrbust  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int m&#x3D;100000;</span><br><span class="line">typedef long long LL;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    LL Inc;</span><br><span class="line">    LL sum;</span><br><span class="line">&#125;a[m&lt;&lt;2];</span><br><span class="line">LL b[m+1];</span><br><span class="line">void build(int L,int R,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    a[rt].Inc&#x3D;0;</span><br><span class="line">    if(L&#x3D;&#x3D;R)</span><br><span class="line">    &#123;</span><br><span class="line">    &#x2F;&#x2F;    scanf(&quot;%lld&quot;,&amp;b[L]);</span><br><span class="line">        a[rt].sum&#x3D;b[L];</span><br><span class="line">        return ;</span><br><span class="line">    &#125;</span><br><span class="line">    int lr&#x3D;rt&lt;&lt;1,rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    int mid&#x3D;(L+R)&gt;&gt;1;</span><br><span class="line">    build(L,mid,lr);</span><br><span class="line">    build(mid+1,R,rr);</span><br><span class="line">    a[rt].sum&#x3D;a[lr].sum+a[rr].sum;</span><br><span class="line">&#125;</span><br><span class="line">void update(int l,int r,int L,int R,int rt,LL x)</span><br><span class="line">&#123;</span><br><span class="line">    if(L&#x3D;&#x3D;l&amp;&amp;R&#x3D;&#x3D;r)</span><br><span class="line">    &#123;</span><br><span class="line">        a[rt].Inc+&#x3D;x;</span><br><span class="line">        return ;</span><br><span class="line">    &#125;</span><br><span class="line">    a[rt].sum+&#x3D;(r-l+1)*x;</span><br><span class="line">    int m&#x3D;(L+R)&gt;&gt;1;</span><br><span class="line">    int lr&#x3D;rt&lt;&lt;1,rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    if(r&lt;&#x3D;m)</span><br><span class="line">    &#123;</span><br><span class="line">        update(l,r,L,m,lr,x);</span><br><span class="line">    &#125;</span><br><span class="line">    else if(l&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        update(l,r,m+1,R,rr,x);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        update(l,m,L,m,lr,x);</span><br><span class="line">        update(m+1,r,m+1,R,rr,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">LL  query(int l,int r,int L,int R,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    if(l&lt;&#x3D;L&amp;&amp;r&gt;&#x3D;R)</span><br><span class="line">    &#123;</span><br><span class="line">        return a[rt].sum+a[rt].Inc*(r-l+1);</span><br><span class="line">    &#125;</span><br><span class="line">    a[rt].sum+&#x3D;(R-L+1)*a[rt].Inc;</span><br><span class="line">    int m&#x3D;(L+R)&gt;&gt;1;</span><br><span class="line">    int lr&#x3D;rt&lt;&lt;1,rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    if(a[rt].Inc)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;update(L,m,L,m,lr,a[rt].Inc);</span><br><span class="line">    &#x2F;&#x2F;    update(m+1,R,m+1,R,rr,a[rt].Inc);</span><br><span class="line">        a[lr].Inc+&#x3D;a[rt].Inc;</span><br><span class="line">        a[rr].Inc+&#x3D;a[rt].Inc;</span><br><span class="line">    &#125;</span><br><span class="line">    a[rt].Inc&#x3D;0;</span><br><span class="line">    if(r&lt;&#x3D;m)</span><br><span class="line">    &#123;</span><br><span class="line">        return query(l,r,L,m,lr);</span><br><span class="line">    &#125;</span><br><span class="line">    else if(l&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        return query(l,r,m+1,R,rr);</span><br><span class="line">    &#125;</span><br><span class="line">    LL left&#x3D;query(l,m,L,m,lr);</span><br><span class="line">    LL right&#x3D;query(m+1,r,m+1,R,rr);</span><br><span class="line">    return left+right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int N,Q;</span><br><span class="line">    while(~scanf(&quot;%d%d&quot;,&amp;N,&amp;Q))</span><br><span class="line">    &#123;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%lld&quot;,&amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        build(1,N,1);</span><br><span class="line">        char c;</span><br><span class="line">        int l,r;</span><br><span class="line">        LL x;</span><br><span class="line">        while(Q--)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;c;</span><br><span class="line">            if(c&#x3D;&#x3D;&#39;Q&#39;)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;l,&amp;r);</span><br><span class="line">                printf(&quot;%lld\n&quot;,query(l,r,1,N,1));</span><br><span class="line">            &#125;</span><br><span class="line">            else if(c&#x3D;&#x3D;&#39;C&#39;)</span><br><span class="line">            &#123;</span><br><span class="line">              &#x2F;&#x2F;cout&lt;&lt;&quot;dsfdsf&quot;&lt;&lt;endl;</span><br><span class="line">                scanf(&quot;%d%d%lld&quot;,&amp;l,&amp;r,&amp;x);</span><br><span class="line">                update(l,r,1,N,1,x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MARSHAL&#39;S CONFUSION II</title>
      <link href="/posts/a34e5bf7/"/>
      <url>/posts/a34e5bf7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** MARSHAL'S CONFUSION II：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Marshal’s confusion II<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 239(80 users)    Total Accepted: 73(66 users)    Rating:     Special Judge: No<br>Description<br>one day, Marshal want to show the answer :Calculate S(n). S(n)=1^3+2^3 +3^3 +……+n^3 .<br>Input<br>Each line will contain one integer N(1 &lt; n &lt; 1000000000). Process to end of file.<br>Output<br>For each case, output the last four dights of S(N) in one line.<br>Sample Input<br>1 2<br>Sample Output<br>0001 0009    </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int m&#x3D;10000;</span><br><span class="line">typedef long LL;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    LL n;</span><br><span class="line">    while(~scanf(&quot;%ld&quot;,&amp;n))&#x2F;&#x2F;1^3+2^3+...+n^3&#x3D;[n(n+1)&#x2F;2]^2</span><br><span class="line">    &#123;</span><br><span class="line">        LL a;</span><br><span class="line">        a&#x3D;n*(n+1)&#x2F;2%m;</span><br><span class="line">        LL sum&#x3D;a*a%m;</span><br><span class="line">        printf(&quot;%04d\n&quot;,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MARSHAL&#39;S CONFUSION III（快速幂）</title>
      <link href="/posts/463225d1/"/>
      <url>/posts/463225d1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** MARSHAL'S CONFUSION III（快速幂）：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Marshal’s Confusion III<br>Time Limit: 3000 MS    Memory Limit: 65536 K<br>Total Submit: 236(62 users)    Total Accepted: 74(51 users)    Rating:     Special Judge: No<br>Description<br>Marshallike to solve acm problems.But they are very busy, one day they meet a problem. Given three intergers a,b,c,    the task is to compute a^(b^c))%317000011. so the turn to you for help.<br>Input<br>The first line contains an integer T which stands for the number of test cases. Each case consists of three integer    a, b, c seperated by a space in a single line. 1 &lt;= a,b,c &lt;= 100000<br>Output<br>For each case, print a^(b^c)%317000011 in a single line.<br>Sample Input<br>2 1 1 1 2 2 2<br>Sample Output<br>1 16   </p><p>Author   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const long m&#x3D;317000011;</span><br><span class="line">long ksm(long x,long y,int m)&#x2F;&#x2F;x^y</span><br><span class="line">&#123;</span><br><span class="line">    long sum&#x3D;x;</span><br><span class="line">    long res&#x3D;1;</span><br><span class="line">    while(y&gt;0)</span><br><span class="line">    &#123;</span><br><span class="line">        if(y%2&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            res&#x3D;(res*sum)%m;</span><br><span class="line">        &#125;</span><br><span class="line">        sum&#x3D;(sum*sum)%m;</span><br><span class="line">        y&#x2F;&#x3D;2;</span><br><span class="line">        &#x2F;&#x2F;cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    long a,b,c;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%ld%ld%ld&quot;,&amp;a,&amp;b,&amp;c);</span><br><span class="line">            long ss&#x3D;ksm(a,ksm(b,c,m),m);</span><br><span class="line">            ss%&#x3D;m;</span><br><span class="line">            printf(&quot;%ld\n&quot;,ss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#x2F;&#x2F;    cout&lt;&lt;ksm(2,1)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两种筛素数的方法</title>
      <link href="/posts/b33b0282/"/>
      <url>/posts/b33b0282/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 两种筛素数的方法：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">筛选法求素数：</span><br><span class="line"></span><br><span class="line">void getprime()</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">int i,j;</span><br><span class="line"></span><br><span class="line">memset(b,1,sizeof(b));</span><br><span class="line"></span><br><span class="line">b[0]&#x3D;0;</span><br><span class="line"></span><br><span class="line">b[1]&#x3D;0;</span><br><span class="line"></span><br><span class="line">for(i&#x3D;2;i*i&lt;&#x3D;100000;i++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if(b[i])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">for(j&#x3D;i*i;i&lt;&#x3D;100000;j+&#x3D;i)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">p[j]&#x3D;0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">快速判断一个数是否为素数</span><br><span class="line"></span><br><span class="line">bool isPrime(int num)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if (num &#x3D;&#x3D; 2 || num &#x3D;&#x3D; 3)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (num % 6 !&#x3D; 1 &amp;&amp; num % 6 !&#x3D; 5)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (int i &#x3D; 5; i*i &lt;&#x3D; num; i +&#x3D; 6)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">if (num % i &#x3D;&#x3D; 0 || num % (i+2) &#x3D;&#x3D; 0)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">return false;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">快速求一个数以内的所有素数</span><br><span class="line"></span><br><span class="line">#define N 100000000</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">bool notPrime[N+5];</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">void ScreeningPrime(void)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">int i, j, increment[6] &#x3D; &#123;0, 4, 0, 0, 0, 2&#125;;</span><br><span class="line"></span><br><span class="line">for (i &#x3D; 5; i*i &lt;&#x3D; N; i +&#x3D; increment[i%6])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">for (j &#x3D; i; i*j &lt;&#x3D; N; j +&#x3D; increment[j%6])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">notPrime[i*j] &#x3D; true;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA基础部分</title>
      <link href="/posts/5e7573b4/"/>
      <url>/posts/5e7573b4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** JAVA基础部分：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;alt+? 自动提示</span><br><span class="line">&#x2F;&#x2F;ctrl+? 注释&#x2F;解除注释</span><br><span class="line">Myeclips 计时编译器</span><br><span class="line">&#x2F;&#x2F;alt+r s 回车编译代码</span><br><span class="line">&#x2F;&#x2F;shift+Ctrl+f自动对齐</span><br><span class="line">&#x2F;&#x2F;编译完成之后直接f11运行代码</span><br><span class="line">变量：用来存储数据的内存空间</span><br><span class="line">变量类型： 指明这块内存空间能够存储什么</span><br><span class="line">boolean  一个字节（8位）0000 0000</span><br><span class="line">char     0000 0000 0000 0000用一个字节所能表示的2的16次方种数字表示2的16次个字符(至今没填满),而C中的char是一个字节只能表示256中符号</span><br><span class="line">byte      1字节  -128 127   </span><br><span class="line">short int 2字节  -32768</span><br><span class="line">int  整形 4字节 -2147483648到2147483648</span><br><span class="line">long      8字节  最大是91开头长度19位</span><br><span class="line">float     单精度  4字节 最多保留到小数点后7位</span><br><span class="line">double 双精度浮点 8字节64位最多保留到小数点后16位</span><br><span class="line">算术运算符 +-*、%</span><br><span class="line">赋值 &#x3D; ++ -- </span><br><span class="line">比较运算符 《 》《&#x3D;》&#x3D; &#x3D;&#x3D; ！&#x3D;</span><br><span class="line">逻辑运算符 &amp;&amp; 、、 ！</span><br><span class="line">位运算 &amp; | ^ ~ &lt;&lt; &gt;&gt;</span><br><span class="line"> 5</span><br><span class="line">1010+1  -5</span><br><span class="line">0000  0</span><br><span class="line">if(a&gt;b&amp;&amp;++b&lt;a)</span><br><span class="line">如果前面不成立则&amp;&amp;后面不运行</span><br><span class="line">特殊</span><br><span class="line">double a&#x3D;6.0;</span><br><span class="line">double b&#x3D;4.9;</span><br><span class="line">a-b&#x3D;1.099999999..;</span><br><span class="line">数组：</span><br><span class="line">类里面定义了方法（其他语言叫函数）</span><br><span class="line">定义类 class 类名</span><br><span class="line">System.gc()马上调用垃圾回收机制</span><br><span class="line">一个文件中只能又一个public类</span><br><span class="line">calss User</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;final常量（终态）修饰的方法不能被重写</span><br><span class="line">&#x2F;&#x2F;finally   try&#123;&#125;  catch&#123;&#125;   finally&#123;&#125;用于异常处理，如果catch&#123;return&#125;fianlly&#123;。。。&#125;return后finally会被执行</span><br><span class="line">&#x2F;&#x2F;finalize用于析构函数</span><br><span class="line">extens 扩展(继承)只能单一继承</span><br><span class="line">继承 多态（父类指针可指向子类反之不行)</span><br><span class="line">函数重载与返回值无关</span><br><span class="line">static 修饰的成员变不是对象的数据</span><br><span class="line">static</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;静态区域，专门用来初始化静态数据，只能执行一次</span><br><span class="line">&#125;</span><br><span class="line">String池   相同的字符串会是同一个引用，使用同一块内存</span><br><span class="line">例子：</span><br><span class="line">&#x2F;&#x2F;在String 池中</span><br><span class="line">String a&#x3D;&quot;hello,word&quot;;</span><br><span class="line">String b&#x3D;&quot;hello,word&quot;&#x2F;&#x2F;</span><br><span class="line">&amp;a&#x3D;&#x3D;&amp;b</span><br><span class="line">&#x2F;&#x2F;在堆中创建</span><br><span class="line">String a&#x3D;new String(&quot;sss&quot;);</span><br><span class="line">String b&#x3D;new String(&quot;sss&quot;);</span><br><span class="line">a&amp;!&#x3D;&amp;b;</span><br><span class="line">String 采用的unicode编码，一个字符占两个字节</span><br><span class="line">String中的方法</span><br><span class="line">IndexOf（）方法用于检索一个字符串是否存在另一个字符串</span><br><span class="line">subString 截取字符串</span><br><span class="line">大小写转换</span><br><span class="line">valueOf String类的静态方法</span><br><span class="line">StringBuilder封装可变字符串</span><br><span class="line">SringBuffer是线程安全的同步处理的</span><br><span class="line">String 方法matches();正则表达式</span><br><span class="line">        Integer i1&#x3D;100;</span><br><span class="line">        Integer i2&#x3D;100;</span><br><span class="line">        if(i1&#x3D;&#x3D;i2)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;OK&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;No&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">输出OK</span><br><span class="line">        Integer i1&#x3D;200;</span><br><span class="line">        Integer i2&#x3D;200;</span><br><span class="line">        if(i1&#x3D;&#x3D;i2)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;OK&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(&quot;No&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">输出NO</span><br><span class="line">Integer池类似于String池在-128~127，内存会被重用</span><br><span class="line">时间类</span><br><span class="line">Date simpleDateFormat定义时间格式</span><br><span class="line">两个数互换</span><br><span class="line">int a,b;</span><br><span class="line">a&#x3D;a^b;</span><br><span class="line">b&#x3D;a^b;</span><br><span class="line">a&#x3D;a^b;</span><br><span class="line">String s&#x3D;&quot;Hello&quot;;</span><br><span class="line">String s1&#x3D;&quot;Hello&quot;;</span><br><span class="line">char c&#x3D;s.charAt(4);</span><br><span class="line">&#x2F;&#x2F;获得第四个字符</span><br><span class="line">s.compareTo(s1)&#x2F;&#x2F;比较两个字符串的值是否相等</span><br><span class="line">相当与c++的strcmp</span><br><span class="line">s.equals(s1);Java中的方法比较两个字符串的值是否相等</span><br><span class="line">s.starsWith(prefix)&#x2F;&#x2F;是否是以。。。开头的</span><br><span class="line">s.endsWith(suffix);&#x2F;&#x2F;是否是以。。。结尾的</span><br><span class="line">s.indexof(&#39;l&#39;);&#x2F;&#x2F;查询第一个l的位置</span><br><span class="line">int  pos&#x3D;0;</span><br><span class="line">int x;</span><br><span class="line">while((x&#x3D;s.indexOf(&#39;l&#39;,pos))!&#x3D;-1)</span><br><span class="line">&#123;</span><br><span class="line">      System.out.println(x);</span><br><span class="line">    pos&#x3D;x+1;    </span><br><span class="line">&#125;&#x2F;&#x2F;查询所有的l</span><br><span class="line">s.isEmpty()&#x2F;&#x2F;是否为空，返回boolean</span><br><span class="line">&#x2F;&#x2F;C:&#x2F;&#x2F;windows&#x2F;system32&#x2F;1.txt</span><br><span class="line">s.split(&quot;s&quot;);&#x2F;&#x2F;返回一个字符串数组，按照一个字符串分割</span><br><span class="line">s.substring(int temp);截字符串，包含其实不包含终止</span><br><span class="line">s.substring(1,4);截取字符串</span><br><span class="line">s.toUpperCase（）&#x2F;&#x2F;将s中的所有字符转成大写</span><br><span class="line">s.toLowerCase()&#x2F;&#x2F;将s中的所有字符串转成小写</span><br><span class="line">s.trim()&#x2F;&#x2F;去除两端空格</span><br><span class="line">s.replace(&quot;a&quot;,&quot;b&quot;);&#x2F;&#x2F;用第一个字符串代替s中的第二个字符串</span><br><span class="line">Collection接口:</span><br><span class="line">Set&lt;Integer&gt;</span><br><span class="line">Set&lt;String&gt; set&#x3D;new HashSet&lt;String&gt;()；&#x2F;&#x2F;&lt;&gt;中的类型不能是基本类型</span><br><span class="line">set.Add(&quot;dsfs&quot;);</span><br><span class="line">set.clear();</span><br><span class="line">System.out.println(set);</span><br><span class="line">map.values();&#x2F;&#x2F;返回所有的值，类型是collection接口类型</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;map映射 key value 键值对</span><br><span class="line">map&lt;K,V&gt;&#x2F;&#x2F;K不能重复，V可以重复,</span><br><span class="line"></span><br><span class="line">ArryList&lt;String&gt; a1&#x3D;new ArryList&lt;String&gt;;</span><br><span class="line">a1.add(&quot;1&quot;);</span><br><span class="line">a1.add(&quot;ds&quot;);</span><br><span class="line">a1.indexOf(&quot;1&quot;);&#x2F;&#x2F;根据值查找索引</span><br><span class="line">a1.get(1);&#x2F;&#x2F;根据索引返回值</span><br><span class="line">a1.remove(1);&#x2F;&#x2F;用索引移除值</span><br><span class="line">a1.remove(&quot;ds&quot;);&#x2F;&#x2F;移除所有对象，没有返回FALSE有返回TRUE</span><br><span class="line">a1.subList(2,5);&#x2F;&#x2F;截取，返回一个List，包含起使，不包含终止</span><br><span class="line">for(i:arr[])</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;依次赋值将arr[]中的数值赋值给i；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">二维数组可以写成</span><br><span class="line">int []arr[]&#x3D;new int[][];</span><br><span class="line">&#x2F;&#x2F;类的构造方法也可以重载</span><br><span class="line">&#x2F;&#x2F;如果要重载一个构造方法，类中不许有至少一个无参的构造方法（alt+?自动提示会帮你添加）</span><br><span class="line">接口直接可以多重继承，接口和类之间只能implements不能extends</span><br><span class="line">System.getProperty(&quot;user&quot;);</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JIAOZHU AND WAR3</title>
      <link href="/posts/1f6b99e5/"/>
      <url>/posts/1f6b99e5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** JIAOZHU AND WAR3：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>JiaoZhu and WAR3<br>Time Limit: 5000 MS    Memory Limit: 65536 K<br>Total Submit: 126(39 users)    Total Accepted: 78(34 users)    Rating:     Special Judge: Yes<br>Description<br>自从电子竞技在中国被认定为第99个正式体育项目，教主就投身其中，WAR3（WarCraft3 魔兽争霸3）是他拿手的一款游戏，当然也有很多职业选手参与其中。 魔兽争霸中每个选手都有自己的一片区域我们这里叫做主城，他们必须保卫自己的主城不受到侵犯。 教主在一场比赛中，企图通过建造防御塔来保卫自己的主城。 为了简化问题，我们规定了教主的主城是一个固定的正方形区域，坐标范围为-0.5 &lt;= x &lt;= 0.5，-0.5 &lt;= y &lt;= 0.5，防御塔的防御范围是一个以自身为圆心以R为半径的圆。这样只要有防御塔覆盖到的位置（包括圆的边缘）都是安全的。 教主建造了若干个防御塔，你的任务是帮助教主计算建造这若干个防御塔后他的主城还有多少面积没有被覆盖到。   </p><p>Input<br>本题有多组测试数据，对于每组测试数据格式如下： 第1行：一个数字N(0 &lt;= N &lt;= 50)代表防御塔的个数 第2..1 + N行：每行三个数字x0, y0, R分别代表，该防御塔的坐标x0, y0及其覆盖半径R (-1.0 &lt;= x0, y0 &lt;= 1.0, 0 &lt;= R &lt;= 10.0) 处理到文件结束(EOF)   </p><p>Output<br>对应每组数据输出没有被覆盖到的面积，要求近似到3位小数。 本题允许你的结果有0.006的误差，即 |你的结果-标准结果| &lt;= 0.006 都会被接受。   </p><p>Sample Input<br>0 1 0 0 0.1 2 -0.5 -0.5 0.5 0.5 0.5 0.5 1 0 0 10<br>2<br>-0.5 -0.5 1<br>0.5 -0.5 1<br>Sample Output<br>1.000 0.969 0.607 0.000<br>0.043<br>Hint   </p><p>圆的方程为 (x - x0)^2 + (y - y0)^2 &lt;= R^2   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[101][101];</span><br><span class="line">    double x0,y0,r0;</span><br><span class="line">    double x,y,r;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        for(i&#x3D;0;i&lt;&#x3D;100;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(j&#x3D;0;j&lt;&#x3D;100;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                a[i][j]&#x3D;0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        double ans&#x3D;10201.0;</span><br><span class="line">        while(n--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%lf%lf%lf&quot;,&amp;x0,&amp;y0,&amp;r0);</span><br><span class="line">            x&#x3D;x0*100+50;</span><br><span class="line">            y&#x3D;y0*100+50;</span><br><span class="line">            r&#x3D;r0*100;</span><br><span class="line">            for(i&#x3D;0;i&lt;&#x3D;100;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;0;j&lt;&#x3D;100;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i][j]&#x3D;&#x3D;0&amp;&amp;(i-x)*(i-x)+(j-y)*(j-y)&lt;&#x3D;r*r)</span><br><span class="line">                    &#123;</span><br><span class="line">                        a[i][j]&#x3D;1;</span><br><span class="line">                        ans--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        ans&#x3D;1.0*ans&#x2F;10201.0;&#x2F;&#x2F;就算面积算的是点的个数，所以要除以101*101</span><br><span class="line">        printf(&quot;%.3f\n&quot;,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COUNTLESS CANDIES</title>
      <link href="/posts/a921047e/"/>
      <url>/posts/a921047e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** COUNTLESS CANDIES：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Countless Candies<br>Time Limit: 1000 MS    Memory Limit: 10240 K<br>Total Submit: 112(42 users)    Total Accepted: 43(37 users)    Rating:    Special Judge: No<br>Description<br>     小w喜欢吃糖果，一次偶然的机会，小w再次邂逅了阿拉神灯。      阿拉神灯知道小w的心意之后问：你想要多少糖哈,亲~      小w笑答：不要太多啦，吃不完就够了~      阿拉神灯：￥^ @ % &amp; * R &amp; ^…      善良的小w想把这些糖果分一些给自己的好朋友。小w有N 个好朋友，编号从1到N。小w要分N次，每次操作如下：[L, R]表示给编号在L到R 的朋友每人一块糖。最后，小w想知道每个朋友分得了多少糖果，由于人缘太好，朋友太多而没法统计，请帮助小w计算一下最后的结果吧。<br>Input<br>第 1 行：一个整数N 表示朋友的数量 （1 ≤N≤100000） 第 2到N+1行：每行两个整数L,R，表示编号在[L, R]内的朋友，每人分得一块糖。 多组测试数据，处理到文件结束。<br>Output<br>N 个整数表示每个朋友得到的糖果的数量，每组测试数据占一行。<br>Sample Input<br>4<br>1 2<br>2 3<br>1 3<br>1 4<br>Sample Output<br>3 4 3 1   </p><p>为了使其时间复杂度最低，我们弄一个数组，在a[l]++,在a[r+1]–这样在输出的时候应该有的有不应该有的没有   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[100001];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int N;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;N))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,l,r;</span><br><span class="line">        int h&#x3D;N;</span><br><span class="line">        memset(a+1,0,(N+1)*sizeof(int));</span><br><span class="line">        while(h--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;l,&amp;r);</span><br><span class="line">            a[l]++;</span><br><span class="line">            a[r+1]--;</span><br><span class="line">        &#125;</span><br><span class="line">        l&#x3D;0;</span><br><span class="line">        for(i&#x3D;1;i&lt;N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            l+&#x3D;a[i];</span><br><span class="line">            printf(&quot;%d &quot;,l);</span><br><span class="line">        &#125;</span><br><span class="line">        l+&#x3D;a[N];</span><br><span class="line">        printf(&quot;%d\n&quot;,l);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FIRE MAZE(广度优先搜索)</title>
      <link href="/posts/4175332c/"/>
      <url>/posts/4175332c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** FIRE MAZE(广度优先搜索)：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Fire Maze<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 53(19 users)    Total Accepted: 26(17 users)    Rating:     Special Judge: No<br>Description<br>After escaping from Figo’s chase, Severus falls into a N * M maze designed by Figo.<br>At first, Severus is located on the grid S. Every second he can only move to the four grids that adjacent to the grid he is   </p><p> located on. The moment he move to any side of the maze, he will get rid of Figo.   </p><p>After T seconds, Figo will reach the maze. Because Figo is the designer of the maze, when Figo arrive, he can reach any    </p><p>grid if he want. If Severus can’t leave the maze at that moment, there is no doubt that he will be caught by Figo.   </p><p>Figo is very cunning. In the maze he set not only walls, but also fire! After every second, the fire will spread to the four    </p><p>grid that adjacent to it. When a grid is on fire, certainly, Severus can not be on the grid. Can Severus escape from the   </p><p> maze?   </p><p>Input<br>The first line will be a integer CS, indicating the number of test cases. In every case, there will be three    integer N, M, T. After that there will be N * M characters, decribe the maze.<br>The “.” is a empty grid, “#” is wall, “F” is the fire, “S” is the initial grid that Severus stands on.   </p><p>10 &lt;= n , m  &lt;= 100      10 &lt;= T &lt;=10000    </p><p>Output<br>There is only one line, if Severus can get out, output the mininum time he need to escape from the maze. If he    can’t,   </p><p> output “Poor Severus must be caught by strong Figo!!!”   </p><p>Sample Input<br>2 4 4 4 #### #SF# #..# #..# 3 3 4 ### #S.<br>#.F   </p><p>Sample Output   </p><p>3 Poor Severus must be caught by strong Figo!!!   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int direct[4][2]&#x3D;&#123;1,0,0,1,-1,0,0,-1&#125;;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int fireStep;</span><br><span class="line">    char p;</span><br><span class="line">    int x,y;</span><br><span class="line">&#125; a[101][101],c[10001],z[101],g;</span><br><span class="line">int b[101][101];</span><br><span class="line">int m,n,t;</span><br><span class="line">void FireBfs(node nn)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i][j]&#x3D;0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    b[nn.x][nn.y]&#x3D;1;</span><br><span class="line">    int front&#x3D;0,tail&#x3D;0;</span><br><span class="line">    a[nn.x][nn.y].fireStep&#x3D;0;</span><br><span class="line">    c[front]&#x3D;nn;</span><br><span class="line">    while(tail&lt;&#x3D;front)</span><br><span class="line">    &#123;</span><br><span class="line">        node n1&#x3D;c[tail++];</span><br><span class="line">        for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int x&#x3D;n1.x+direct[i][0];</span><br><span class="line">            int y&#x3D;n1.y+direct[i][1];</span><br><span class="line">            if(x&lt;n&amp;&amp;y&lt;m&amp;&amp;x&gt;&#x3D;0&amp;&amp;y&gt;&#x3D;0&amp;&amp;b[x][y]&#x3D;&#x3D;0)</span><br><span class="line">            &#123;</span><br><span class="line">                b[x][y]&#x3D;1;</span><br><span class="line">                if(a[x][y].fireStep&gt;a[n1.x][n1.y].fireStep+1||a[x][y].fireStep&#x3D;&#x3D;-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    a[x][y].fireStep&#x3D;a[n1.x][n1.y].fireStep+1;</span><br><span class="line">                &#125;</span><br><span class="line">                c[++front]&#x3D;a[x][y];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int Bfs(node nn)</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i][j]&#x3D;-1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    b[nn.x][nn.y]&#x3D;0;</span><br><span class="line">    int front&#x3D;0,tail&#x3D;0;</span><br><span class="line">    c[front]&#x3D;nn;</span><br><span class="line">    while(tail&lt;&#x3D;front)</span><br><span class="line">    &#123;</span><br><span class="line">        node n1&#x3D;c[tail++];</span><br><span class="line">        for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int x&#x3D;n1.x+direct[i][0];</span><br><span class="line">            int y&#x3D;n1.y+direct[i][1];</span><br><span class="line">            if(a[x][y].p&#x3D;&#x3D;&#39;.&#39;&amp;&amp;a[x][y].fireStep&gt;b[n1.x][n1.y]+1&amp;&amp;b[x][y]&#x3D;&#x3D;-1&amp;&amp;x&gt;&#x3D;0&amp;&amp;x&lt;n&amp;&amp;y&gt;&#x3D;0&amp;&amp;y&lt;m)</span><br><span class="line">            &#123;</span><br><span class="line">                b[x][y]&#x3D;b[n1.x][n1.y]+1;</span><br><span class="line">                c[++front]&#x3D;a[x][y];</span><br><span class="line">            &#125;</span><br><span class="line">            if(x&#x3D;&#x3D;-1||x&#x3D;&#x3D;n||y&#x3D;&#x3D;-1||y&#x3D;&#x3D;m)</span><br><span class="line">            &#123;</span><br><span class="line">                return b[n1.x][n1.y]+1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return -1;</span><br><span class="line">&#125;            </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d%d&quot;,&amp;n,&amp;m,&amp;t);</span><br><span class="line">            int i,j;</span><br><span class="line">            int k&#x3D;0;</span><br><span class="line">            getchar();</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    scanf(&quot;%c&quot;,&amp;a[i][j].p);</span><br><span class="line">                    a[i][j].fireStep&#x3D;-1;</span><br><span class="line">                    a[i][j].x&#x3D;i;</span><br><span class="line">                    a[i][j].y&#x3D;j;</span><br><span class="line">                    if(a[i][j].p&#x3D;&#x3D;&#39;F&#39;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        z[k++]&#x3D;a[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                    else if(a[i][j].p&#x3D;&#x3D;&#39;S&#39;)</span><br><span class="line">                    &#123;</span><br><span class="line">                        g&#x3D;a[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                getchar();</span><br><span class="line">            &#125;</span><br><span class="line">            for(i&#x3D;0;i&lt;k;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                FireBfs(z[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            k&#x3D;Bfs(g);</span><br><span class="line">        &#x2F;*    for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout&lt;&lt;a[i][j].fireStep;</span><br><span class="line">                &#125;</span><br><span class="line">                cout&lt;&lt;endl;</span><br><span class="line">            &#125;*&#x2F;</span><br><span class="line">            if(k&#x3D;&#x3D;-1)</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;Poor Severus must be caught by strong Figo!!!\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;%d\n&quot;,k);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 广搜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序</title>
      <link href="/posts/a444b428/"/>
      <url>/posts/a444b428/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 排序：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">void bubble_sort(int n,int a[])</span><br><span class="line">&#123;</span><br><span class="line"> int i,j;</span><br><span class="line"> for(i&#x3D;n-1;i&gt;&#x3D;0;i--)</span><br><span class="line"> &#123;</span><br><span class="line">  for(j&#x3D;0;j&lt;&#x3D;i;j++)</span><br><span class="line">  &#123;</span><br><span class="line">   if(a[j]&gt;a[j+1])</span><br><span class="line">   &#123;</span><br><span class="line">    swap(a[j],a[j+1]);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void heap_sort_child(int i,int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line"> if(i&lt;&#x3D;n&#x2F;2)</span><br><span class="line"> &#123;</span><br><span class="line">    int small&#x3D;i;</span><br><span class="line">    if(a[i]&gt;a[2*i+1]&amp;&amp;2*i+1&lt;&#x3D;n)</span><br><span class="line">    &#123;</span><br><span class="line">     small&#x3D;2*i+1;</span><br><span class="line">    &#125;</span><br><span class="line">    if(a[small]&gt;a[2*i+2]&amp;&amp;2*i+2&lt;&#x3D;n)</span><br><span class="line">    &#123;</span><br><span class="line">     small&#x3D;2*i+2;</span><br><span class="line">    &#125;</span><br><span class="line">    if(small!&#x3D;i)</span><br><span class="line">    &#123;</span><br><span class="line">     swap(a[i],a[small]);</span><br><span class="line">     heap_sort_child(small,a,n);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void heap_sort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line"> int m&#x3D;n&#x2F;2;</span><br><span class="line"> int i;</span><br><span class="line"> for(i&#x3D;m;i&gt;&#x3D;0;i--)</span><br><span class="line"> &#123;</span><br><span class="line">  heap_sort_child(i,a,n);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void quick_sort(int low,int high,int a[])</span><br><span class="line">&#123;</span><br><span class="line"> int m&#x3D;a[low];</span><br><span class="line"> int left&#x3D;low,right&#x3D;high;</span><br><span class="line"> while(left&lt;right)</span><br><span class="line"> &#123;</span><br><span class="line">  while(a[right]&gt;m&amp;&amp;left&lt;right)</span><br><span class="line">  &#123;</span><br><span class="line">   right--;</span><br><span class="line">  &#125;</span><br><span class="line">  if(left&lt;right)</span><br><span class="line">  &#123;</span><br><span class="line">   a[left++]&#x3D;a[right];</span><br><span class="line">  &#125;</span><br><span class="line">  while(a[left]&lt;m&amp;&amp;left&lt;right)</span><br><span class="line">  &#123;</span><br><span class="line">   left++;</span><br><span class="line">  &#125;</span><br><span class="line">  if(left&lt;right)</span><br><span class="line">  &#123;</span><br><span class="line">   a[right--]&#x3D;a[left];</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> a[left]&#x3D;m;</span><br><span class="line"> if(low&lt;high)</span><br><span class="line"> &#123;</span><br><span class="line">   quick_sort(low,left-1,a);</span><br><span class="line">   quick_sort(left+1,high,a);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void merge(int a[],int l,int m,int r)</span><br><span class="line">&#123;</span><br><span class="line"> int i&#x3D;l,j&#x3D;m+1,k&#x3D;0;</span><br><span class="line"> int *pd&#x3D;new int [(r-l+1)*sizeof(int)];</span><br><span class="line"> while(i&lt;&#x3D;m&amp;&amp;j&lt;&#x3D;r)</span><br><span class="line"> &#123;</span><br><span class="line">  pd[k++]&#x3D;a[i]&gt;a[j]? a[i++]:a[j++];</span><br><span class="line"> &#125;</span><br><span class="line"> while(i&lt;&#x3D;m)</span><br><span class="line"> &#123;</span><br><span class="line">  pd[k++]&#x3D;a[i++];</span><br><span class="line"> &#125;</span><br><span class="line"> while(j&lt;&#x3D;r)</span><br><span class="line"> &#123;</span><br><span class="line">  pd[k++]&#x3D;a[j++];</span><br><span class="line"> &#125;</span><br><span class="line"> for(k&#x3D;0,i&#x3D;l;i&lt;&#x3D;r;i++,k++)</span><br><span class="line"> &#123;</span><br><span class="line">  a[i]&#x3D;pd[k];</span><br><span class="line"> &#125;</span><br><span class="line"> delete[] pd;</span><br><span class="line">&#125;</span><br><span class="line">void merge_sort(int a[],int l,int r)</span><br><span class="line">&#123;</span><br><span class="line"> int m;</span><br><span class="line"> if(l&lt;r)</span><br><span class="line"> &#123;</span><br><span class="line">      m&#x3D;(r+l)&gt;&gt;1;</span><br><span class="line">   merge_sort(a,l,m);</span><br><span class="line">   merge_sort(a,m+1,r);</span><br><span class="line">   merge(a,l,m,r);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void insert_sort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line"> int i,position;</span><br><span class="line"> for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  if(a[i]&lt;a[i-1])</span><br><span class="line">  &#123;</span><br><span class="line">   position&#x3D;i-1;</span><br><span class="line">   do</span><br><span class="line">   &#123;</span><br><span class="line">    swap(a[position],a[position+1]);</span><br><span class="line">    position--;</span><br><span class="line">   &#125;while(position&gt;&#x3D;0&amp;&amp;a[position]&gt;a[position+1]);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void select_sort(int a[],int n)</span><br><span class="line">&#123;</span><br><span class="line"> int i,j&#x3D;0,large,position;</span><br><span class="line"> while(j&lt;n)</span><br><span class="line"> &#123;</span><br><span class="line">  large&#x3D;a[j];</span><br><span class="line">  position&#x3D;j;</span><br><span class="line">      for(i&#x3D;j;i&lt;&#x3D;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       if(large&lt;a[i])</span><br><span class="line">    &#123;</span><br><span class="line">        position&#x3D;i;</span><br><span class="line">     large&#x3D;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   swap(a[j],a[position]);</span><br><span class="line">   j++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"> int a[11]&#x3D;&#123;9,8,7,6,5,4,3,2,1,0&#125;;</span><br><span class="line"> int i;</span><br><span class="line"> cout&lt;&lt;&quot;冒泡排序&quot;&lt;&lt;endl;</span><br><span class="line">    bubble_sort(9,a);</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;&quot;堆排序&quot;&lt;&lt;endl;</span><br><span class="line">    heap_sort(a,9);</span><br><span class="line"> for(i&#x3D;1;i&lt;&#x3D;9;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  swap(a[0],a[10-i]);</span><br><span class="line">        heap_sort_child(0,a,9-i);</span><br><span class="line"> &#125;</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;&quot;快速排序&quot;&lt;&lt;endl;</span><br><span class="line">    quick_sort(0,9,a);</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;&quot;归并排序&quot;&lt;&lt;endl;</span><br><span class="line">    merge_sort(a,0,9);</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;&quot;插入排序&quot;&lt;&lt;endl;</span><br><span class="line">    insert_sort(a,9);</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;&quot;选择排序&quot;&lt;&lt;endl;</span><br><span class="line">    select_sort(a,9);</span><br><span class="line"> for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  cout&lt;&lt;a[i]&lt;&lt;&quot; &quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> cout&lt;&lt;endl;</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小Z的卡片</title>
      <link href="/posts/d1557dc8/"/>
      <url>/posts/d1557dc8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 小Z的卡片：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>小z的卡片<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 56(18 users)    Total Accepted: 15(12 users)    Rating:     Special Judge: No<br>Description<br>小w和小z想到了一个新游戏，在这个游戏中他们各有N个卡片。小w想去使用她的卡片去覆盖小z的卡片。   </p><p>卡片A能覆盖卡片B的条件是卡片A的高不小于卡片B的高同时卡片A的宽不小于卡片B的宽。   </p><p>现在请计算出小w的牌最多能覆盖小z的牌的数量。注意牌只能被使用一次，并且牌不能被旋转。   </p><p>Input<br>第一行是一个整数t代表测试数据组数。   </p><p>对于每组测试数据第一行是一个整数n(n&lt;=100000)代表卡片数量。   </p><p>接下来n行每行两个整数h(h&lt;=1000000000)和w(w&lt;=1000000000)代表小w的卡片的高和宽。    </p><p>在接下来n行每行两个整数h(h&lt;=1000000000)和w(w&lt;=1000000000)代表小z的卡片的高和宽。    </p><p>Output<br>对于每组测试数据，输出小w的牌最多能覆盖小z的牌的数量。<br>Sample Input<br>2   </p><p>2   </p><p>1 2   </p><p>3 4   </p><p>2 3   </p><p>4 5   </p><p>3   </p><p>2 3   </p><p>5 7   </p><p>6 8   </p><p>4 1   </p><p>2 5   </p><p>3 4    </p><p>Sample Output<br>1   </p><p>2   </p><p> 一开始相出的办法超时了，方法是，对小z的牌排序，然后对于小w的每个牌，找到宽度最接近的，然后覆盖它</p><p>代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node </span><br><span class="line">&#123;</span><br><span class="line">    int height,width;</span><br><span class="line">    int key;</span><br><span class="line">&#125; a[100001],b[100001];</span><br><span class="line">bool cmp(node x,node y)</span><br><span class="line">&#123;</span><br><span class="line">    return x.height&lt;y.height;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            int n;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">            int i;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;a[i].height,&amp;a[i].width);</span><br><span class="line">            &#125;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;b[i].height,&amp;b[i].width);</span><br><span class="line">                b[i].key&#x3D;0;</span><br><span class="line">            &#125;</span><br><span class="line">            sort(b,b+n,cmp);</span><br><span class="line">            int sum&#x3D;0,j;</span><br><span class="line">            int width_Max&#x3D;1000000000;</span><br><span class="line">            int width_Mark;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                width_Max&#x3D;1000000000;</span><br><span class="line">                for(j&#x3D;0;j&lt;n;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(b[j].key&#x3D;&#x3D;1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(b[j].height&gt;a[i].height)</span><br><span class="line">                    &#123;</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else if(b[j].height&lt;&#x3D;a[i].height&amp;&amp;b[j].width&lt;&#x3D;a[i].width)</span><br><span class="line">                    &#123;</span><br><span class="line">                        if(a[i].width-b[j].width&lt;width_Max)</span><br><span class="line">                        &#123;</span><br><span class="line">                            width_Max&#x3D;a[i].width-b[j].width;</span><br><span class="line">                            width_Mark&#x3D;j;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(width_Max!&#x3D;1000000000)</span><br><span class="line">                &#123;</span><br><span class="line">                    b[width_Mark].key&#x3D;1;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;%d\n&quot;,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>时间复杂度是n*n,这样会超时，   </p><p>所以   </p><p>把所有卡片放在一起排序，然后把排在前面的小z的卡片装在容器里，遇见小w的卡片，就在容器里找一个最大宽度的可覆盖的卡片   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int height,width;</span><br><span class="line">    int key;</span><br><span class="line">&#125;p[200001];</span><br><span class="line">bool cmp(node x,node y)</span><br><span class="line">&#123;</span><br><span class="line">    if(x.height!&#x3D;y.height)</span><br><span class="line">    &#123;</span><br><span class="line">        return x.height&lt;y.height;</span><br><span class="line">    &#125;</span><br><span class="line">    return x.key&gt;y.key;</span><br><span class="line">&#125;</span><br><span class="line">multiset &lt;int&gt; s;</span><br><span class="line">multiset &lt;int&gt; :: iterator it;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            int n;</span><br><span class="line">            scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">            int i;;</span><br><span class="line">            for(i&#x3D;0;i&lt;2*n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;p[i].height,&amp;p[i].width);</span><br><span class="line">                if(i&gt;&#x3D;n)</span><br><span class="line">                &#123;</span><br><span class="line">                    p[i].key&#x3D;1;</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    p[i].key&#x3D;0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            s.clear();</span><br><span class="line">            sort(p,p+2*n,cmp);</span><br><span class="line">            int sum&#x3D;0;</span><br><span class="line">            for(i&#x3D;0;i&lt;2*n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(p[i].key&#x3D;&#x3D;1)</span><br><span class="line">                &#123;</span><br><span class="line">                    s.insert(p[i].width);</span><br><span class="line">                &#125;</span><br><span class="line">                else if(!s.empty())</span><br><span class="line">                &#123;</span><br><span class="line">                    if(*s.begin()&lt;&#x3D;p[i].width)</span><br><span class="line">                    &#123;</span><br><span class="line">                        it&#x3D;s.upper_bound(p[i].width);</span><br><span class="line">                        it--;</span><br><span class="line">                        s.erase(it);</span><br><span class="line">                        sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;%d\n&quot;,sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最大连续和（线段树+分治）</title>
      <link href="/posts/2d566bed/"/>
      <url>/posts/2d566bed/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 最大连续和（线段树+分治）：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>最大连续和（线段树+分治）<br>最大连续和<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 61(13 users)    Total Accepted: 15(9 users)    Rating:     Special Judge: No<br>Description<br>给出一个长度为n的整数序列D，你的任务是对m个询问做出回答。对于询问(a,b)，需要找到  </p><p>两个下标x和y,使得a&lt;=x&lt;=y&lt;=b，并且Dx+Dx+1+….+Dy尽量大。如果有多组满足条件的x和y，x  </p><p>应尽量小。如果还有多解y也应尽量小。  </p><p>Input<br>第一行是一个整数T，代表测试数据组数。  </p><p>对于每组测试数据，第一行为一个整数(1&lt;=n,m&lt;=500000)，即整数序列的查询的个数。  </p><p>第二行包含n个整数，依次为D1,D2,…Dn的值。这些整数绝对值不超过10^9。以下m行  </p><p>每行为一个查询，包含两个整数a和b。  </p><p>Output<br>对于每组数据，对于每个查询输出一行包含两个整数x和y。  </p><p>Sample Input<br>1 8 3 -2 3 4 -6 6 10 -7 100 1 8 3 5 6 8<br>Sample Output<br>2 8 5 5 6 8<br>Author<br>陈禹@HRBUST  </p><p>一开始写出了这样的代码；    </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long  LONG;</span><br><span class="line">LONG p[500000];</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    LONG sum;</span><br><span class="line">    int left,right;</span><br><span class="line">&#125;;</span><br><span class="line">node check(int i1,int i2)</span><br><span class="line">&#123;</span><br><span class="line">    node no,max;</span><br><span class="line">    no.sum&#x3D;0;</span><br><span class="line">    no.left&#x3D;i1;</span><br><span class="line">    no.right&#x3D;i1-1;</span><br><span class="line">    &#x2F;&#x2F;max.sum&#x3D;-9223372036854775808;</span><br><span class="line">    max.sum&#x3D;-5000000;</span><br><span class="line">    max.left&#x3D;i1;</span><br><span class="line">    max.right&#x3D;i1;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;i1;i&lt;&#x3D;i2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        no.sum+&#x3D;p[i];</span><br><span class="line">        no.right++;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;no.sum&lt;&lt;endl;</span><br><span class="line">        if(no.sum&gt;max.sum)</span><br><span class="line">        &#123;</span><br><span class="line">            max&#x3D;no;</span><br><span class="line">        &#x2F;&#x2F;    cout&lt;&lt;max.sum&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        if(no.sum&lt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            no.left&#x3D;i+1;</span><br><span class="line">            no.right&#x3D;i;</span><br><span class="line">            no.sum&#x3D;0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return max;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T,m,n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            int i;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%ld&quot;,&amp;p[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            int x,y;</span><br><span class="line">            while(m--)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">                node q&#x3D;check(x-1,y-1);</span><br><span class="line">                printf(&quot;%d %d\n&quot;,q.left+1,q.right+1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>果断超时<br>后来想到线段树：  </p><p>写出了代码，中间出了很多错误，基本都是脑残错误  </p><p>原理：  </p><p>每次需要比较左右子树  </p><p>最大值的比较：  </p><p>只需要比较三段，（1）max_left,(2)max_right(3)max_left_suffix+max_right_prefix  </p><p>以最左边第一个元素为起点的最大值,为什么要更新他，为了使其父亲线段获得最大值  </p><p>（1）比较 max_left_prefix与left_all+max_right_prefix  </p><p>以最右边最后一个元素开始往左的最大值  </p><p>（1）比较max_right_suffix与right_all+max_left_suffix   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int SIZE&#x3D;500005;</span><br><span class="line">typedef long  LL;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    LL sum,all;</span><br><span class="line">    int pre_r,suf_l;</span><br><span class="line">    int max_l,max_r;</span><br><span class="line">    LL prefixSum,suffixSum;</span><br><span class="line">&#125; p[SIZE&lt;&lt;2];</span><br><span class="line">LL a[SIZE];</span><br><span class="line"></span><br><span class="line">void pushup(int L,int R,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    int ll&#x3D;rt&lt;&lt;1;</span><br><span class="line">    int rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    p[rt].all&#x3D;p[ll].all+p[rr].all;</span><br><span class="line"></span><br><span class="line">    p[rt].prefixSum&#x3D;p[ll].prefixSum;</span><br><span class="line">    p[rt].pre_r&#x3D;p[ll].pre_r;</span><br><span class="line"></span><br><span class="line">    p[rt].suffixSum&#x3D;p[rr].all+p[ll].suffixSum;</span><br><span class="line">    p[rt].suf_l&#x3D;p[ll].suf_l;</span><br><span class="line"></span><br><span class="line">    p[rt].sum&#x3D;p[ll].sum;</span><br><span class="line">    p[rt].max_l&#x3D;p[ll].max_l;</span><br><span class="line">    p[rt].max_r&#x3D;p[ll].max_r;</span><br><span class="line">    if(p[rt].sum&lt;p[rr].sum)</span><br><span class="line">    &#123;</span><br><span class="line">        p[rt].sum&#x3D;p[rr].sum;</span><br><span class="line">        p[rt].max_l&#x3D;p[rr].max_l;</span><br><span class="line">        p[rt].max_r&#x3D;p[rr].max_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if((p[rt].sum&lt;p[ll].suffixSum+p[rr].prefixSum)||</span><br><span class="line">        (p[rt].sum&#x3D;&#x3D;p[ll].suffixSum+p[rr].prefixSum&amp;&amp;p[rt].max_l&gt;p[ll].suf_l))</span><br><span class="line">    &#123;</span><br><span class="line">        p[rt].sum&#x3D;p[ll].suffixSum+p[rr].prefixSum;</span><br><span class="line">        p[rt].max_l&#x3D;p[ll].suf_l;</span><br><span class="line">        p[rt].max_r&#x3D;p[rr].pre_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if(p[rt].prefixSum&lt;p[ll].all+p[rr].prefixSum)</span><br><span class="line">    &#123;</span><br><span class="line">        p[rt].prefixSum&#x3D;p[ll].all+p[rr].prefixSum;</span><br><span class="line">        p[rt].pre_r&#x3D;p[rr].pre_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if(p[rt].suffixSum&lt;p[rr].suffixSum)</span><br><span class="line">    &#123;</span><br><span class="line">        p[rt].suffixSum&#x3D;p[rr].suffixSum;</span><br><span class="line">        p[rt].suf_l&#x3D;p[rr].suf_l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void build(int L,int R,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    if(L&#x3D;&#x3D;R)</span><br><span class="line">    &#123;</span><br><span class="line">        p[rt].all&#x3D;p[rt].sum&#x3D;a[L];</span><br><span class="line">        p[rt].prefixSum&#x3D;a[L];</span><br><span class="line">        p[rt].suffixSum&#x3D;a[L];</span><br><span class="line">        p[rt].max_l&#x3D;L;</span><br><span class="line">        p[rt].max_r&#x3D;L;</span><br><span class="line">        p[rt].pre_r&#x3D;L;</span><br><span class="line">        p[rt].suf_l&#x3D;L;</span><br><span class="line">        return ;</span><br><span class="line">    &#125;</span><br><span class="line">    int m&#x3D;(L+R)&gt;&gt;1;</span><br><span class="line">    int ll&#x3D;rt&lt;&lt;1;</span><br><span class="line">    int rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    build(L,m,ll);</span><br><span class="line">    build(m+1,R,rr);</span><br><span class="line">    pushup(L,R,rt);</span><br><span class="line">&#125;</span><br><span class="line">node query(int L,int R,int l,int r,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    if(L&#x3D;&#x3D;l&amp;&amp;R&#x3D;&#x3D;r)</span><br><span class="line">    &#123;</span><br><span class="line">        return p[rt];</span><br><span class="line">    &#125;</span><br><span class="line">      &#x2F;*  if(L&#x3D;&#x3D;R)   这一段时不可取的，这回大大投稿时间复杂度</span><br><span class="line">       &#123;</span><br><span class="line">              return p[rt];</span><br><span class="line">        &#125;*&#x2F;</span><br><span class="line">    int m&#x3D;(L+R)&gt;&gt;1;</span><br><span class="line">    int ll&#x3D;rt&lt;&lt;1;</span><br><span class="line">    int rr&#x3D;rt&lt;&lt;1|1;</span><br><span class="line">    if(m&lt;l)</span><br><span class="line">    &#123;</span><br><span class="line">        return query(m+1,R,l,r,rr);</span><br><span class="line">    &#125;</span><br><span class="line">    if(m&gt;&#x3D;r)</span><br><span class="line">    &#123;</span><br><span class="line">        return query(L,m,l,r,ll);</span><br><span class="line">    &#125;</span><br><span class="line">    node x&#x3D;query(L,m,l,m,ll);</span><br><span class="line">    node y&#x3D;query(m+1,R,m+1,r,rr);</span><br><span class="line">    node z;</span><br><span class="line">    z.all&#x3D;x.all+y.all;</span><br><span class="line"></span><br><span class="line">    z.sum&#x3D;x.sum;</span><br><span class="line">    z.max_l&#x3D;x.max_l;</span><br><span class="line">    z.max_r&#x3D;x.max_r;</span><br><span class="line"></span><br><span class="line">    z.prefixSum&#x3D;x.prefixSum;</span><br><span class="line">    z.pre_r&#x3D;x.pre_r;</span><br><span class="line"></span><br><span class="line">    z.suffixSum&#x3D;x.suffixSum+y.all;</span><br><span class="line">    z.suf_l&#x3D;x.suf_l;</span><br><span class="line">    if(z.sum&lt;y.sum)</span><br><span class="line">    &#123;</span><br><span class="line">        z.sum&#x3D;y.sum;</span><br><span class="line">        z.max_l&#x3D;y.max_l;</span><br><span class="line">        z.max_r&#x3D;y.max_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if((z.sum&lt;x.suffixSum+y.prefixSum)||</span><br><span class="line">    (z.sum&lt;x.suffixSum+y.prefixSum&amp;&amp;z.max_l&gt;x.suf_l))</span><br><span class="line">    &#123;</span><br><span class="line">        z.sum&#x3D;x.suffixSum+y.prefixSum;</span><br><span class="line">        z.max_l&#x3D;x.suf_l;</span><br><span class="line">        z.max_r&#x3D;y.pre_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if(z.prefixSum&lt;x.all+y.prefixSum)</span><br><span class="line">    &#123;</span><br><span class="line">        z.prefixSum&#x3D;x.all+y.prefixSum;</span><br><span class="line">        z.pre_r&#x3D;y.pre_r;</span><br><span class="line">    &#125;</span><br><span class="line">    if(z.suffixSum&lt;y.suffixSum)</span><br><span class="line">    &#123;</span><br><span class="line">        z.suffixSum&#x3D;y.suffixSum;</span><br><span class="line">        z.suf_l&#x3D;y.suf_l;</span><br><span class="line">    &#125;</span><br><span class="line">    return z;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            int n,m;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">            int i;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%ld&quot;,&amp;a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            build(1,n,1);</span><br><span class="line">            while(m--)</span><br><span class="line">            &#123;</span><br><span class="line">                int L,R;</span><br><span class="line">                scanf(&quot;%d%d&quot;,&amp;L,&amp;R);</span><br><span class="line">                node q&#x3D;query(1,n,L,R,1);</span><br><span class="line">                printf(&quot;%d %d\n&quot;,q.max_l,q.max_r);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LCIS</title>
      <link href="/posts/5183ff02/"/>
      <url>/posts/5183ff02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** LCIS：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>LCIS<br>Time Limit: 3000 MS    Memory Limit: 32768 K<br>Total Submit: 70(28 users)    Total Accepted: 33(26 users)    Rating:     Special Judge: No<br>Description<br>Given n integers.<br>You have two operations:<br>U A B: replace the Ath number by B. (index counting from 0)<br>Q A B: output the length of the longest consecutive increasing subsequence (LCIS) in [a, b].<br>Input<br>T in the first line, indicating the case number.<br>Each case starts with two integers n , m(0&lt;n,m&lt;=105).<br>The next line has n integers(0&lt;=val&lt;=105).<br>The next m lines each has an operation:<br>U A B(0&lt;=A,n , 0&lt;=B=105)<br>OR<br>Q A B(0&lt;=A&lt;=B&lt; n).<br>Output<br>For each Q, output the answer.<br>Sample Input<br>1 10 10 7 7 3 3 5 9 9 8 1 8  Q 6 6 U 3 4 Q 0 1 Q 0 5 Q 4 7 Q 3 5 Q 0 2 Q 4 6 U 6 10 Q 0 9<br>Sample Output<br>1 1 4 2 3 1 2 5<br>Recommend<br>`Wind @Hrbust<br>Author<br>shǎ崽   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">const int SIZE&#x3D;100005;</span><br><span class="line">int LC[SIZE&lt;&lt;2];</span><br><span class="line">int RC[SIZE&lt;&lt;2];</span><br><span class="line">int CS[SIZE&lt;&lt;2];</span><br><span class="line">int a[SIZE];</span><br><span class="line">int N,M;</span><br><span class="line">template &lt;class typeone&gt;</span><br><span class="line">typeone max(typeone x,typeone y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">template &lt;class typeone &gt;</span><br><span class="line">typeone min(typeone x,typeone y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">void pushup(int l,int r,int lr)</span><br><span class="line">&#123;</span><br><span class="line">    LC[lr]&#x3D;LC[lr&lt;&lt;1];</span><br><span class="line">    RC[lr]&#x3D;RC[lr&lt;&lt;1|1];</span><br><span class="line">    CS[lr]&#x3D;0;</span><br><span class="line">    int m&#x3D;(l+r)&gt;&gt;1;</span><br><span class="line">    if(a[m]&lt;a[m+1])</span><br><span class="line">    &#123;</span><br><span class="line">        CS[lr]&#x3D;RC[lr&lt;&lt;1]+LC[lr&lt;&lt;1|1];</span><br><span class="line">        if(LC[lr]&#x3D;&#x3D;m-l+1)</span><br><span class="line">        &#123;</span><br><span class="line">            LC[lr]+&#x3D;LC[lr&lt;&lt;1|1];</span><br><span class="line">        &#125;</span><br><span class="line">        if(RC[lr]&#x3D;&#x3D;r-m)</span><br><span class="line">        &#123;</span><br><span class="line">            RC[lr]+&#x3D;RC[lr&lt;&lt;1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    CS[lr]&#x3D;max(CS[lr],max(CS[lr&lt;&lt;1],CS[lr&lt;&lt;1|1]));</span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void build(int l,int r,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    LC[rt]&#x3D;RC[rt]&#x3D;CS[rt]&#x3D;0;</span><br><span class="line">    if(l&#x3D;&#x3D;r)</span><br><span class="line">    &#123;</span><br><span class="line">        LC[rt]&#x3D;RC[rt]&#x3D;CS[rt]&#x3D;1;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[l]);</span><br><span class="line">        return ;</span><br><span class="line">    &#125;</span><br><span class="line">    int m&#x3D;(l+r)&gt;&gt;1;</span><br><span class="line">    build(l,m,rt&lt;&lt;1);</span><br><span class="line">    build(m+1,r,rt&lt;&lt;1|1);</span><br><span class="line">    pushup(l,r,rt);</span><br><span class="line">    return ;</span><br><span class="line">&#125;</span><br><span class="line">void update(int pos,int l,int r,int rt,int val)</span><br><span class="line">&#123;</span><br><span class="line">    if(l&#x3D;&#x3D;pos&amp;&amp;r&#x3D;&#x3D;pos)</span><br><span class="line">    &#123;</span><br><span class="line">        a[pos]&#x3D;val;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int m&#x3D;(l+r)&gt;&gt;1;</span><br><span class="line">    if(pos&lt;&#x3D;m)</span><br><span class="line">    &#123;</span><br><span class="line">        update(pos,l,m,rt&lt;&lt;1,val);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        update(pos,m+1,r,rt&lt;&lt;1|1,val);</span><br><span class="line">    &#125;</span><br><span class="line">    pushup(l,r,rt);</span><br><span class="line">    return ;</span><br><span class="line">&#125;</span><br><span class="line">int query(int L,int R,int l,int r,int rt)</span><br><span class="line">&#123;</span><br><span class="line">    if(L&lt;&#x3D;l&amp;&amp;R&gt;&#x3D;r)</span><br><span class="line">    &#123;</span><br><span class="line">        return CS[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    int m&#x3D;(l+r)&gt;&gt;1;</span><br><span class="line">    if(R&lt;&#x3D;m)</span><br><span class="line">    &#123;</span><br><span class="line">        return query(L,R,l,m,rt&lt;&lt;1);</span><br><span class="line">    &#125;</span><br><span class="line">    else if(L&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        return  query(L,R,m+1,r,rt&lt;&lt;1|1);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        int t1&#x3D;0,t2&#x3D;0,t3&#x3D;0;</span><br><span class="line">        t1&#x3D;query(L,R,l,m,rt&lt;&lt;1);</span><br><span class="line">        t2&#x3D;query(L,R,m+1,r,rt&lt;&lt;1|1);</span><br><span class="line">        if(a[m]&lt;a[m+1])</span><br><span class="line">        &#123;</span><br><span class="line">            t3&#x3D;min(LC[rt&lt;&lt;1|1],R-m)+min(RC[rt&lt;&lt;1],m-L+1);</span><br><span class="line">        &#125;</span><br><span class="line">        return max(t3,max(t1,t2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            char k[2];</span><br><span class="line">            scanf(&quot;%d %d&quot;,&amp;N,&amp;M);</span><br><span class="line">            build(1,N,1);</span><br><span class="line">            int x,y;</span><br><span class="line">        &#x2F;&#x2F;    getchar();</span><br><span class="line">            while(M--)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%s %d %d&quot;,&amp;k,&amp;x,&amp;y);</span><br><span class="line">                if(strcmp(k,&quot;Q&quot;)&#x3D;&#x3D;0)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%d\n&quot;,query(x+1,y+1,1,N,1));    </span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    update(x+1,1,N,1,y);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（FLOYD）COW CONTEST</title>
      <link href="/posts/1bd3e80f/"/>
      <url>/posts/1bd3e80f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** （FLOYD）COW CONTEST：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Cow Contest<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 224(75 users)    Total Accepted: 93(69 users)    Rating:     Special Judge: No<br>Description<br>N (1 ≤ N ≤ 100) cows, conveniently numbered 1..N, are participating in a programming contest. As we all know, some cows code better than others. Each cow has a certain constant skill rating that is unique among the competitors.   </p><p>The contest is conducted in several head-to-head rounds, each between two cows. If cow A has a greater skill level    than cow B (1 ≤ A ≤ N; 1 ≤ B ≤ N; A ≠ B), then cow A will always beat cow B.   </p><p>Farmer John is trying to rank the cows by skill level. Given a list the results of M (1 ≤ M ≤ 4,500) two-cow    rounds, determine the number of cows whose ranks can be precisely determined from the results. It is guaranteed    that the results of the rounds will not be contradictory.   </p><p>Input<br>For each test case:    </p><ul><li>Line 1: Two space-separated integers: N and M * Lines 2..M+1: Each line contains two space-separated integers    that describe the competitors and results (the first integer, A, is the winner) of a single round of competition: A and B   </li></ul><p>Process to the end of file.    </p><p>Output<br>For each test case:   </p><ul><li>Line 1: A single integer representing the number of cows whose ranks can be determined   </li></ul><p>Sample Input<br>5 5 4 3 4 2 3 2 1 2 2 5<br>Sample Output<br>2<br>Hint<br>编号为2的奶牛输给了编号为1、3、4的奶牛，也就是说她的水平比这3头奶 牛都差。而编号为5的奶牛又输在了她的手下，也就是说，她的水平比编号   为5的 奶牛强一些。于是，编号为2的奶牛的排名必然为第4，编号为5的奶牛的水平必 然最差。其他3头奶牛的排名仍无法确定。</p><p>   一开始写出了这样的代码：   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[101][101];</span><br><span class="line">int n,m;</span><br><span class="line">void check1(int p,int q)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[q][i]&#x3D;&#x3D;1)</span><br><span class="line">        &#123;</span><br><span class="line">            a[p][i]&#x3D;1;</span><br><span class="line">            check1(p,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void check2(int p,int q)</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(a[q][i]&#x3D;&#x3D;-1)</span><br><span class="line">        &#123;</span><br><span class="line">            a[p][i]&#x3D;-1;</span><br><span class="line">            check2(p,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        int x,y;</span><br><span class="line">        memset(a,0,sizeof(a));</span><br><span class="line">        while(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">            a[x][y]&#x3D;1;</span><br><span class="line">            a[y][x]&#x3D;-1;</span><br><span class="line">        &#125;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(a[i][j]&#x3D;&#x3D;1)</span><br><span class="line">                &#123;</span><br><span class="line">                    check1(i,j);</span><br><span class="line">                &#125;</span><br><span class="line">                else if(a[i][j]&#x3D;&#x3D;-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    check2(i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        int max,min,sum&#x3D;0;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            max&#x3D;0;</span><br><span class="line">            min&#x3D;0;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(a[i][j]&#x3D;&#x3D;1)</span><br><span class="line">                &#123;</span><br><span class="line">                    max++;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(a[i][j]&#x3D;&#x3D;-1)</span><br><span class="line">                &#123;</span><br><span class="line">                    min++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(max+min&#x3D;&#x3D;n-1)</span><br><span class="line">            &#123;</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>runtimeerro，可能是递归太深了   </p><p>用Floyd算法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[101][101];</span><br><span class="line">int n,m;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    while(~scanf(&quot;%d%d&quot;,&amp;n,&amp;m))</span><br><span class="line">    &#123;</span><br><span class="line">        int i,j;</span><br><span class="line">        int x,y;</span><br><span class="line">        memset(a,0,sizeof(a));</span><br><span class="line">        while(m--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">            a[x][y]&#x3D;1;</span><br><span class="line">            a[y][x]&#x3D;-1;</span><br><span class="line">        &#125;</span><br><span class="line">        int k;</span><br><span class="line">        for(k&#x3D;1;k&lt;&#x3D;n;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i][k]&#x3D;&#x3D;1&amp;&amp;a[k][j]&#x3D;&#x3D;1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        a[i][j]&#x3D;1;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(a[i][k]&#x3D;&#x3D;-1&amp;&amp;a[k][j]&#x3D;&#x3D;-1)</span><br><span class="line">                    &#123;</span><br><span class="line">                        a[i][j]&#x3D;-1;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bool key;</span><br><span class="line">        int sum&#x3D;0;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            key&#x3D;true;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if(a[i][j]!&#x3D;1&amp;&amp;a[i][j]!&#x3D;-1&amp;&amp;i!&#x3D;j)</span><br><span class="line">                &#123;</span><br><span class="line">                    key&#x3D;false;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(key)</span><br><span class="line">            &#123;</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%d\n&quot;,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>螺旋的矩阵</title>
      <link href="/posts/be0e09b1/"/>
      <url>/posts/be0e09b1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 螺旋的矩阵：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>螺旋的矩阵<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 23(16 users)    Total Accepted: 14(14 users)    Rating:    Special Judge: No<br>Description<br>给出一个奇数 n，我们可以把数字 1 到 n*n 放到一个螺旋的矩阵中。   </p><p>下图给出了从1到25的放法：   </p><pre><code>   1    2   3   4   5  ---------------------1| 21  22  23   24  252| 20   7   8    9  103| 19   6   1    2  114| 18   5   4    3  125| 17  16  15   14  13</code></pre><p>正如我们看到的，矩阵中的每个位置都对应一个唯一的整数，例如第一行第一列是一个21，第5行第2列是一个16。   </p><p>现在，给出一个整数 n(1&lt;=n&lt;=32768),和一个整数m(1&lt;=m&lt;=n*n)，你需要输出整数 m的位置。   </p><p>Input<br>第一行是一个整数T,表示数据的组数，接下来的T行每行两个整数n, m。   </p><p>Output<br>第一行是一个整数T,表示数据的组数，接下来的T行每行两个整数n, m。   </p><p>Sample Input<br>3   </p><p>3 9   </p><p>5 21   </p><p>5 16    </p><p>Sample Output<br>3   </p><p>3 9   </p><p>5 21   </p><p>5 16    </p><p>Source<br>2014.11.30新生赛-正式赛   </p><p>找规律，水。。。。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long LONG;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            LONG n,m;</span><br><span class="line">            scanf(&quot;%ld%ld&quot;,&amp;n,&amp;m);</span><br><span class="line">            LONG s&#x3D;sqrt(m*1.0);</span><br><span class="line">            LONG s1&#x3D;s*s;</span><br><span class="line">            LONG x,y;</span><br><span class="line">            if(s%2&#x3D;&#x3D;1)</span><br><span class="line">            &#123;</span><br><span class="line">                x&#x3D;1+(n-s)&#x2F;2,y&#x3D;s+(n-s)&#x2F;2;</span><br><span class="line">                if(s1&#x3D;&#x3D;m)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                y++;</span><br><span class="line">                s1++;</span><br><span class="line">                if(s1&#x3D;&#x3D;m)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                int i;</span><br><span class="line">                int key&#x3D;0;</span><br><span class="line">                for(i&#x3D;0;i&lt;s;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    s1++;</span><br><span class="line">                    x++;</span><br><span class="line">                    if(s1&#x3D;&#x3D;m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        key&#x3D;1;</span><br><span class="line">                        printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(key)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                for(i&#x3D;0;i&lt;s;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    s1++;</span><br><span class="line">                    y--;</span><br><span class="line">                    if(s1&#x3D;&#x3D;m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                x&#x3D;n-(n-s)&#x2F;2;</span><br><span class="line">                y&#x3D;(n-s)&#x2F;2+n%2+1;</span><br><span class="line">            &#x2F;&#x2F;    cout&lt;&lt;x&lt;&lt;&quot; &quot;&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">                if(s1&#x3D;&#x3D;m)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                y--;</span><br><span class="line">                s1++;</span><br><span class="line">                if(s1&#x3D;&#x3D;m)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                int i;</span><br><span class="line">                int key&#x3D;0;</span><br><span class="line">                for(i&#x3D;0;i&lt;s;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    x--;</span><br><span class="line">                    s1++;</span><br><span class="line">                    if(s1&#x3D;&#x3D;m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        key&#x3D;1;</span><br><span class="line">                        printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(key)</span><br><span class="line">                &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                for(i&#x3D;0;i&lt;s;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    y++;</span><br><span class="line">                    s1++;</span><br><span class="line">                    if(s1&#x3D;&#x3D;m)</span><br><span class="line">                    &#123;</span><br><span class="line">                        printf(&quot;%ld %ld\n&quot;,x,y);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>斐波纳契数之组合</title>
      <link href="/posts/e11756c2/"/>
      <url>/posts/e11756c2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 斐波纳契数之组合：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>斐波纳契数之组合<br>Time Limit: 1000 MS    Memory Limit: 65535 K<br>Total Submit: 145(66 users)    Total Accepted: 83(65 users)    Rating:     Special Judge: No<br>Description<br>斐波那契数列是这么定义的：F0 = 1, F1 = 1, F2 = F1 + F0，··· Fn = Fn-1 + Fn-2（n&gt;=2），对于每一项，它们都是斐波那契数。   </p><p>现在给出一个整数d，求一个组合使得a + b + c = d，其中a、b、c 都是斐波纳契数，且a &lt;= b &lt;= c。<br>Input<br>有多组测试数据，对于每组测试数据，仅包含一个整数d（0&lt;=d&lt;=2000000000）。   </p><p>处理到文件结束，测试数据组数少于150组。   </p><p>Output<br>对于每组测试数据，输出一行，如果存在 a b c ，则输出最小字典序的组合，否则输出-1。   </p><p>Sample Input<br>3<br>4<br>5<br>0<br>Sample Output<br>1 1 1<br>1 1 2<br>1 1 3<br>-1<br>Source<br>计算机科学与技术学院2012级新生程序设计竞赛(正式赛)<br>Author<br>黄李龙@HRBUST   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long  LONG;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    LONG a[48];</span><br><span class="line">    a[0]&#x3D;0;</span><br><span class="line">    a[1]&#x3D;1;</span><br><span class="line">    int i;</span><br><span class="line">    for(i&#x3D;2;i&lt;&#x3D;47;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]&#x3D;a[i-1]+a[i-2];</span><br><span class="line">    &#125;</span><br><span class="line">    LONG d;</span><br><span class="line">    while(~scanf(&quot;%ld&quot;,&amp;d))</span><br><span class="line">    &#123;</span><br><span class="line">        int j,k;</span><br><span class="line">        int key&#x3D;0;</span><br><span class="line">        for(i&#x3D;1;i&lt;&#x3D;47;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            for(j&#x3D;1;j&lt;&#x3D;47;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                for(k&#x3D;1;k&lt;&#x3D;47;k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i]+a[j]+a[k]&#x3D;&#x3D;d)</span><br><span class="line">                    &#123;</span><br><span class="line">                        key&#x3D;1;</span><br><span class="line">                        printf(&quot;%ld %ld %ld\n&quot;,a[i],a[j],a[k]);</span><br><span class="line">                        break;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(key)</span><br><span class="line">                &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(key)</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(!key)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;-1\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵乘法+快速幂求斐波那契</title>
      <link href="/posts/e02cc5f8/"/>
      <url>/posts/e02cc5f8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 矩阵乘法+快速幂求斐波那契：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int n,m;</span><br><span class="line">int a[2][2]&#x3D;&#123;1,1,1,0&#125;;</span><br><span class="line">int b[2][2]&#x3D;&#123;1,0,0,1&#125;;</span><br><span class="line">void jzcf(int a[2][2],int b[2][2])</span><br><span class="line">&#123;</span><br><span class="line">    int i,j,k;</span><br><span class="line">    int c[2][2];</span><br><span class="line">    for(i&#x3D;0;i&lt;2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;2;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            c[i][j]&#x3D;0;</span><br><span class="line">            for(k&#x3D;0;k&lt;2;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                c[i][j]&#x3D;(c[i][j]+a[i][k]*b[k][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;2;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i][j]&#x3D;c[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">void ksm(int n)</span><br><span class="line">&#123;</span><br><span class="line">    if(n&#x3D;&#x3D;0)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;0&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        n--;</span><br><span class="line">        while(n)</span><br><span class="line">        &#123;</span><br><span class="line">            if(n%2&#x3D;&#x3D;1)</span><br><span class="line">            &#123;</span><br><span class="line">                jzcf(a,b);</span><br><span class="line">            &#125;</span><br><span class="line">            jzcf(a,a);</span><br><span class="line">            n&#x2F;&#x3D;2;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;b[0][0]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    while(cin&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        ksm(n);</span><br><span class="line">        a[0][0]&#x3D;a[0][1]&#x3D;a[1][0]&#x3D;b[0][0]&#x3D;b[1][1]&#x3D;1;</span><br><span class="line">        a[1][1]&#x3D;b[0][1]&#x3D;b[1][0]&#x3D;0;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>大神博客：</p><p>母函数<a href="http://blog.csdn.net/xuzengqiang/article/details/7464337" target="_blank" rel="external nofollow noreferrer noopener">http://blog.csdn.net/xuzengqiang/article/details/7464337</a></p><p><a href="http://www.cnblogs.com/dongsheng/archive/2013/06/02/3114073.html" target="_blank" rel="external nofollow noreferrer noopener">http://www.cnblogs.com/dongsheng/archive/2013/06/02/3114073.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POLYGON</title>
      <link href="/posts/f8e1df08/"/>
      <url>/posts/f8e1df08/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** POLYGON：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>polygon<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 38(28 users)    Total Accepted: 29(27 users)    Rating:     Special Judge: No<br>Description<br>We have a special polygon that all points have the same distance to original point.As you know   </p><p>we can get N segments after linking the original point and the points on the polygon,   </p><p>then we can also get N angles between each pair of the neighbor segments.   </p><p>Now give you the data about the angle, please calculate the area of the polygon.   </p><p>Input<br>There are multiple test cases.   </p><p>The first line contains two integer N and D indicating the number of the points and their distance to original    point. (3 &lt;= N &lt;= 10, 1 &lt;= D &lt;= 10)   </p><p>The next lines contains N integers indicating the angles. The sum of the N numbers is always 360.   </p><p>Output<br>For each test case   </p><p>output one float numbe indicating the area of the polygon. The printed value should have 3 digits after the decimal point.   </p><p>Sample Input<br>4 1   </p><p>90 90 90 90   </p><p>6 1   </p><p>60 60 60 60 60 60   </p><p>Sample Output<br>2.000   </p><p>2.598   </p><p>Hint<br>原点在多边形内部，各顶点与原点相连得到相邻两线段夹角小于180度<br>Author<br>陈禹@HRBUST   </p><p> 题目大意： 给你一个多边形，多边形中间有一个点，多边形上的点距离这个原点都相等，已知这个距离和相邻两个点与这个原点组成的夹角   </p><p>求面积   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;math.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int N;</span><br><span class="line">double d;</span><br><span class="line">double PI&#x3D;atan(1)*8;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;cout&lt;&lt;PI&lt;&lt;endl;</span><br><span class="line">    while(~scanf(&quot;%d%lf&quot;,&amp;N,&amp;d))</span><br><span class="line">    &#123;</span><br><span class="line">        double ans;</span><br><span class="line">        double sum&#x3D;0;</span><br><span class="line">        int i;</span><br><span class="line">        for(i&#x3D;0;i&lt;N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%lf&quot;,&amp;ans);</span><br><span class="line">            ans&#x3D;ans&#x2F;360*PI;</span><br><span class="line">            sum+&#x3D;d*d*sin(ans)&#x2F;2;</span><br><span class="line">        &#x2F;&#x2F;    cout&lt;&lt;sin(ans)&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%.3lf\n&quot;,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>连接SQLSERVER数据库</title>
      <link href="/posts/d253d892/"/>
      <url>/posts/d253d892/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 连接SQLSERVER数据库：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>一层一层的调用   </p><p>一层SqlConnction连接数据库   </p><p>二层SqlCommand执行SQL语句   </p><p>三层SqlDataAdapter填充DataSet或者DataSet   </p><p>四层DataSet  这是一个表的集合DataTable是他的一个表，   </p><p>五层DataTable   </p><p>六层DataRow DataColumn   </p><p>SqlCommandBuilder用于生成SQl语句更新数据库   </p><p>例：   </p><p>SqlConnection conn=new SqlConnection(“Data Source=.\SQLEXPRESS;Initial Catalog = EmployeeDB; Integrated    Security=True”);   </p><p>SqlCommand cmd=new SqlCommand(“select *”,conn);   </p><p>/*   </p><p>SqlCommand cmd=new SqlCommand(conn);   </p><p>cmd.Connection=conn;   </p><p>*/   </p><p>/*   </p><p>SqlCommand cmd=new SqlCommand();    </p><p>cmd.Connection=conn;   </p><p>cmd.CommandText=”select *”;   </p><p>*/   </p><p>/*   </p><p>SqlDataAdapter adapter = new SqlDataAdapter(“select *”, “Data Source=.\SQLEXPRESS;Initial Catalog = EmployeeDB; Integrated Security=True”);//可以直接避开SqlCommand直接用SqlDataAdapter   </p><p>*/   </p><p>/*   </p><p>SqlDataAdapter adapter = new SqlDataAdapter(“select *”, Conn);   </p><p>*/   </p><p>/*   </p><p>SqlDataAdapter adapter = new SqlDataAdapter(cmd);   </p><p>*/   </p><p>SqlDataAdapter adapter = new SqlDataAdapter();   </p><p>adapter.SelectCommand=cmd;   </p><p>SqlCommandBuilder builder = new SqlCommandBuilder(adapter);//加上这一句话，在更新数据库之前<br>DataSet ds = new DataSet();<br>adapter.Fill(ds, “Titles”);   </p><p> 　　　　　　　　</p><p>利用DateSet批量更新数据库时利用函数自动生成SQl语句时应注意：   </p><p>1、数据库中必须有主键，这样才便于增删改查；   </p><p>2、SqlDataAdapter必须放在SqlCommandBuilder中，以用于批量执行DataSet中的修改；   </p><p>3、修改后的DataSet需执行AcceptChanges（）方法后，才能更新DataSet，以便于下一步操作；   </p><p>另外：   </p><p>myAdapter.InsertCommand = myCommandBuilder<br>.GetInsertCommand();//插入   </p><p>myAdapter.UpdateCommand = myCommandBuilder<br>.GetUpdateCommand();//更新   </p><p>myAdapter.DeleteCommand = myCommandBuilder<br>.GetDeleteCommand();//删除   </p><p>这几个函数所产生的Sql语句就相当于给SqlCommand.CommandText所赋值的Sql语句如果自己不写用自动生成的Sql语句，那么   </p><p>数据库中必须有主键   </p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关闭第一个FORM窗口，打开另一个新窗口方法</title>
      <link href="/posts/be3b1b1c/"/>
      <url>/posts/be3b1b1c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 关闭第一个FORM窗口，打开另一个新窗口方法：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>1隐藏法，原理就是把旧窗口隐藏掉，再打开新窗口。   </p><p>//新建一个NewForm窗口（NewForm是自己定义的Form） NewForm fm=new NewForm()   </p><p>this.Hide();//隐藏现在这个窗口 fm.Show();//新窗口显现   </p><p>这种方法旧的窗口依旧会占内存，因此如果用来做登陆窗口不太好，但是如果旧窗口是以后还需要恢复的主窗口，这个方法便很不错，因为以后可以关掉新窗口，再用 旧窗口.Show() 就可以恢复旧窗口了。 所以这个方法适合在主窗口和子窗口间传递信息。   </p><p>2、再来便是为登录窗口设计的方法了。 在Program.cs里这样定义：   </p><p>static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false);   </p><p>//新建Login窗口（Login是自己定义的Form） Login Log = new Login();   </p><p>//使用模式对话框方法显示Log Log.ShowDialog();   </p><p>//DialogResult就是用来判断是否返回父窗体的 if (Log.DialogResult == DialogResult.OK) { //在线程中打开主窗体    Application.Run(new Main()); } } 在登陆窗口中验证结束后要赋值Log.DialogResult = DialogResult.OK 。 登录窗口完成任务后会被直接关掉，主窗口就打开了   </p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IKKI的卡片（大数）</title>
      <link href="/posts/8cb5153e/"/>
      <url>/posts/8cb5153e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** IKKI的卡片（大数）：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>ikki的卡片<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 135(45 users)    Total Accepted: 48(41 users)    Rating:     Special Judge: No<br>Description<br>ikki有一沓标有大写英文字母的卡片，但是奇怪的是里面只有标从’A’-‘T’的卡片，ikki用这20种卡片设计了一个   </p><p>小游戏：用’A’-‘T’分别表示数字 0 – 19，ikki把这些卡片表示的字母看成是20进制数，并用卡片拼成了两个数   </p><p>字，现在ikki想让你用卡片表示出这两个数字相加之后的结果（卡片数量不限）。例如：拼成两个20进制数   </p><p>分别是AAAADH,BCE 可以这样得到结果：   </p><p>a = 0 * 20^5+0* 20^4+ 0* 20^3+ 0 <em>20^2 + 3</em>20 + 7 = 67 b = 1<em>20^2 + 2</em>20 + 4 = 444 a + b = 511 = BFL   </p><p>Input<br>多组测试数据。    </p><p>每组测试数据输入两个只包含大写字母’A’-‘T’的字符串，表示两个20进制数，字符串长度均小于200。   </p><p>Output<br>对于每组测试数据输出一个用卡片表示的两个20进制数的和，每组输出占一行。<br>Sample Input<br>AAA C<br>AAADH BCE<br>Sample Output<br>C<br>BFL   </p><p>Author<br>周洲@hrbust   </p><p>今天这个题教我做人了，本来今天想早点睡觉，毕竟忙了一天了，可是这个题一直卡着，卡了我一晚上，而且是一个我一直不知道的小细节卡着我，。。。   </p><p>一开始写出了这样的代码，马上提交果断错。。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char a[21]&#x3D;&#123;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,&#39;I&#39;</span><br><span class="line">,&#39;J&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,&#39;S&#39;,&#39;T&#39;&#125;;&#x2F;&#x2F;65</span><br><span class="line">int max(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int min(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char p[202],q[202];</span><br><span class="line">    while(~scanf(&quot;%s%s&quot;,p,q))</span><br><span class="line">    &#123;</span><br><span class="line">        int p1[202],q1[202];</span><br><span class="line">        int i,j;</span><br><span class="line">        int m&#x3D;strlen(p),n&#x3D;strlen(q);</span><br><span class="line">        int k&#x3D;0;</span><br><span class="line">        for(i&#x3D;m-1;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            p1[k++]&#x3D;p[i]-&#39;A&#39;;</span><br><span class="line">        &#x2F;&#x2F;  cout&lt;&lt;p1[k-1]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        k&#x3D;0;</span><br><span class="line">        for(i&#x3D;n-1;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            q1[k++]&#x3D;q[i]-&#39;A&#39;;</span><br><span class="line">        &#x2F;&#x2F;  cout&lt;&lt;q1[k-1]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        int sum[202],y&#x3D;0;</span><br><span class="line">        p1[m]&#x3D;0;</span><br><span class="line">        q1[n]&#x3D;0;</span><br><span class="line">        for(i&#x3D;0,j&#x3D;0;i&lt;m，j&lt;n;i++,j++)&#x2F;&#x2F;错误点</span><br><span class="line">        &#123;</span><br><span class="line">            sum[i]&#x3D;(p1[i]+q1[j]+y)%20;</span><br><span class="line">            y&#x3D;(p1[i]+q1[j]+y)&#x2F;20;</span><br><span class="line">            &#x2F;&#x2F;cout&lt;&lt;sum[i]&lt;&lt;endl;</span><br><span class="line">            &#x2F;&#x2F;cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        if(m&gt;&#x3D;n)</span><br><span class="line">        &#123;</span><br><span class="line">            for(;i&lt;&#x3D;m;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sum[i]&#x3D;(p1[i]+y)%20;</span><br><span class="line">                y&#x3D;(p1[i]+y)&#x2F;20;</span><br><span class="line">            &#x2F;&#x2F;  cout&lt;&lt;sum[i]&lt;&lt;endl;</span><br><span class="line">            &#x2F;&#x2F;  cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            for(;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">            &#x2F;&#x2F;  cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">                sum[j]&#x3D;(q1[j]+y)%20;</span><br><span class="line">                y&#x3D;(q1[j]+y)&#x2F;20;</span><br><span class="line">                &#x2F;&#x2F;cout&lt;&lt;sum[j]&lt;&lt;endl;</span><br><span class="line">                &#x2F;&#x2F;cout&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        i&#x3D;max(i,j);</span><br><span class="line">    &#x2F;&#x2F;  cout&lt;&lt;i&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">        i--;</span><br><span class="line">        while(a[sum[i]]&#x3D;&#x3D;&#39;A&#39;&amp;&amp;i&gt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        for(;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%c&quot;,a[sum[i]]);</span><br><span class="line">            &#x2F;&#x2F;printf(&quot;%d &quot;,sum[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p> 紧接着就卡在这里了，一直不知道哪里错了，无奈之下，对着模板改了改，写出了以下代码   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char a[21]&#x3D;&#123;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,&#39;I&#39;</span><br><span class="line">,&#39;J&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,&#39;S&#39;,&#39;T&#39;&#125;;&#x2F;&#x2F;65</span><br><span class="line">int max(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int min(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">char p[202],q[202];</span><br><span class="line">int jj,len1, len2;</span><br><span class="line">void Add(int *str1, int *str2, int *str3)</span><br><span class="line">&#123;&#x2F;&#x2F; str3 &#x3D; str1 + str2;</span><br><span class="line">    int i, j,i1, i2, tmp, carry;</span><br><span class="line">    int ch;</span><br><span class="line">    i1 &#x3D; len1-1; i2 &#x3D; len2-1;</span><br><span class="line">    j&#x3D;carry &#x3D; 0;</span><br><span class="line">&#x2F;&#x2F;    cout&lt;&lt;len1&lt;&lt;len2&lt;&lt;endl;</span><br><span class="line">&#x2F;&#x2F;    cout&lt;&lt;i1&lt;&lt;i2&lt;&lt;endl;</span><br><span class="line">    for( ; i1 &gt;&#x3D; 0 &amp;&amp; i2 &gt;&#x3D; 0; ++j, --i1, --i2 )</span><br><span class="line">    &#123;</span><br><span class="line">        tmp &#x3D; str1[i1]+str2[i2]+carry;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;str1[i1]&lt;&lt;str2[i2]&lt;&lt;endl;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;tmp&lt;&lt;endl;</span><br><span class="line">        carry &#x3D; tmp&#x2F;20;</span><br><span class="line">        str3[j] &#x3D; tmp%20;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;str3[j-1]&lt;&lt;endl;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    while( i1 &gt;&#x3D; 0 )</span><br><span class="line">    &#123;</span><br><span class="line">        tmp &#x3D; str1[i1--]+carry;</span><br><span class="line">        carry &#x3D; tmp&#x2F;20;</span><br><span class="line">        str3[j++] &#x3D; tmp%20;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;str3[j-1]&lt;&lt;endl;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    while( i2 &gt;&#x3D;0 )</span><br><span class="line">    &#123;</span><br><span class="line">        tmp &#x3D; str2[i2--]+carry;</span><br><span class="line">        carry &#x3D; tmp&#x2F;20;</span><br><span class="line">        str3[j++] &#x3D; tmp%20;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;str3[j-1]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    if( carry )</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;cout&lt;&lt;carry&lt;&lt;endl;</span><br><span class="line">        str3[j++] &#x3D; carry;</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;str3[j-1]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    jj&#x3D;j;</span><br><span class="line">    &#x2F;&#x2F;cout&lt;&lt;jj&lt;&lt;endl;</span><br><span class="line">    for( i&#x3D;0, --j; i &lt; j; ++i, --j )</span><br><span class="line">    &#123;</span><br><span class="line">        ch &#x3D; str3[i]; </span><br><span class="line">        str3[i] &#x3D; str3[j];</span><br><span class="line">        str3[j] &#x3D; ch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    while(~scanf(&quot;%s%s&quot;,p,q))</span><br><span class="line">    &#123;</span><br><span class="line">        int str1[202],str2[202];</span><br><span class="line">        int i;</span><br><span class="line">        len1&#x3D;strlen(p),len2&#x3D;strlen(q);</span><br><span class="line">        for(i&#x3D;0;i&lt;len1;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            str1[i]&#x3D;p[i]-&#39;A&#39;;</span><br><span class="line">        &#x2F;&#x2F;    cout&lt;&lt;str1[i]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        for(i&#x3D;0;i&lt;len2;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            str2[i]&#x3D;q[i]-&#39;A&#39;;</span><br><span class="line">            &#x2F;&#x2F;cout&lt;&lt;str2[i]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        int sum[202];</span><br><span class="line">        Add(str1,str2,sum);</span><br><span class="line">        for(i&#x3D;0;i&lt;jj;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(sum[i]!&#x3D;0||i&#x3D;&#x3D;jj-1)</span><br><span class="line">            &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        for(;i&lt;jj;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%c&quot;,a[sum[i]]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>写完后ac了   </p><p>可是第一次写的代码哪里错了，死活找不到错误，无奈之下窝一个一个数据测试，果然，不知道过了多长时间，问题来了   </p><p>输入 AAAAS ASASASA结果不对，然后开始找错，原来我一直以为for(;a&gt;0,b&gt;0;)与for(;a&gt;0&amp;&amp;b&gt;0;)是等价的其实不是，前者与for(;b&gt;0;)等价   </p><p>这个事用了我一晚上解决。。。。。。。。   </p><p>正确代码   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">char a[21]&#x3D;&#123;&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,&#39;I&#39;</span><br><span class="line">,&#39;J&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,&#39;S&#39;,&#39;T&#39;&#125;;&#x2F;&#x2F;65</span><br><span class="line">int max(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&gt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int min(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char p[202],q[202];</span><br><span class="line">    while(~scanf(&quot;%s%s&quot;,p,q))</span><br><span class="line">    &#123;</span><br><span class="line">        int p1[202],q1[202];</span><br><span class="line">        int i,j;</span><br><span class="line">        int m&#x3D;strlen(p),n&#x3D;strlen(q);</span><br><span class="line">        int k&#x3D;0;</span><br><span class="line">        for(i&#x3D;m-1;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            p1[k++]&#x3D;p[i]-&#39;A&#39;;</span><br><span class="line">        &#x2F;&#x2F;    cout&lt;&lt;p1[k-1]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        k&#x3D;0;</span><br><span class="line">        for(i&#x3D;n-1;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            q1[k++]&#x3D;q[i]-&#39;A&#39;;</span><br><span class="line">        &#x2F;&#x2F;    cout&lt;&lt;q1[k-1]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        int sum[202],y&#x3D;0;</span><br><span class="line">        p1[m]&#x3D;0;</span><br><span class="line">        q1[n]&#x3D;0;</span><br><span class="line">        for(i&#x3D;0,j&#x3D;0;i&lt;m&amp;&amp;j&lt;n;i++,j++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum[i]&#x3D;(p1[i]+q1[j]+y)%20;</span><br><span class="line">            y&#x3D;(p1[i]+q1[j]+y)&#x2F;20;</span><br><span class="line">            &#x2F;&#x2F;cout&lt;&lt;sum[i]&lt;&lt;endl;</span><br><span class="line">            &#x2F;&#x2F;cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        if(m&gt;&#x3D;n)</span><br><span class="line">        &#123;</span><br><span class="line">            for(;i&lt;&#x3D;m;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sum[i]&#x3D;(p1[i]+y)%20;</span><br><span class="line">                y&#x3D;(p1[i]+y)&#x2F;20;</span><br><span class="line">            &#x2F;&#x2F;    cout&lt;&lt;sum[i]&lt;&lt;endl;</span><br><span class="line">            &#x2F;&#x2F;    cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            for(;j&lt;&#x3D;n;j++)</span><br><span class="line">            &#123;</span><br><span class="line">            &#x2F;&#x2F;    cout&lt;&lt;y&lt;&lt;endl;</span><br><span class="line">                sum[j]&#x3D;(q1[j]+y)%20;</span><br><span class="line">                y&#x3D;(q1[j]+y)&#x2F;20;</span><br><span class="line">                &#x2F;&#x2F;cout&lt;&lt;sum[j]&lt;&lt;endl;</span><br><span class="line">                &#x2F;&#x2F;cout&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i&#x3D;max(i,j);</span><br><span class="line">    &#x2F;&#x2F;    cout&lt;&lt;i&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">        i--;</span><br><span class="line">        while(a[sum[i]]&#x3D;&#x3D;&#39;A&#39;&amp;&amp;i&gt;0)</span><br><span class="line">        &#123;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        for(;i&gt;&#x3D;0;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            printf(&quot;%c&quot;,a[sum[i]]);</span><br><span class="line">            &#x2F;&#x2F;printf(&quot;%d &quot;,sum[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CONTEST PRINT SERVER</title>
      <link href="/posts/2a66a2a9/"/>
      <url>/posts/2a66a2a9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** CONTEST PRINT SERVER：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Contest Print Server<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 111(26 users)    Total Accepted: 35(25 users)    Rating:     Special Judge: No<br>Description<br>In ACM/ICPC on-site contests ,3 students share 1 computer,so you can print your source code any time. Here you need to write a contest print server to handle all the requests.   </p><p>Input<br>In the first line there is an integer T(T&lt;=10),which indicates the number of test cases.   </p><p>In each case,the first line contains 5 integers n,s,x,y,mod (1&lt;=n&lt;=100, 1&lt;=s,x,y,mod&lt;=10007), and n lines of    requests follow. The request is like “Team_Name request p pages” (p is integer, 0&lt;p&lt;=10007, the length of    “Team_Name” is no longer than 20), means the team “Team_Name” need p pages to print, but for some un-know reason    the printer will break down when the printed pages counter reached s(s is generated by the function s=(s*x+y)%mod )    and then the counter will become 0. In the same time the last request will be reprint from the very begin if it    isn’t complete yet(The data guaranteed that every request will be completed in some time).   </p><p>You can get more from the sample.   </p><p>Output<br>Every time a request is completed or the printer is break down,you should output one line like “p pages for Team_Name”,p is the number of pages you give the team “Team_Name”.   </p><p>Sample Input<br>2<br>3 7 5 6 177<br>Team1 request 1 pages<br>Team2 request 5 pages<br>Team3 request 1 pages<br>3 4 5 6 177<br>Team1 request 1 pages<br>Team2 request 5 pages<br>Team3 request 1 pages<br>Sample Output<br>1 pages for Team1<br>5 pages for Team2<br>1 pages for Team3<br>1 pages for Team1<br>3 pages for Team2<br>5 pages for Team2<br>1 pages for Team3<br>Source<br>HCPC2014校赛训练赛 2   </p><p>题目大意是有一只很奇葩的打印机，只要纸张不够了，就得在没打印完的这个队伍重新开始    </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int n,s,x,y,mod;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    char a[30];</span><br><span class="line">    int sum;</span><br><span class="line">&#125;b[100];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%d%d%d%d&quot;,&amp;n,&amp;s,&amp;x,&amp;y,&amp;mod);</span><br><span class="line">            int i;</span><br><span class="line">            char p[20];</span><br><span class="line">            getchar();</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%s%s%d%s&quot;,b[i].a,p,&amp;b[i].sum,p);</span><br><span class="line">            &#x2F;&#x2F;    printf(&quot;%s%s%d%s&quot;,b[i].a,p,b[i].sum,p);</span><br><span class="line">            &#125;</span><br><span class="line">            int h&#x3D;s;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                while(b[i].sum&gt;h)</span><br><span class="line">                &#123;</span><br><span class="line">                    printf(&quot;%d %s %s %s\n&quot;,h,&quot;pages&quot;,&quot;for&quot;,b[i].a);</span><br><span class="line">                    s&#x3D;(s*x+y)%mod;</span><br><span class="line">                    h&#x3D;s;</span><br><span class="line">                &#125;</span><br><span class="line">                h-&#x3D;b[i].sum;</span><br><span class="line">                printf(&quot;%d %s %s %s\n&quot;,b[i].sum,&quot;pages&quot;,&quot;for&quot;,b[i].a);</span><br><span class="line">            &#125;</span><br><span class="line">            printf(&quot;\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LEYNI, LOLI AND CIRCLE</title>
      <link href="/posts/e0374175/"/>
      <url>/posts/e0374175/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** LEYNI, LOLI AND CIRCLE：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Leyni, LOLI and Circle<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 156(56 users)    Total Accepted: 68(50 users)    Rating:     Special Judge: No<br>Description<br>Professor Leyni likes to play with LOLIs. This time, Leyni meets several LOLIs on the playground and begins to play game with them. At the beginning, he makes N LOLIs around the playground and numbers them in clockwise order and the LOLIs are so obedient that they run clockwise under the guide of Leyni on the boundary of the playground which is a circle. At first, the distance of each pair of adjacent LOLIs are the same around the boundary of the circle. When one LOLI catches up with its previous one, the game is over. Knowing the speed of each LOLI, Leyni asks you to help him to change the order of the LOLIs to make him be able to play with them longer.   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T test cases follow. For each test case: Line 1. Two numbers N (N &lt;= 5000) and R(1 &lt;= R &lt;= 100000), representing the number of LOLIs and the radius of the circle. Line 2. This line contains N integers and the i-th number is the speed of the i-th LOLI in clockwise direction. All these N numbers are in the range [1, 1000].   </p><p>Output<br>For each test case: Line 1. If the Leyni can play with them forever, output “LeyniV5!”, otherwise output the longest time the game can last, which should be accurately rounded to three decimals.   </p><p>Sample Input<br>2 3 1 1 1 1 2 1 1 2   </p><p>Sample Output<br>LeyniV5! 3.142   </p><p>Author<br>哈理工2011春季校赛<br>其实就是排个序，让a[0]追a[1],a[1]追a[2]以此类推   </p><p>无奈我智商太低看的别人的代码   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">double PI&#x3D;atan(1.0)*4;</span><br><span class="line">double a[5000];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int T;</span><br><span class="line">    double r;</span><br><span class="line">    int n;</span><br><span class="line">    while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">    &#123;</span><br><span class="line">        while(T--)</span><br><span class="line">        &#123;</span><br><span class="line">            scanf(&quot;%d%lf&quot;,&amp;n,&amp;r);</span><br><span class="line">            int i;</span><br><span class="line">            double h&#x3D;PI*2*r&#x2F;n;</span><br><span class="line">            for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                scanf(&quot;%lf&quot;,&amp;a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            sort(a,a+n);</span><br><span class="line">            if(a[0]&#x3D;&#x3D;a[n-1])</span><br><span class="line">            &#123;</span><br><span class="line">                printf(&quot;LeyniV5!\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                double max&#x3D;-100000;</span><br><span class="line">                for(i&#x3D;n-1;i&gt;&#x3D;1;i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(a[i]-a[i-1]&gt;max)</span><br><span class="line">                    &#123;</span><br><span class="line">                        max&#x3D;a[i]-a[i-1];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#x2F;&#x2F;  cout&lt;&lt;h&lt;&lt;endl;</span><br><span class="line">            &#x2F;&#x2F;  cout&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">                printf(&quot;%.3lf\n&quot;,h&#x2F;max);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分割平面，分割空间</title>
      <link href="/posts/cf27400e/"/>
      <url>/posts/cf27400e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 分割平面，分割空间：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>转自：<a href="http://blog.csdn.net/zy691357966/article/details/41009991" target="_blank" rel="external nofollow noreferrer noopener">http://blog.csdn.net/zy691357966/article/details/41009991</a></p><p>(1) n条直线最多分平面问题   </p><pre><code>题目大致如:n条直线，最多可以把平面分为多少个区域。    析:可能你以前就见过这题目，这充其量是一道初中的思考题。但一个类型的题目还是从简单的入手，才容易发现规律。当有n-1条直线时，平面最多被分成了f（n-1）个区域。则第n条直线要是切成的区域数最多，就必须与每条直线相交且不能有同一交点。这样就会得到n-1个交点。这些交点将第n条直线分为2条射线和n-2条线断。而每条射线和线断将以有的区域一分为二。这样就多出了2+（n-2）个区域。      故：f(n)=f(n-1)+n                   =f(n-2)+(n-1)+n                   ……                   =f(1)+1+2+……+n                   =n(n+1)/2+1      (2) 折线分平面（hdu2050）    根据直线分平面可知，由交点决定了射线和线段的条数，进而决定了新增的区域数。当n-1条折线时，区域数为f（n-1）。为了使增加的区域最多，则折线的两边的线段要和n-1条折线的边，即2*（n-1）条线段相交。那么新增的线段数为4*（n-1），射线数为2。但要注意的是，折线本身相邻的两线段只能增加一个区域。    故：f(n)=f(n-1)+4(n-1)+2-1                   =f(n-1)+4(n-1)+1                  =f(n-2)+4(n-2)+4(n-1)+2                  ……                  =f(1)+4+4*2+……+4(n-1)+(n-1)                     =2n^2-n+1   </code></pre><p> (3) 封闭曲线分平面问题    </p><pre><code>题目大致如设有n条封闭曲线画在平面上，而任何两条封闭曲线恰好相交于两点，且任何三条封闭曲线不相交于同一点，问这些封闭曲线把平面分割成的区域个数。    析：当n-1个圆时，区域数为f(n-1).那么第n个圆就必须与前n-1个圆相交，则第n个圆被分为2（n-1）段线段，增加了2（n-1）个区域。       故： f(n)=f(n-1)+2(n-1)                               =f(1)+2+4+……+2(n-1)                          =n^2-n+2   </code></pre><p>例题：   </p><p>Cake Cutting<br>Time Limit: 2000 MS    Memory Limit: 65536 K<br>Total Submit: 25(18 users)    Total Accepted: 20(18 users)    Rating:     Special Judge: No<br>Description<br>“Happy birthday to you… Happy birthday to you… Happy birthday to Grovyle… Happy birthday to you…”    </p><p>Today is Grovyle’s birthday and he is going to invite his friends to his birthday party. To have an awesome party, each of the attendants should get one piece of cake. Your job is to help Grovyle invite as many friends as you can.</p><p>However, Grovyle’s parents are very mean, and make him use the following rules when cutting his cake:    </p><p>·         There is only ONE cylindrical cake.   </p><p>·         Grovyle cuts the cake n times, each cut being perpendicular to the surface of the cake.   </p><p>·         The i-th cut is a broken line with a[i] vertices.   </p><p>·         The knife is only allowed to intersect the edge of the cylindrical cake at the start and end of the cut.</p><p>What is the maximum number of pieces Grovyle could get?   </p><p>Input<br>The first line contains an integer T(T ≤ 50), indicating the number of test cases. Each test case begins with an integer n(1 ≤ n ≤ 100), followed by n integers a[i], 0 ≤ a[i]&lt; 400, which indicate the number of vertices in the i-th cut.   </p><p>Output<br>For each test case, output “Case #i: “ followed by the maximum number of pieces of cake Grovyle can cut.   </p><p>Sample Input<br>5<br>3 0 0 0<br>2 1 1<br>2 1 2<br>4 0 0 0 1<br>4 2 2 2 2   </p><p>Sample Output<br>Case #1: 7<br>Case #2: 7<br>Case #3: 10<br>Case #4: 14<br>Case #5: 63   </p><p>Hint<br>Illustrations for the first 3 example   </p><p>Source<br>“科林明伦杯”哈尔滨理工大学第三届ACM程序设计团队赛<br>Author<br>xiaodao   </p><p>折一次不会交到上一根线，所以sum+=j-1；</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int T;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">&#123;</span><br><span class="line">int u&#x3D;1;</span><br><span class="line">while(T--)</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">int n;</span><br><span class="line"></span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">int k1,j&#x3D;1,k,sum&#x3D;1;</span><br><span class="line">for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;k);</span><br><span class="line">k1&#x3D;k;</span><br><span class="line">sum+&#x3D;j;</span><br><span class="line">j++;</span><br><span class="line">while(k--)</span><br><span class="line">&#123;</span><br><span class="line">sum+&#x3D;j-1;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">sum-&#x3D;k1;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;&quot;Case #&quot;&lt;&lt;u++&lt;&lt;&quot;: &quot;&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KNIGHT</title>
      <link href="/posts/f4f16136/"/>
      <url>/posts/f4f16136/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** KNIGHT：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Knight<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 106(37 users)    Total Accepted: 54(35 users)    Rating:     Special Judge: No<br>Description<br>The knight in the chessboard wonders the least number of moves to go to square t from square s. The knight has a unique L-shaped move: two squares in one direction either horizontally or vertically, and one square in another direction perpendicular to the first.   </p><p>Help him to solve this problem!   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T test cases follow.   </p><p>For each test case:   </p><p>Line 1. This line contains the chessboard coordinates of position s indicating the square the knight is currently in.   </p><p>Line 2. This line contains the chessboard coordinates of position t indicating the square the knight wants to go to.   </p><p>The coordinate consists of a lowercase letter from a to h and a digit from 1 to 8.   </p><p>Output<br>For each test case:   </p><p>Line 1. Output the least number of moves.   </p><p>Sample Input<br>1   </p><p>a1   </p><p>a3   </p><p>Sample Output<br>2   </p><p>Source<br>哈理工2012春季校赛 - 现场赛<br>Author<br>齐达拉图@HRBUST   </p><p>原来，马是走日的、、原谅我的英语水平、、、。。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[10][10];</span><br><span class="line">int visit[10][10];</span><br><span class="line">int direct[8][2]&#x3D;&#123;&#123;1,2&#125;,&#123;2,1&#125;,&#123;-1,2&#125;,&#123;2,-1&#125;,&#123;1,-2&#125;,&#123;-2,1&#125;,&#123;-1,-2&#125;,&#123;-2,-1&#125;&#125;;</span><br><span class="line">int b[200],x;</span><br><span class="line">int c[10]&#x3D;&#123;0,8,7,6,5,4,3,2,1&#125;;</span><br><span class="line">char y;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">int x;</span><br><span class="line">char y;</span><br><span class="line">&#125; p,q[1000];</span><br><span class="line">int bfs()</span><br><span class="line">&#123;</span><br><span class="line">p.x&#x3D;x;</span><br><span class="line">int j,i;</span><br><span class="line">p.y&#x3D;y;</span><br><span class="line">for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;0;j&lt;10;j++)</span><br><span class="line">&#123;</span><br><span class="line">visit[i][j]&#x3D;-1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">visit[c[x]][b[y]]&#x3D;0;</span><br><span class="line">int front&#x3D;0,rear&#x3D;0;</span><br><span class="line">q[0]&#x3D;p;</span><br><span class="line">while(rear&lt;&#x3D;front)</span><br><span class="line">&#123;</span><br><span class="line">p&#x3D;q[rear++];</span><br><span class="line">int x&#x3D;p.x;</span><br><span class="line">int y&#x3D;p.y;</span><br><span class="line">for(i&#x3D;0;i&lt;8;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">int x1&#x3D;x+direct[i][0];</span><br><span class="line">int y1&#x3D;y+direct[i][1];</span><br><span class="line">if(x1&lt;&#x3D;8&amp;&amp;x1&gt;0&amp;&amp;y1&gt;&#x3D;97&amp;&amp;y1&lt;&#x3D;104&amp;&amp;visit[c[x1]][b[y1]]&#x3D;&#x3D;-1)</span><br><span class="line">&#123;</span><br><span class="line">if(a[c[x1]][b[y1]]&#x3D;&#x3D;1)</span><br><span class="line">&#123; visit[c[x1]][b[y1]]&#x3D;visit[c[x]][b[y]]+1;</span><br><span class="line">return visit[c[x]][b[y]]+1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">visit[c[x1]][b[y1]]&#x3D;visit[c[x]][b[y]]+1;</span><br><span class="line">q[++front].x&#x3D;x1;</span><br><span class="line">q[front].y&#x3D;y1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">int k&#x3D;0;</span><br><span class="line">for(i&#x3D;&#39;a&#39;;i&lt;&#x3D;&#39;h&#39;;i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]&#x3D;k++;</span><br><span class="line">&#125;</span><br><span class="line">int T;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">&#123;</span><br><span class="line">while(T--)</span><br><span class="line">&#123;getchar</span><br><span class="line">();memset</span><br><span class="line">(a,0,sizeof(a));</span><br><span class="line">char y1;</span><br><span class="line">int x1;scanf</span><br><span class="line">(&quot;%c%d&quot;,&amp;y,&amp;x);a</span><br><span class="line">[c[x]][b[y]]&#x3D;2;getchar</span><br><span class="line">();scanf</span><br><span class="line">(&quot;%c%d&quot;,&amp;y1,&amp;x1);</span><br><span class="line">if(x&#x3D;&#x3D;x1&amp;&amp;y&#x3D;&#x3D;y1)</span><br><span class="line">&#123;cout</span><br><span class="line">&lt;&lt;0&lt;&lt;endl;</span><br><span class="line">continue;</span><br><span class="line">&#125;a</span><br><span class="line">[c[x1]][b[y1]]&#x3D;1;cout</span><br><span class="line">&lt;&lt;bfs()&lt;&lt;endl;</span><br><span class="line">&#x2F;*for(i&#x3D;1;i&lt;&#x3D;8;i++)&#123;for(j&#x3D;0;j&lt;8;j++)&#123;cout&lt;&lt;visit[i][j]&lt;&lt;&quot;  &quot;;&#125;cout&lt;&lt;endl;&#125;*&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 广搜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一等队形</title>
      <link href="/posts/b21e0e72/"/>
      <url>/posts/b21e0e72/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 一等队形：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>一等队形<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 150(49 users)    Total Accepted: 65(45 users)    Rating:     Special Judge: No<br>Description<br>N位士兵站成一排，长官要请其中的(N-K)位出列，使得剩下的K位士兵排成一等队形。一等队形是指这样的一种队形：设K位士兵从左到右依次编号为1，2…，K，他们的身高分别为T1，T2，…，TK， 则他们的身高满足T1&lt;…&lt;Ti，Ti&gt;Ti+1&gt;…&gt;TK(1&lt;=i&lt;=K)。       你的任务是，已知所有N位士兵的身高，计算最少需要几位士兵出列，可以使得剩下的排成一等队形。      </p><p>Input<br>多组输入数据。   </p><p>输入的第一行是一个整数N(2&lt;=N&lt;=100)，表示士兵的总数。第二行有n个整数，用空格分隔，第i个整数Ti(130&lt;=Ti&lt;=230)是第i位士兵的身高(厘米)。   </p><p>Output<br>输出一个数代表最少需要几位士兵出列。    </p><p>Sample Input<br>8<br>186 186 150 200 160 130 197 220<br>Sample Output<br>4<br>Source<br>2014 Winter Holiday Contest 2   </p><p>弄过了好长时间。。。。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[101];</span><br><span class="line">int b[101];</span><br><span class="line">int c[101];</span><br><span class="line">int N;</span><br><span class="line">void check()</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">for(i&#x3D;0;i&lt;N;i++)</span><br><span class="line">&#123;</span><br><span class="line">    b[i]&#x3D;1;</span><br><span class="line">for(j&#x3D;0;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(a[i]&gt;a[j]&amp;&amp;b[j]+1&gt;b[i])</span><br><span class="line">&#123;</span><br><span class="line">    b[i]&#x3D;b[j]+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;cout&lt;&lt;b[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;N-1;i&gt;&#x3D;0;i--)</span><br><span class="line">&#123;</span><br><span class="line">    c[i]&#x3D;1;</span><br><span class="line">for(j&#x3D;N-1;j&gt;i;j--)</span><br><span class="line">&#123;</span><br><span class="line">if(a[j]&lt;a[i]&amp;&amp;c[j]+1&gt;c[i])</span><br><span class="line">&#123;</span><br><span class="line">    c[i]&#x3D;c[j]+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;cout&lt;&lt;c[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int min1(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">return x&lt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int max1(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">return x&gt;y? x:y;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;N))</span><br><span class="line">&#123;</span><br><span class="line">if(N&#x3D;&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">if(x&#x3D;&#x3D;y)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;1\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;0\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">int i;</span><br><span class="line">for(i&#x3D;0;i&lt;N;i++)</span><br><span class="line">&#123;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">    check();</span><br><span class="line">int j,k;</span><br><span class="line">int max_left&#x3D;INT_MIN,max_right&#x3D;INT_MIN;</span><br><span class="line">int min&#x3D;INT_MAX;</span><br><span class="line">&#x2F;&#x2F; cout&lt;&lt;min&lt;&lt;endl;</span><br><span class="line">for(i&#x3D;0;i&lt;N;i++)</span><br><span class="line">&#123;</span><br><span class="line">    min&#x3D;min1(min,N-b[i]-c[i]+1);</span><br><span class="line">&#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,min);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>切蛋糕</title>
      <link href="/posts/de7e7858/"/>
      <url>/posts/de7e7858/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p> ** 切蛋糕：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>切蛋糕<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 202(70 users)    Total Accepted: 65(58 users)    Rating:     Special Judge: No<br>Description<br>有一个非常大的蛋糕，现在有一个圆形的杯子可以从正面倒扣到上面的方式把蛋糕分为一块一块的，杯子的厚度忽略不计。现在规定可以用杯子n次要求m个人每人至少分一块，是否能满足？<br>Input<br>每行输入两个整数n, m，(0 &lt; n ,m&lt; 10000000)   </p><p>处理到文件结束   </p><p>Output<br>输出结果占一行，满足的话输出所有人中某个人最多能得到多少块   </p><p>否则输出”N\n”   </p><p>Sample Input<br>1 2   </p><p>1 3   </p><p>Sample Output<br>1   </p><p>N\n   </p><p>Source<br>2012 Winter Holiday Contest 5 - Water Battle II<br>Author<br>万祥   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">long long n,m;</span><br><span class="line">while(~scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m))</span><br><span class="line">&#123;</span><br><span class="line">long long nn&#x3D;n*(n-1)+2;</span><br><span class="line">if(nn&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;N\\n\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%lld\n&quot;,nn-m+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Diablo</title>
      <link href="/posts/6da52baf/"/>
      <url>/posts/6da52baf/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** Diablo：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Diablo<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 43(22 users)    Total Accepted: 24(21 users)    Rating:     Special Judge: No<br>Description   </p><p>Diablo是地狱中的三大魔王之一，有着非常强大的破坏力，Diablo期望着可以将一切都投入到地狱之中。为了不让Diablo的计划得逞，一位英雄决   定挺身而出，试图击败Diablo。DIablo喜欢把眼前的区域变成一片火海，Diablo吐出火焰的蔓延是有一定规律的，火焰总是会向能量较低的区域蔓   延。英雄如果不想被Diablo击败的话，就需要在Diablo喷出火焰的一瞬间逃到火焰烧不到的地方，但是他只能在这一瞬逃出3个单位长度的距离。现   在我们给出现场的一个地图，并且给出Diablo和英雄所在的位置，我们要知道英雄是否可以逃脱Diablo的攻击。（火焰蔓延方向只能是上、下、左   、右）   </p><p>Input<br>本题有多组测试数据，对于每组数据第一行输入6个非负整数，分别表示地图的长、宽（分别对应m、n），Diablo的坐标以及英雄的坐标。接下来n行每行输入m个数，表示地图上每个点的能量值（值在32位有符号整数范围内）。m、n值均不大于100，且我们保证数据合理合法。<br>Output<br>如果英雄可以逃脱Diablo的攻击，输出Hero will be back并换行，否则输出Diablo win并换行。<br>Sample Input<br>3 3 0 0 2 2 5 4 1 4 3 2 3 2 1   </p><p>6 4 0 0 2 3 5 2 6 7 3 0 4 3 8 1 5 5 9 1 8 3 6 5 8 7 6 5 4 2   </p><p>Sample Output<br>Diablo win   </p><p>Hero will be back   </p><p>Hint<br>我们来看看第二组样例数据，Diablo所处的位置是(0, 0)，那么Diablo在地图上左上角的点，其能量值为5。英雄所在的位置是(2, 3)，也就是我们看到地图上第三行第四列的位置，其能量值为3。不过火焰只能从能量高的地方向能量低的地方蔓延，尽管英雄处在的位置能量值较低，但是火焰却无法蔓延到这里，因为有能量相对较高的地势阻隔。假设英雄所在的位置能被火焰蔓延到，他只需在3步内找到一个火焰不可达的合法区域即可躲过攻击。<br>Source<br>2014 Winter Holiday Contest 5<br>Author<br>杨和禹   </p><p>这个广搜的时候、应该注意，即便是已经遍历过的点，也不应该阻止下次·对这个点的遍历，因为只要被监测点的周围任意一个店的能量值比此点高，那么此点就应该被火焰蔓延   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;math.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int m,n,x_1,y_1,x_2,y_2;</span><br><span class="line">typedef long long LONG;</span><br><span class="line">LONG a[101][101];</span><br><span class="line">int direct[4][2]&#x3D;&#123;0,1,-1,0,0,-1,1,0&#125;;</span><br><span class="line">int visit[100][100];</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">int x,y;</span><br><span class="line">LONG e;</span><br><span class="line">&#125; p[10001],p1,p2;</span><br><span class="line">int bfs()</span><br><span class="line">&#123;</span><br><span class="line">int k&#x3D;0;</span><br><span class="line">int i,front&#x3D;0,rear&#x3D;0;</span><br><span class="line">p[0]&#x3D;p1;</span><br><span class="line">memset(visit,0,sizeof(visit));</span><br><span class="line">visit[x_1][y_1]&#x3D;2;</span><br><span class="line">while(rear&lt;&#x3D;front)</span><br><span class="line">&#123;</span><br><span class="line">p2&#x3D;p[rear++];</span><br><span class="line">int e1&#x3D;p2.e;</span><br><span class="line">for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">&#123;</span><br><span class="line">int x1&#x3D;p2.x+direct[i][0];</span><br><span class="line">int y1&#x3D;p2.y+direct[i][1];</span><br><span class="line">if(x1&gt;&#x3D;0&amp;&amp;x1&lt;n&amp;&amp;y1&gt;&#x3D;0&amp;&amp;y1&lt;m&amp;&amp;visit[x1][y1]!&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">if(a[x1][y1]&lt;e1)</span><br><span class="line">&#123;</span><br><span class="line">p1.x&#x3D;x1;</span><br><span class="line">p1.y&#x3D;y1;</span><br><span class="line">p1.e&#x3D;a[x1][y1];</span><br><span class="line">p[++front]&#x3D;p1;</span><br><span class="line">visit[x1][y1]&#x3D;2;</span><br><span class="line">if(x1&#x3D;&#x3D;x_2&amp;&amp;y1&#x3D;&#x3D;y_2)</span><br><span class="line">&#123;</span><br><span class="line">k&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">visit[x1][y1]&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return k;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">int check()</span><br><span class="line">&#123;</span><br><span class="line">int xh,yh,i,j;</span><br><span class="line">for(i&#x3D;0;i&lt;4;i++)</span><br><span class="line">&#123;</span><br><span class="line">xh&#x3D;x_2;</span><br><span class="line">yh&#x3D;y_2;</span><br><span class="line">for(j&#x3D;0;j&lt;3;j++)</span><br><span class="line">&#123;</span><br><span class="line">xh+&#x3D;direct[i][0];</span><br><span class="line">yh+&#x3D;direct[i][1];</span><br><span class="line">if(xh&gt;&#x3D;0&amp;&amp;xh&lt;n&amp;&amp;yh&gt;&#x3D;0&amp;&amp;yh&lt;m)</span><br><span class="line">&#123;</span><br><span class="line">&#x2F;&#x2F;cout&lt;&lt;visit[xh][yh];</span><br><span class="line">if(visit[xh][yh]!&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">return 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">while(~scanf(&quot;%d%d%d%d%d%d&quot;,&amp;m,&amp;n,&amp;x_1,&amp;y_1,&amp;x_2,&amp;y_2))</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">&#123;scanf</span><br><span class="line">(&quot;%lld&quot;,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;p1</span><br><span class="line"></span><br><span class="line">.x&#x3D;x_1;p1</span><br><span class="line">.y&#x3D;y_1;p1</span><br><span class="line">.e&#x3D;a[x_1][y_1];</span><br><span class="line">&#x2F;*i&#x3D;bfs();for(i&#x3D;0;i&lt;n;i++)&#123;for(j&#x3D;0;j&lt;m;j++)&#123;printf(&quot;%ld &quot;,visit[i][j]);&#125;cout&lt;&lt;endl;&#125;*&#x2F;</span><br><span class="line"></span><br><span class="line">i&#x3D;bfs();</span><br><span class="line">if(i&#x3D;&#x3D;0)</span><br><span class="line">&#123;printf</span><br><span class="line">(&quot;Hero will be back\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if(check()&#x3D;&#x3D;1)</span><br><span class="line">&#123;printf</span><br><span class="line">(&quot;Hero will be back\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;printf</span><br><span class="line">(&quot;Diablo win\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 广搜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凸包</title>
      <link href="/posts/898693c6/"/>
      <url>/posts/898693c6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 凸包：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;math.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line"> int x,y;</span><br><span class="line">&#125; a[5005],b[5005];</span><br><span class="line">int n,top,row,line;</span><br><span class="line">int cross(const node a1,const node a2,const node b1,const node b2)&#x2F;&#x2F;(a2-a1)x(b2-b1)</span><br><span class="line">&#123;</span><br><span class="line"> return (a2.x-a1.x)*(b2.y-b1.y)-(a2.y-a1.y)*(b2.x-b1.x);</span><br><span class="line">&#125;</span><br><span class="line">double Dis(const node a1,const node a2)</span><br><span class="line">&#123;</span><br><span class="line"> return sqrt((a2.x-a1.x)*(a2.x-a1.x)+(a2.y-a1.y)*(a2.y-a1.y)*0.1);</span><br><span class="line">&#125;</span><br><span class="line">void get_basic()</span><br><span class="line">&#123;</span><br><span class="line"> int i,j&#x3D;0;</span><br><span class="line"> node pp;</span><br><span class="line"> pp&#x3D;a[0];</span><br><span class="line"> for(i&#x3D;1;i&lt;n;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  if(pp.y&gt;a[i].y||pp.y&#x3D;&#x3D;a[i].y&amp;&amp;pp.x&lt;a[i].x)</span><br><span class="line">  &#123;</span><br><span class="line">   j&#x3D;i;</span><br><span class="line">   pp&#x3D;a[i];</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> if(j!&#x3D;0)</span><br><span class="line"> &#123;</span><br><span class="line">  a[j]&#x3D;a[0];</span><br><span class="line">  a[0]&#x3D;pp;</span><br><span class="line"> &#125;</span><br><span class="line"> a[n]&#x3D;pp;</span><br><span class="line">&#125;</span><br><span class="line">bool cmp(node p1,node p2)</span><br><span class="line">&#123;</span><br><span class="line"> int C&#x3D;cross(a[0],p1,a[0],p2);</span><br><span class="line"> return C? C&gt;0:Dis(a[0],p1)&lt;Dis(a[0],p2);</span><br><span class="line">&#125;</span><br><span class="line">void tubao()</span><br><span class="line">&#123;</span><br><span class="line"> get_basic();</span><br><span class="line"> sort(a+1,a+n,cmp);</span><br><span class="line"> b[0]&#x3D;a[0];</span><br><span class="line"> b[1]&#x3D;a[1];</span><br><span class="line"> int i;</span><br><span class="line"> top&#x3D;1;</span><br><span class="line"> for(i&#x3D;2;i&lt;n;i++)</span><br><span class="line"> &#123;</span><br><span class="line">  while(top&amp;&amp;cross(a[top-1],a[top],a[top],a[i])&lt;&#x3D;0)</span><br><span class="line">  &#123;</span><br><span class="line">   top--;</span><br><span class="line">  &#125;</span><br><span class="line">  b[++top]&#x3D;a[i];</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最小的N个数（堆排序）</title>
      <link href="/posts/b5319303/"/>
      <url>/posts/b5319303/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 最小的N个数（堆排序）：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>最小的n个和<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 136(41 users)    Total Accepted: 38(32 users)    Rating:     Special Judge: No<br>Description<br>给定A、B两个数列，各包含n个数，分别从A和B中任意取一个数相加得到和，这样会有n^2种结果(包括重复的)，求n^2个结果中前n个最小的和。   </p><p>Input<br>有多组测试数据。   </p><p>对于每组测试数据，第一行为n，第二行为数列A，第三行为数列B。   </p><p>1&lt;=n&lt;=100000, 0 &lt;= Ai, Bi &lt;= 10^9。   </p><p>Output<br>对于每组测试数据，输出一行，包含前n个最小的和，按照升序输出，两数之间用一个空格隔开。   </p><p>Sample Input<br>5<br>1 3 4 2 0<br>7 3 5 2 11<br>10<br>74 50 47 45 38 64 19 2 84 69<br>91 46 44 7 67 1 40 60 78 41<br>Sample Output<br>2 3 3 4 4<br>3 9 20 26 39 42 43 45 46 46<br>Source<br>HCPC2014校赛训练赛 3   </p><p>堆排序早就忘光了。。。   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int a[100005],b[100005],sum[100005];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">int i;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;n))</span><br><span class="line">&#123;</span><br><span class="line">for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">    sort(a,a+n);</span><br><span class="line">for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;b[i]);</span><br><span class="line">&#125;</span><br><span class="line">    sort(b,b+n);</span><br><span class="line">int j;</span><br><span class="line">for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    sum[i]&#x3D;a[0]+b[i];</span><br><span class="line">&#125;</span><br><span class="line">int temp; make_heap(sum,sum+n);&#x2F;&#x2F;建堆</span><br><span class="line">for(i&#x3D;1;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;0;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line">    temp&#x3D;a[i]+b[j];</span><br><span class="line">if(temp&gt;&#x3D;sum[0])</span><br><span class="line">&#123;</span><br><span class="line">break;</span><br><span class="line">&#125; pop_heap(sum,sum+n);&#x2F;&#x2F;把堆顶元素取出来，放到了数组末尾.并对前n-1个元素再次进行堆排序。</span><br><span class="line">sum[n-1]&#x3D;temp;</span><br><span class="line">    push_heap(sum,sum+n);&#x2F;&#x2F;新添加一个元素在末尾，然后重新调整堆序.该算法必须是在一个已经满足堆序的条件下，添加元素。</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(sum,sum+n);</span><br><span class="line">for(i&#x3D;0;i&lt;n-1;i++)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;%d &quot;,sum[i]);</span><br><span class="line">&#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,sum[n-1]);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VAGAA, EMULE AND APPLE</title>
      <link href="/posts/79a83d23/"/>
      <url>/posts/79a83d23/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** VAGAA, EMULE AND APPLE：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>Vagaa, eMule and Apple<br>Time Limit: 1000 MS    Memory Limit: 65536 K<br>Total Submit: 105(57 users)    Total Accepted: 54(50 users)    Rating:     Special Judge: No<br>Description<br>Vagaa is a strange dog and eMule is a strange mule. They are friends.   </p><p>They love apples and math.   </p><p>One day, they buy a big apple which weighs w kilos. They wonder whether they can divide it into exactly two parts in a way that each part weighs even number of kilos.   </p><p>Input<br>There are multiple test cases. The first line of input is an integer T indicating the number of test cases. Then T test cases follow.   </p><p>For each test case:   </p><p>Line 1. This line contains an integer w (1 ≤ w ≤ 100).   </p><p>Output<br>For each test case:   </p><p>Line 1. Output “YES” if they can, otherwise output “NO”.   </p><p>Sample Input<br>1   </p><p>10   </p><p>Sample Output<br>YES   </p><p>Hint<br>In the sample, they can divide the apple into two parts of 2 and 8 kilos.   </p><p>Source<br>哈理工2012春季校赛 - 现场赛（热身）<br>Author<br>齐达拉图@HRBUST<br> 为毛这种题三颗星  </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int T;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">&#123;</span><br><span class="line">while(T--)</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">int i;</span><br><span class="line">int key&#x3D;0;</span><br><span class="line">for(i&#x3D;2;i&lt;&#x3D;n&#x2F;2;i+&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">if((n-i)%2&#x3D;&#x3D;0)</span><br><span class="line">&#123;</span><br><span class="line">key&#x3D;1;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(key&#x3D;&#x3D;1)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M数</title>
      <link href="/posts/22023e3d/"/>
      <url>/posts/22023e3d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** M数：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>M数<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 59(29 users)    Total Accepted: 31(27 users)    Rating:     Special Judge: No<br>Description<br>Mac最近YY了一种比较特别的整数，这种数有N位并且从左向右每一位的数字是非递减的，此外这个整数可以包含前导0。例如当N=3时，012、011、111等都是符合的，而321、322等则是不符合的。请你计算出长度为N位的整数中有多少个整数符合这种整数的性质。<br>Input<br>多组测试数据。第一行是一个整数T（0&lt;T&lt;=100），表示测试数据的组数。   </p><p>接下来的T行，每行一个整数N表示整数的位数。( 1 &lt;= N &lt;= 100000 )   </p><p>Output<br>对于每组数据输出一个整数表示符合条件的整数的个数，由于答案可能比较大，请把结果对   </p><p>1000000007取余后输出。   </p><p>Sample Input<br>2   </p><p>1   </p><p>2   </p><p>Sample Output<br>10   </p><p>55   </p><p> 这题弄得我挺烦的   </p><p>n==1时：10   </p><p>n==2时： 左边第一位可以是0，右边就是n==1时的所有情况   </p><p>左边第一位是1 右边也是n==1时的所有情况   </p><p>左边第一位是2 右边就是n==1时所有情况出去n==1时左边第一位是1的所有情况以此类推   </p><p>为55   </p><p>n==3时：   </p><p>其实就是987654321　　此时最左边为1   </p><pre><code>87654321      。。。。。。2   </code></pre><p>  　　　　 7654321 　　。。。。。。3   </p><p>　　　　     654321　　。。。。。。4   </p><p>　　　　　　 54321　　。。。。。。5   </p><p>　　　　　　   4321　　。。。。。。6   </p><p>　　　　　　　  321  　。。。。。。7   </p><pre><code>  　　　　　　 21　　。。。。。。8   </code></pre><p>　　　　　　　　　1　　。。。。。。。9   </p><p>另外还要加上n-1的情况，因为第一位可以是0   </p><p>。。。   </p><p>我的代码：   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">long m&#x3D;1000000007;</span><br><span class="line">long a[10]&#x3D;&#123;0,9,8,7,6,5,4,3,2,1&#125;;</span><br><span class="line">void update()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">for(i&#x3D;8;i&gt;&#x3D;1;i--)</span><br><span class="line">&#123;</span><br><span class="line">a[i]&#x3D;(a[i]+a[i+1])%m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">long b[100001];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">b[1]&#x3D;10;</span><br><span class="line">int i,j,k;</span><br><span class="line">for(i&#x3D;2;i&lt;100001;i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]&#x3D;0;</span><br><span class="line">for(j&#x3D;1;j&lt;10;j++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]&#x3D;(b[i]+a[j])%m;</span><br><span class="line">&#125;</span><br><span class="line">update();</span><br><span class="line">b[i]&#x3D;(b[i]+b[i-1])%m;</span><br><span class="line">&#125;</span><br><span class="line">int T;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">&#123;</span><br><span class="line">while(T--)</span><br><span class="line">&#123;</span><br><span class="line">int n;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">printf(&quot;%ld\n&quot;,b[n]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>做完折后一看别人代码，原来是dp   </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#define Max 100101</span><br><span class="line">#define Mod 1000000007</span><br><span class="line"></span><br><span class="line">long long C[Max][10];</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">for(int i &#x3D; 0; i &lt; 10; i++)</span><br><span class="line">C[i][i] &#x3D; 1;</span><br><span class="line">for(int i &#x3D; 1; i &lt; Max; i++) &#123;</span><br><span class="line">C[i][0] &#x3D; 1;</span><br><span class="line">for(int j &#x3D; 1; j &lt; 10; j++)</span><br><span class="line">C[i][j] &#x3D; (C[i - 1][j - 1] + C[i - 1][j]) % Mod;</span><br><span class="line">&#125;</span><br><span class="line">int N, T;</span><br><span class="line">scanf(&quot;%d\n&quot;, &amp;T);</span><br><span class="line">while(T--) &#123;</span><br><span class="line">scanf(&quot;%d&quot;, &amp;N);</span><br><span class="line">printf(&quot;%lld\n&quot;, C[N + 9][9] % Mod);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return 0;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某年某月的某一天</title>
      <link href="/posts/50e95a5b/"/>
      <url>/posts/50e95a5b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>** 某年某月的某一天：** &lt;Excerpt in index | 首页摘要&gt;</p><a id="more"></a><p>&lt;The rest of contents | 余下全文&gt;</p><p>某年某月的某一天<br>Time Limit: 1000 MS    Memory Limit: 32768 K<br>Total Submit: 58(31 users)    Total Accepted: 32(26 users)    Rating:    Special Judge: No<br>Description<br>  因为大雄考了有史以来也是唯一一次的100分，叮当猫答应带大雄去未来看一看。但是笨蛋大雄把时光机的时间调错了，结果回到了古代。叮当猫的时光机是这么用的：输入一个数n，时光机就会去到n天后或者是n天前，然后选择是往未来还是回古代。但是大雄只记得输入n天，忘了选择是去未来了。   </p><p>  现在告诉你大雄输入的天数，请你算出本来他们打算去的是未来哪一天以及现在在古代的哪一天。以今天，即2013年9月7号为当前天数，即算出2013年9月7号的n天前和n天后是几年几月几日。   </p><p>Input<br>  第一行输入一个数T，表示有T组样例。   </p><p>  接下来T行是T组数据，每组数据包含一个正整数n(n&lt;=100000)。   </p><p>Output<br>  请计算并输出大雄本来打算去的未来的某年某月某日，以及最后去了的古代的某年某月某日。   </p><p>  输出日期格式为YYYY/MM/DD，两个日期中间用一个空格隔开，每组数据占一行，详情参考simple output。   </p><p>Sample Input<br>3   </p><p>18   </p><p>26   </p><p>31   </p><p>Sample Output<br>2013/09/25 2013/08/20   </p><p>2013/10/03 2013/08/12   </p><p>2013/10/08 2013/08/07   </p><p>Author<br>曾卓敏   </p><p>做麻烦了  我的代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">bool check(int year)</span><br><span class="line">&#123;</span><br><span class="line">if((year%4&#x3D;&#x3D;0&amp;&amp;year%100!&#x3D;0)||(year%400&#x3D;&#x3D;0)) </span><br><span class="line">&#123;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">int year,month,day;</span><br><span class="line">void up(int n)</span><br><span class="line">&#123;</span><br><span class="line">year&#x3D;2013;</span><br><span class="line">month&#x3D;9;</span><br><span class="line">day&#x3D;7;</span><br><span class="line">if(n&gt;&#x3D;24)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;24;</span><br><span class="line">month&#x3D;10;</span><br><span class="line">day&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">while(n&gt;0)</span><br><span class="line">&#123;</span><br><span class="line">if(month&#x3D;&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">if(check(year))</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;29)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;29;</span><br><span class="line">month++;</span><br><span class="line">day&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">day+&#x3D;n;</span><br><span class="line">n&#x3D;0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;28)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;28;</span><br><span class="line">month++;</span><br><span class="line">day&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">day+&#x3D;n;</span><br><span class="line">n&#x3D;0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if((month&#x3D;&#x3D;1)||(month&#x3D;&#x3D;3)||(month&#x3D;&#x3D;5)||(month&#x3D;&#x3D;7)||(month&#x3D;&#x3D;8)||(month&#x3D;&#x3D;10)||(month&#x3D;&#x3D;12))</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;31)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;31;</span><br><span class="line">month++;</span><br><span class="line">if(month&gt;12)</span><br><span class="line">&#123;</span><br><span class="line">year++;</span><br><span class="line">month&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">day&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">day+&#x3D;n;</span><br><span class="line">n&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;30)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;30;</span><br><span class="line">month++;</span><br><span class="line">day&#x3D;1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">day+&#x3D;n;</span><br><span class="line">n&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void down(int n)</span><br><span class="line">&#123;</span><br><span class="line">year&#x3D;2013;</span><br><span class="line">month&#x3D;9;</span><br><span class="line">day&#x3D;7;</span><br><span class="line">if(n&gt;&#x3D;7)</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;7;</span><br><span class="line">day&#x3D;31;</span><br><span class="line">month--;</span><br><span class="line">&#125;</span><br><span class="line">while(n&gt;0)</span><br><span class="line">&#123;</span><br><span class="line">if(month&#x3D;&#x3D;3)</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;31)</span><br><span class="line">&#123;</span><br><span class="line">if(check(year))</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;31;</span><br><span class="line">month--;</span><br><span class="line">day&#x3D;29;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">n-&#x3D;31;</span><br><span class="line">month--;</span><br><span class="line">day&#x3D;28;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">day-&#x3D;n;</span><br><span class="line">n&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if((month&#x3D;&#x3D;1)||(month&#x3D;&#x3D;8))</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;31)</span><br><span class="line">&#123;month</span><br><span class="line">--;</span><br><span class="line">if(month&#x3D;&#x3D;0)</span><br><span class="line">&#123;year</span><br><span class="line">--;month</span><br><span class="line">&#x3D;12;</span><br><span class="line">&#125;day</span><br><span class="line">&#x3D;31;n</span><br><span class="line">-&#x3D;31;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;day</span><br><span class="line">-&#x3D;n;n</span><br><span class="line">&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if((month&#x3D;&#x3D;5)||(month&#x3D;&#x3D;7)||(month&#x3D;&#x3D;10)||(month&#x3D;&#x3D;12))</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;31)</span><br><span class="line">&#123;month</span><br><span class="line">--;day</span><br><span class="line">&#x3D;30;n</span><br><span class="line">-&#x3D;31;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;day</span><br><span class="line">-&#x3D;n;n</span><br><span class="line">&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else if(month&#x3D;&#x3D;2)</span><br><span class="line">&#123;</span><br><span class="line">if(check(year))</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;29)</span><br><span class="line">&#123;n</span><br><span class="line">-&#x3D;29;day</span><br><span class="line">&#x3D;31;month</span><br><span class="line">--;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;day</span><br><span class="line">-&#x3D;n;n</span><br><span class="line">&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;28)</span><br><span class="line">&#123;n</span><br><span class="line">-&#x3D;28;day</span><br><span class="line">&#x3D;31;month</span><br><span class="line">--;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;day</span><br><span class="line">-&#x3D;n;n</span><br><span class="line">&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">if(n&gt;&#x3D;30)</span><br><span class="line">&#123;n</span><br><span class="line">-&#x3D;30;month</span><br><span class="line">--;day</span><br><span class="line">&#x3D;31;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;day</span><br><span class="line">-&#x3D;n;n</span><br><span class="line">&#x3D;0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int T;</span><br><span class="line">while(~scanf(&quot;%d&quot;,&amp;T))</span><br><span class="line">&#123;</span><br><span class="line">while(T--)</span><br><span class="line">&#123;</span><br><span class="line">int n;scanf</span><br><span class="line">(&quot;%d&quot;,&amp;n);up</span><br><span class="line">(n);printf</span><br><span class="line">(&quot;%04d&#x2F;%02d&#x2F;%02d &quot;,year,month,day);down</span><br><span class="line">(n);printf</span><br><span class="line">(&quot;%04d&#x2F;%02d&#x2F;%02d\n&quot;,year,month,day);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
